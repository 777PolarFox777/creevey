{
  "5b01bc03a9ecf3274d24591f068de4ffce9d8748": {
    "id": "5b01bc03a9ecf3274d24591f068de4ffce9d8748",
    "skip": false,
    "browser": "chrome",
    "testName": "updateArgs",
    "storyPath": [
      "KindA",
      "Dynamic Story Tests"
    ],
    "storyId": "kinda--dynamic-story-tests",
    "story": {
      "args": {},
      "componentId": "kinda",
      "title": "KindA",
      "kind": "KindA",
      "id": "kinda--dynamic-story-tests",
      "name": "Dynamic Story Tests",
      "story": "Dynamic Story Tests",
      "parameters": {
        "creevey": {
          "skip": {
            "TestA in browser": {
              "in": "browser",
              "tests": [
                "TestA"
              ]
            }
          },
          "tests": {
            "updateArgs": "async updateArgs() {\n        await this.updateStoryArgs({\n          content: 'test'\n        });\n      }"
          }
        },
        "framework": "react",
        "fileName": "./stories/KindA.stories.tsx",
        "__isArgsStory": true,
        "__id": "kinda--dynamic-story-tests",
        "args": {},
        "argTypes": {}
      },
      "initialArgs": {},
      "argTypes": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "7fa6eb0e6d7b60bdff1a989521881e1476cb2e66": {
    "id": "7fa6eb0e6d7b60bdff1a989521881e1476cb2e66",
    "skip": false,
    "browser": "chrome",
    "testName": "click",
    "storyPath": [
      "KindA",
      "Imported Tests"
    ],
    "storyId": "kinda--imported-tests",
    "story": {
      "args": {},
      "componentId": "kinda",
      "title": "KindA",
      "kind": "KindA",
      "id": "kinda--imported-tests",
      "name": "Imported Tests",
      "story": "Imported Tests",
      "parameters": {
        "creevey": {
          "skip": {
            "TestA in browser": {
                "in": "browser",
                "tests": [
                  "TestA"
                ]
              }
          },
          "tests": {
            "click": "async click() {}"
          }
        },
        "framework": "react",
        "fileName": "./stories/KindA.stories.tsx",
        "__isArgsStory": false,
        "__id": "kinda--imported-tests",
        "args": {},
        "argTypes": {}
      },
      "initialArgs": {},
      "argTypes": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "2fd0264d599e219a5bcd0e0f057c46eb3c0fb138": {
    "id": "2fd0264d599e219a5bcd0e0f057c46eb3c0fb138",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "KindA",
      "Skipped Tests"
    ],
    "storyId": "kinda--skipped-tests",
    "story": {
      "args": {},
      "componentId": "kinda",
      "title": "KindA",
      "kind": "KindA",
      "id": "kinda--skipped-tests",
      "name": "Skipped Tests",
      "story": "Skipped Tests",
      "parameters": {
        "creevey": {
          "skip": {
            "TestA in browser": {
              "in": "browser",
              "tests": [
                "TestA"
              ]
            },
            "testB in browser": {
              "in": "browser",
              "tests": [
                "testB"
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./stories/KindA.stories.tsx",
        "__isArgsStory": false,
        "__id": "kinda--skipped-tests",
        "args": {},
        "argTypes": {}
      },
      "initialArgs": {},
      "argTypes": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "ee4c11585e510cce9e2c9544454fb39072535a35": {
    "id": "ee4c11585e510cce9e2c9544454fb39072535a35",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "KindA",
      "Decorators"
    ],
    "storyId": "kinda--decorators",
    "story": {
      "args": {},
      "componentId": "kinda",
      "title": "KindA",
      "kind": "KindA",
      "id": "kinda--decorators",
      "name": "Decorators",
      "story": "Decorators",
      "parameters": {
        "creevey": {
          "skip": {
            "TestA in browser": {
              "in": "browser",
              "tests": [
                "TestA"
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./stories/KindA.stories.tsx",
        "__isArgsStory": false,
        "__id": "kinda--decorators",
        "args": {},
        "argTypes": {}
      },
      "initialArgs": {},
      "argTypes": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "230cf78513493eab436dc46cd4267575680140f3": {
    "id": "230cf78513493eab436dc46cd4267575680140f3",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "KindA",
      "Parameters"
    ],
    "storyId": "kinda--parameters",
    "story": {
      "args": {},
      "componentId": "kinda",
      "title": "KindA",
      "kind": "KindA",
      "id": "kinda--parameters",
      "name": "Parameters",
      "story": "Parameters",
      "parameters": {
        "creevey": {
          "skip": {
            "TestA in browser": {
                "in": "browser",
                "tests": [
                  "TestA"
                ]
              }
          }
        },
        "framework": "react",
        "fileName": "./stories/KindA.stories.tsx",
        "__isArgsStory": false,
        "__id": "kinda--parameters",
        "args": {},
        "argTypes": {}
      },
      "initialArgs": {},
      "argTypes": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "d23da9824993be60b86d13beca3e430979e12b2b": {
    "id": "d23da9824993be60b86d13beca3e430979e12b2b",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "KindB",
      "SubKind",
      "Story A"
    ],
    "storyId": "kindb-subkind--story-a",
    "story": {
      "args": {},
      "componentId": "kindb-subkind",
      "title": "KindB / SubKind",
      "kind": "KindB / SubKind",
      "id": "kindb-subkind--story-a",
      "name": "Story A",
      "story": "Story A",
      "parameters": {
        "creevey": {
          "skip": {
            "TestA in browser": {
              "in": "browser",
              "tests": [
                "TestA"
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./stories/KindB.stories.tsx",
        "__isArgsStory": false,
        "__id": "kindb-subkind--story-a",
        "args": {},
        "argTypes": {}
      },
      "initialArgs": {},
      "argTypes": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "547f2235f9a2d7631362bf318922cb4307a5b4d4": {
    "id": "547f2235f9a2d7631362bf318922cb4307a5b4d4",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "KindC",
      "Story A"
    ],
    "storyId": "kindc--story-a",
    "story": {
      "args": {},
      "componentId": "kindc",
      "title": "KindC",
      "kind": "KindC",
      "id": "kindc--story-a",
      "name": "Story A",
      "story": "Story A",
      "parameters": {
        "creevey": {
          "skip": {
            "TestA in browser": {
              "in": "browser",
              "tests": [
                "TestA"
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./stories/KindC.stories.tsx",
        "__isArgsStory": false,
        "__id": "kindc--story-a",
        "args": {},
        "argTypes": {}
      },
      "initialArgs": {},
      "argTypes": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "b15d4d73bc867905a8cb706131c4eeac53d99f2a": {
    "id": "b15d4d73bc867905a8cb706131c4eeac53d99f2a",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "KindD",
      "External Story"
    ],
    "storyId": "docs-kindd--external-story",
    "story": {
      "args": {},
      "componentId": "docs-kindd",
      "title": "Docs/KindD",
      "kind": "Docs/KindD",
      "id": "docs-kindd--external-story",
      "name": "External Story",
      "story": "External Story",
      "parameters": {
        "creevey": {
          "skip": {
            "TestA in browser": {
                "in": "browser",
                "tests": [
                  "TestA"
                ]
              }
          },
            "ignoreElements": [
              "img"
            ]
        },
        "framework": "react",
        "fileName": "./stories/KindD.stories.mdx",
        "__isArgsStory": false,
        "__id": "docs-kindd--external-story",
        "args": {},
        "argTypes": {}
      },
      "initialArgs": {},
      "argTypes": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "e25dd97ad95fc95e9fdf9ab1f55311333f08e890": {
    "id": "e25dd97ad95fc95e9fdf9ab1f55311333f08e890",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "KindD",
      "Skipped Tests"
    ],
    "storyId": "docs-kindd--skipped-tests",
    "story": {
      "args": {},
      "componentId": "docs-kindd",
      "title": "Docs/KindD",
      "kind": "Docs/KindD",
      "id": "docs-kindd--skipped-tests",
      "name": "Skipped Tests",
      "story": "Skipped Tests",
      "parameters": {
        "creevey": {
          "skip": {
            "TestA in browser": {
                "in": "browser",
                "tests": [
                  "TestA"
                ]
              }
          },
            "ignoreElements": [
              "img"
            ]
        },
        "framework": "react",
        "fileName": "./stories/KindD.stories.mdx",
        "__isArgsStory": false,
        "__id": "docs-kindd--skipped-tests",
        "args": {},
        "argTypes": {}
      },
      "initialArgs": {},
      "argTypes": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "4e2e625edcb3a9432873556e51246b9526d2660a": {
    "id": "4e2e625edcb3a9432873556e51246b9526d2660a",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "KindD",
      "StoryA"
    ],
    "storyId": "docs-kindd--story-a",
    "story": {
      "args": {},
      "componentId": "docs-kindd",
      "title": "Docs/KindD",
      "kind": "Docs/KindD",
      "id": "docs-kindd--story-a",
      "name": "StoryA",
      "story": "StoryA",
      "parameters": {
        "creevey": {
          "skip": {
            "TestA in browser": {
              "in": "browser",
              "tests": [
                "TestA"
              ]
            }
            },
          "ignoreElements": [
            "img"
          ],
          "captureElement": "mdx-by-children"
        },
        "framework": "react",
        "fileName": "./stories/KindD.stories.mdx",
        "__isArgsStory": false,
        "__id": "docs-kindd--story-a",
        "args": {},
        "argTypes": {}
      },
      "initialArgs": {},
      "argTypes": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  }
}