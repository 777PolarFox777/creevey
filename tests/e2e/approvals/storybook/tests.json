{
  "2a437f51206749c020e8413aa8508462e88bd3fb": {
    "id": "2a437f51206749c020e8413aa8508462e88bd3fb",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Settings",
      "AboutScreen",
      "up to date"
    ],
    "storyId": "ui-settings-aboutscreen--up-to-date",
    "story": {
      "id": "ui-settings-aboutscreen--up-to-date",
      "kind": "UI/Settings/AboutScreen",
      "name": "up to date",
      "story": "up to date",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/settings/about.stories.js",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "9e1e54d6a413af1f7af5a60d77c1da69c5ec803e": {
    "id": "9e1e54d6a413af1f7af5a60d77c1da69c5ec803e",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Settings",
      "AboutScreen",
      "old version race condition"
    ],
    "storyId": "ui-settings-aboutscreen--old-version-race-condition",
    "story": {
      "id": "ui-settings-aboutscreen--old-version-race-condition",
      "kind": "UI/Settings/AboutScreen",
      "name": "old version race condition",
      "story": "old version race condition",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/settings/about.stories.js",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "3530325cb6aba09d0b20311f382dc8054d125a37": {
    "id": "3530325cb6aba09d0b20311f382dc8054d125a37",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Settings",
      "AboutScreen",
      "new version required"
    ],
    "storyId": "ui-settings-aboutscreen--new-version-required",
    "story": {
      "id": "ui-settings-aboutscreen--new-version-required",
      "kind": "UI/Settings/AboutScreen",
      "name": "new version required",
      "story": "new version required",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/settings/about.stories.js",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "f8f4d1267a7db62acdc0cde1f9990bc254f2321d": {
    "id": "f8f4d1267a7db62acdc0cde1f9990bc254f2321d",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Settings",
      "AboutScreen",
      "failed to fetch new version"
    ],
    "storyId": "ui-settings-aboutscreen--failed-to-fetch-new-version",
    "story": {
      "id": "ui-settings-aboutscreen--failed-to-fetch-new-version",
      "kind": "UI/Settings/AboutScreen",
      "name": "failed to fetch new version",
      "story": "failed to fetch new version",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/settings/about.stories.js",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "a61857f2a9733a616f7772c1abe59a451a9ade24": {
    "id": "a61857f2a9733a616f7772c1abe59a451a9ade24",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Badge",
      "all badges"
    ],
    "storyId": "basics-badge--all-badges",
    "story": {
      "id": "basics-badge--all-badges",
      "kind": "Basics/Badge",
      "name": "all badges",
      "story": "all badges",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/Badge/Badge.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "39d02e631f9e3278c87559df5e71bc81b3868f21": {
    "id": "39d02e631f9e3278c87559df5e71bc81b3868f21",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Button",
      "all buttons"
    ],
    "storyId": "basics-button--all-buttons",
    "story": {
      "id": "basics-button--all-buttons",
      "kind": "Basics/Button",
      "name": "all buttons",
      "story": "all buttons",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/Button/Button.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "27a63042aedeb387cb891e7ce33eae73b5231bd1": {
    "id": "27a63042aedeb387cb891e7ce33eae73b5231bd1",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Brand",
      "StorybookIcon",
      "default"
    ],
    "storyId": "basics-brand-storybookicon--default",
    "story": {
      "id": "basics-brand-storybookicon--default",
      "kind": "Basics/Brand/StorybookIcon",
      "name": "default",
      "story": "default",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/brand/StorybookIcon.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "2b6118cae0e5f966e56be601fd4ac0a722c88dbc": {
    "id": "2b6118cae0e5f966e56be601fd4ac0a722c88dbc",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Form",
      "Field",
      "field"
    ],
    "storyId": "basics-form-field--field",
    "story": {
      "id": "basics-form-field--field",
      "kind": "Basics/Form/Field",
      "name": "field",
      "story": "field",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/form/form.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "9d96d2847b55efbb497bba7fe2959b7435e31433": {
    "id": "9d96d2847b55efbb497bba7fe2959b7435e31433",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Form",
      "Select",
      "sizes"
    ],
    "storyId": "basics-form-select--sizes",
    "story": {
      "id": "basics-form-select--sizes",
      "kind": "Basics/Form/Select",
      "name": "sizes",
      "story": "sizes",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/form/form.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "667ac4e236aa77aafbecaaab78e767051128c1c3": {
    "id": "667ac4e236aa77aafbecaaab78e767051128c1c3",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Form",
      "Select",
      "validations"
    ],
    "storyId": "basics-form-select--validations",
    "story": {
      "id": "basics-form-select--validations",
      "kind": "Basics/Form/Select",
      "name": "validations",
      "story": "validations",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/form/form.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "78eb907fffd1e508459c470dc2714df7b7f24f68": {
    "id": "78eb907fffd1e508459c470dc2714df7b7f24f68",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Form",
      "Button",
      "sizes"
    ],
    "storyId": "basics-form-button--sizes",
    "story": {
      "id": "basics-form-button--sizes",
      "kind": "Basics/Form/Button",
      "name": "sizes",
      "story": "sizes",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/form/form.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "30b7284fb8e7bd9ed911c4f124ebd2f0d755e9c5": {
    "id": "30b7284fb8e7bd9ed911c4f124ebd2f0d755e9c5",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Form",
      "Button",
      "validations"
    ],
    "storyId": "basics-form-button--validations",
    "story": {
      "id": "basics-form-button--validations",
      "kind": "Basics/Form/Button",
      "name": "validations",
      "story": "validations",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/form/form.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "7028cee1d5653f917f8e7c484f00a5466880df01": {
    "id": "7028cee1d5653f917f8e7c484f00a5466880df01",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Form",
      "Textarea",
      "sizes"
    ],
    "storyId": "basics-form-textarea--sizes",
    "story": {
      "id": "basics-form-textarea--sizes",
      "kind": "Basics/Form/Textarea",
      "name": "sizes",
      "story": "sizes",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/form/form.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "880efad1198b4ced5a71fdd4bc2fa2dbb781c661": {
    "id": "880efad1198b4ced5a71fdd4bc2fa2dbb781c661",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Form",
      "Textarea",
      "validations"
    ],
    "storyId": "basics-form-textarea--validations",
    "story": {
      "id": "basics-form-textarea--validations",
      "kind": "Basics/Form/Textarea",
      "name": "validations",
      "story": "validations",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/form/form.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "5167a6c5b75a548aafb655bb4614a888a42ac288": {
    "id": "5167a6c5b75a548aafb655bb4614a888a42ac288",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Form",
      "Textarea",
      "alignment"
    ],
    "storyId": "basics-form-textarea--alignment",
    "story": {
      "id": "basics-form-textarea--alignment",
      "kind": "Basics/Form/Textarea",
      "name": "alignment",
      "story": "alignment",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/form/form.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "f5da2b9918ce2424707ca12386b4d5886acf3188": {
    "id": "f5da2b9918ce2424707ca12386b4d5886acf3188",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Form",
      "Textarea",
      "height"
    ],
    "storyId": "basics-form-textarea--height",
    "story": {
      "id": "basics-form-textarea--height",
      "kind": "Basics/Form/Textarea",
      "name": "height",
      "story": "height",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/form/form.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "7efcddbd62a83db7113cd09a99c5309a4129c85a": {
    "id": "7efcddbd62a83db7113cd09a99c5309a4129c85a",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Form",
      "Input",
      "sizes"
    ],
    "storyId": "basics-form-input--sizes",
    "story": {
      "id": "basics-form-input--sizes",
      "kind": "Basics/Form/Input",
      "name": "sizes",
      "story": "sizes",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/form/form.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "9b5331e63bb8245a472b7168e2da24362899f2f4": {
    "id": "9b5331e63bb8245a472b7168e2da24362899f2f4",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Form",
      "Input",
      "validations"
    ],
    "storyId": "basics-form-input--validations",
    "story": {
      "id": "basics-form-input--validations",
      "kind": "Basics/Form/Input",
      "name": "validations",
      "story": "validations",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/form/form.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "8eaf040c8e0efcd5a971e7383327fab0d9bbda3d": {
    "id": "8eaf040c8e0efcd5a971e7383327fab0d9bbda3d",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Form",
      "Input",
      "alignment"
    ],
    "storyId": "basics-form-input--alignment",
    "story": {
      "id": "basics-form-input--alignment",
      "kind": "Basics/Form/Input",
      "name": "alignment",
      "story": "alignment",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/form/form.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "05da29e9d328f91c5187217a78133de694e1ccab": {
    "id": "05da29e9d328f91c5187217a78133de694e1ccab",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Icon",
      "labels"
    ],
    "storyId": "basics-icon--labels",
    "story": {
      "id": "basics-icon--labels",
      "kind": "Basics/Icon",
      "name": "labels",
      "story": "labels",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/icon/icon.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "f4de21cc6b9a6fb517b5ffeb51ab035d587796c6": {
    "id": "f4de21cc6b9a6fb517b5ffeb51ab035d587796c6",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Icon",
      "no labels"
    ],
    "storyId": "basics-icon--no-labels",
    "story": {
      "id": "basics-icon--no-labels",
      "kind": "Basics/Icon",
      "name": "no labels",
      "story": "no labels",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/icon/icon.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "92e689366b5bc2ded4e08a97534c6c7ca743c701": {
    "id": "92e689366b5bc2ded4e08a97534c6c7ca743c701",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Spaced",
      "row"
    ],
    "storyId": "basics-spaced--row",
    "story": {
      "id": "basics-spaced--row",
      "kind": "Basics/Spaced",
      "name": "row",
      "story": "row",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/spaced/Spaced.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "06c94782223b61b7681b41aeb55d2ccdbc522dfa": {
    "id": "06c94782223b61b7681b41aeb55d2ccdbc522dfa",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Spaced",
      "row outer"
    ],
    "storyId": "basics-spaced--row-outer",
    "story": {
      "id": "basics-spaced--row-outer",
      "kind": "Basics/Spaced",
      "name": "row outer",
      "story": "row outer",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/spaced/Spaced.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "e524184f98dc5052a00fe84ea0788a848b56970b": {
    "id": "e524184f98dc5052a00fe84ea0788a848b56970b",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Spaced",
      "row multiply"
    ],
    "storyId": "basics-spaced--row-multiply",
    "story": {
      "id": "basics-spaced--row-multiply",
      "kind": "Basics/Spaced",
      "name": "row multiply",
      "story": "row multiply",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/spaced/Spaced.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "ec8ce815082f9b4a0ddc22ac8136a2b038e40bdf": {
    "id": "ec8ce815082f9b4a0ddc22ac8136a2b038e40bdf",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Spaced",
      "col"
    ],
    "storyId": "basics-spaced--col",
    "story": {
      "id": "basics-spaced--col",
      "kind": "Basics/Spaced",
      "name": "col",
      "story": "col",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/spaced/Spaced.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "94b25f6fdb4fab23a000d433c9fcc9b4483bb1ab": {
    "id": "94b25f6fdb4fab23a000d433c9fcc9b4483bb1ab",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Spaced",
      "col outer"
    ],
    "storyId": "basics-spaced--col-outer",
    "story": {
      "id": "basics-spaced--col-outer",
      "kind": "Basics/Spaced",
      "name": "col outer",
      "story": "col outer",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/spaced/Spaced.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "c90695ddc1bab8527fddd7a62765a2f068d22567": {
    "id": "c90695ddc1bab8527fddd7a62765a2f068d22567",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "SyntaxHighlighter",
      "bash"
    ],
    "storyId": "basics-syntaxhighlighter--bash",
    "story": {
      "id": "basics-syntaxhighlighter--bash",
      "kind": "Basics/SyntaxHighlighter",
      "name": "bash",
      "story": "bash",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/syntaxhighlighter/syntaxhighlighter.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "11302540340ad124c9984465077100d55246a4eb": {
    "id": "11302540340ad124c9984465077100d55246a4eb",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "SyntaxHighlighter",
      "css"
    ],
    "storyId": "basics-syntaxhighlighter--css",
    "story": {
      "id": "basics-syntaxhighlighter--css",
      "kind": "Basics/SyntaxHighlighter",
      "name": "css",
      "story": "css",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/syntaxhighlighter/syntaxhighlighter.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "4285188526046a9b3d375d1ea15d10feed214a17": {
    "id": "4285188526046a9b3d375d1ea15d10feed214a17",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "SyntaxHighlighter",
      "json"
    ],
    "storyId": "basics-syntaxhighlighter--json",
    "story": {
      "id": "basics-syntaxhighlighter--json",
      "kind": "Basics/SyntaxHighlighter",
      "name": "json",
      "story": "json",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/syntaxhighlighter/syntaxhighlighter.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "3f1f252d481d823c6f1f7352d42fcf302c371188": {
    "id": "3f1f252d481d823c6f1f7352d42fcf302c371188",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "SyntaxHighlighter",
      "markdown"
    ],
    "storyId": "basics-syntaxhighlighter--markdown",
    "story": {
      "id": "basics-syntaxhighlighter--markdown",
      "kind": "Basics/SyntaxHighlighter",
      "name": "markdown",
      "story": "markdown",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/syntaxhighlighter/syntaxhighlighter.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "a255f6ac2e2388e9298ab3490fb16c85426e0ec9": {
    "id": "a255f6ac2e2388e9298ab3490fb16c85426e0ec9",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "SyntaxHighlighter",
      "yaml"
    ],
    "storyId": "basics-syntaxhighlighter--yaml",
    "story": {
      "id": "basics-syntaxhighlighter--yaml",
      "kind": "Basics/SyntaxHighlighter",
      "name": "yaml",
      "story": "yaml",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/syntaxhighlighter/syntaxhighlighter.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "eb68ab28a6898afc71a987a3886a96fe5c086eb0": {
    "id": "eb68ab28a6898afc71a987a3886a96fe5c086eb0",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "SyntaxHighlighter",
      "jsx"
    ],
    "storyId": "basics-syntaxhighlighter--jsx",
    "story": {
      "id": "basics-syntaxhighlighter--jsx",
      "kind": "Basics/SyntaxHighlighter",
      "name": "jsx",
      "story": "jsx",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/syntaxhighlighter/syntaxhighlighter.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "29401bfd3267229dce29abb528d4ed39e9420e73": {
    "id": "29401bfd3267229dce29abb528d4ed39e9420e73",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "SyntaxHighlighter",
      "js"
    ],
    "storyId": "basics-syntaxhighlighter--js",
    "story": {
      "id": "basics-syntaxhighlighter--js",
      "kind": "Basics/SyntaxHighlighter",
      "name": "js",
      "story": "js",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/syntaxhighlighter/syntaxhighlighter.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "3b2d82a0a0e4802d7af0899b11672672de6bdf50": {
    "id": "3b2d82a0a0e4802d7af0899b11672672de6bdf50",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "SyntaxHighlighter",
      "graphql"
    ],
    "storyId": "basics-syntaxhighlighter--graphql",
    "story": {
      "id": "basics-syntaxhighlighter--graphql",
      "kind": "Basics/SyntaxHighlighter",
      "name": "graphql",
      "story": "graphql",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/syntaxhighlighter/syntaxhighlighter.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "e12b5654f82d6323ed6ce306e536cc259eb375e2": {
    "id": "e12b5654f82d6323ed6ce306e536cc259eb375e2",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "SyntaxHighlighter",
      "unsupported"
    ],
    "storyId": "basics-syntaxhighlighter--unsupported",
    "story": {
      "id": "basics-syntaxhighlighter--unsupported",
      "kind": "Basics/SyntaxHighlighter",
      "name": "unsupported",
      "story": "unsupported",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/syntaxhighlighter/syntaxhighlighter.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "a9155dd66beb3273a7c9183cd045a615fc33b170": {
    "id": "a9155dd66beb3273a7c9183cd045a615fc33b170",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "SyntaxHighlighter",
      "dark unsupported"
    ],
    "storyId": "basics-syntaxhighlighter--dark-unsupported",
    "story": {
      "id": "basics-syntaxhighlighter--dark-unsupported",
      "kind": "Basics/SyntaxHighlighter",
      "name": "dark unsupported",
      "story": "dark unsupported",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/syntaxhighlighter/syntaxhighlighter.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "141bf8bc2fc081968a881376c11e0e85b18804c1": {
    "id": "141bf8bc2fc081968a881376c11e0e85b18804c1",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "SyntaxHighlighter",
      "story"
    ],
    "storyId": "basics-syntaxhighlighter--story",
    "story": {
      "id": "basics-syntaxhighlighter--story",
      "kind": "Basics/SyntaxHighlighter",
      "name": "story",
      "story": "story",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/syntaxhighlighter/syntaxhighlighter.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "0b3d5be3d6dec7ac3e372fa7acc1836d619eb1eb": {
    "id": "0b3d5be3d6dec7ac3e372fa7acc1836d619eb1eb",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "SyntaxHighlighter",
      "bordered & copy-able"
    ],
    "storyId": "basics-syntaxhighlighter--bordered-copy-able",
    "story": {
      "id": "basics-syntaxhighlighter--bordered-copy-able",
      "kind": "Basics/SyntaxHighlighter",
      "name": "bordered & copy-able",
      "story": "bordered & copy-able",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/syntaxhighlighter/syntaxhighlighter.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "b38444ec938427ffe1c594356c7fc8cfcaf2d605": {
    "id": "b38444ec938427ffe1c594356c7fc8cfcaf2d605",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "SyntaxHighlighter",
      "padded"
    ],
    "storyId": "basics-syntaxhighlighter--padded",
    "story": {
      "id": "basics-syntaxhighlighter--padded",
      "kind": "Basics/SyntaxHighlighter",
      "name": "padded",
      "story": "padded",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/syntaxhighlighter/syntaxhighlighter.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "cc658abc68ecca69ccc0dc13abf4bdf8bfa5c26f": {
    "id": "cc658abc68ecca69ccc0dc13abf4bdf8bfa5c26f",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "SyntaxHighlighter",
      "showLineNumbers"
    ],
    "storyId": "basics-syntaxhighlighter--showlinenumbers",
    "story": {
      "id": "basics-syntaxhighlighter--showlinenumbers",
      "kind": "Basics/SyntaxHighlighter",
      "name": "showLineNumbers",
      "story": "showLineNumbers",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/syntaxhighlighter/syntaxhighlighter.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "85c6e944c6aec42658114e50ce26952564915a85": {
    "id": "85c6e944c6aec42658114e50ce26952564915a85",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Tabs",
      "stateful - static"
    ],
    "storyId": "basics-tabs--stateful-static",
    "story": {
      "id": "basics-tabs--stateful-static",
      "kind": "Basics/Tabs",
      "name": "stateful - static",
      "story": "stateful - static",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/tabs/tabs.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "88f86c7218f01b22e2682e6e1bd4a4a23abe1315": {
    "id": "88f86c7218f01b22e2682e6e1bd4a4a23abe1315",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Tabs",
      "stateful - static with set button text colors"
    ],
    "storyId": "basics-tabs--stateful-static-with-set-button-text-colors",
    "story": {
      "id": "basics-tabs--stateful-static-with-set-button-text-colors",
      "kind": "Basics/Tabs",
      "name": "stateful - static with set button text colors",
      "story": "stateful - static with set button text colors",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/tabs/tabs.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "1fd54bcc8b89b77abe422ce28c690ea9bf94d428": {
    "id": "1fd54bcc8b89b77abe422ce28c690ea9bf94d428",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Tabs",
      "stateful - static with set backgroundColor"
    ],
    "storyId": "basics-tabs--stateful-static-with-set-backgroundcolor",
    "story": {
      "id": "basics-tabs--stateful-static-with-set-backgroundcolor",
      "kind": "Basics/Tabs",
      "name": "stateful - static with set backgroundColor",
      "story": "stateful - static with set backgroundColor",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/tabs/tabs.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "8266469dd8e908e54d208dd503a885c843f1106b": {
    "id": "8266469dd8e908e54d208dd503a885c843f1106b",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Tabs",
      "stateful - dynamic"
    ],
    "storyId": "basics-tabs--stateful-dynamic",
    "story": {
      "id": "basics-tabs--stateful-dynamic",
      "kind": "Basics/Tabs",
      "name": "stateful - dynamic",
      "story": "stateful - dynamic",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/tabs/tabs.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "379cdb41bd434f8efeedd0dc91b71cfda10aef9b": {
    "id": "379cdb41bd434f8efeedd0dc91b71cfda10aef9b",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Tabs",
      "stateful - no initial"
    ],
    "storyId": "basics-tabs--stateful-no-initial",
    "story": {
      "id": "basics-tabs--stateful-no-initial",
      "kind": "Basics/Tabs",
      "name": "stateful - no initial",
      "story": "stateful - no initial",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/tabs/tabs.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "1205e1d734694e5c02f870e25f7481fd710afeb0": {
    "id": "1205e1d734694e5c02f870e25f7481fd710afeb0",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Tabs",
      "stateless - bordered"
    ],
    "storyId": "basics-tabs--stateless-bordered",
    "story": {
      "id": "basics-tabs--stateless-bordered",
      "kind": "Basics/Tabs",
      "name": "stateless - bordered",
      "story": "stateless - bordered",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/tabs/tabs.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "42658d3b79289a92e08f22d041edf91d51a56bb1": {
    "id": "42658d3b79289a92e08f22d041edf91d51a56bb1",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Tabs",
      "stateless - with tools"
    ],
    "storyId": "basics-tabs--stateless-with-tools",
    "story": {
      "id": "basics-tabs--stateless-with-tools",
      "kind": "Basics/Tabs",
      "name": "stateless - with tools",
      "story": "stateless - with tools",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/tabs/tabs.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "9adf67526d47c45eae384e4e314be7894f2fc307": {
    "id": "9adf67526d47c45eae384e4e314be7894f2fc307",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Tabs",
      "stateless - absolute"
    ],
    "storyId": "basics-tabs--stateless-absolute",
    "story": {
      "id": "basics-tabs--stateless-absolute",
      "kind": "Basics/Tabs",
      "name": "stateless - absolute",
      "story": "stateless - absolute",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/tabs/tabs.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "0771418775a1d7dc528e1ae2a5a9e243dc2c0621": {
    "id": "0771418775a1d7dc528e1ae2a5a9e243dc2c0621",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Tabs",
      "stateless - absolute bordered"
    ],
    "storyId": "basics-tabs--stateless-absolute-bordered",
    "story": {
      "id": "basics-tabs--stateless-absolute-bordered",
      "kind": "Basics/Tabs",
      "name": "stateless - absolute bordered",
      "story": "stateless - absolute bordered",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/tabs/tabs.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "1b8e9cd3231af2aff84961890a1d6ed1e562d7f2": {
    "id": "1b8e9cd3231af2aff84961890a1d6ed1e562d7f2",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Tabs",
      "stateless - empty"
    ],
    "storyId": "basics-tabs--stateless-empty",
    "story": {
      "id": "basics-tabs--stateless-empty",
      "kind": "Basics/Tabs",
      "name": "stateless - empty",
      "story": "stateless - empty",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/tabs/tabs.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "5978c54b560a7916ea921651876abb8dd603dc2f": {
    "id": "5978c54b560a7916ea921651876abb8dd603dc2f",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "basics",
      "Tooltip",
      "ListItem",
      "all"
    ],
    "storyId": "basics-tooltip-listitem--all",
    "story": {
      "id": "basics-tooltip-listitem--all",
      "kind": "basics/Tooltip/ListItem",
      "name": "all",
      "story": "all",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/tooltip/ListItem.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "e6b0d953e40e294517b586b6564b90b2d5091a68": {
    "id": "e6b0d953e40e294517b586b6564b90b2d5091a68",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "basics",
      "Tooltip",
      "ListItem",
      "loading"
    ],
    "storyId": "basics-tooltip-listitem--loading",
    "story": {
      "id": "basics-tooltip-listitem--loading",
      "kind": "basics/Tooltip/ListItem",
      "name": "loading",
      "story": "loading",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/tooltip/ListItem.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "b3123afc420561c08a74e7dcfa537d45ae1b4197": {
    "id": "b3123afc420561c08a74e7dcfa537d45ae1b4197",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "basics",
      "Tooltip",
      "ListItem",
      "default"
    ],
    "storyId": "basics-tooltip-listitem--default",
    "story": {
      "id": "basics-tooltip-listitem--default",
      "kind": "basics/Tooltip/ListItem",
      "name": "default",
      "story": "default",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/tooltip/ListItem.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "154eeabed94f42d22cc37ea86a96618c81f0ca6c": {
    "id": "154eeabed94f42d22cc37ea86a96618c81f0ca6c",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "basics",
      "Tooltip",
      "ListItem",
      "default icon"
    ],
    "storyId": "basics-tooltip-listitem--default-icon",
    "story": {
      "id": "basics-tooltip-listitem--default-icon",
      "kind": "basics/Tooltip/ListItem",
      "name": "default icon",
      "story": "default icon",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/tooltip/ListItem.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "31e4707db3adec2bba4908bd0d8bc1cf57720c82": {
    "id": "31e4707db3adec2bba4908bd0d8bc1cf57720c82",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "basics",
      "Tooltip",
      "ListItem",
      "active icon"
    ],
    "storyId": "basics-tooltip-listitem--active-icon",
    "story": {
      "id": "basics-tooltip-listitem--active-icon",
      "kind": "basics/Tooltip/ListItem",
      "name": "active icon",
      "story": "active icon",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/tooltip/ListItem.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "33c05a2b3a74b1bedd9d6929a0c463a24f3118ab": {
    "id": "33c05a2b3a74b1bedd9d6929a0c463a24f3118ab",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "basics",
      "Tooltip",
      "ListItem",
      "w/positions"
    ],
    "storyId": "basics-tooltip-listitem--w-positions",
    "story": {
      "id": "basics-tooltip-listitem--w-positions",
      "kind": "basics/Tooltip/ListItem",
      "name": "w/positions",
      "story": "w/positions",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/tooltip/ListItem.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "ebb9e792682cc69d30ff9368b91090d731f94981": {
    "id": "ebb9e792682cc69d30ff9368b91090d731f94981",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "basics",
      "Tooltip",
      "ListItem",
      "w/positions active"
    ],
    "storyId": "basics-tooltip-listitem--w-positions-active",
    "story": {
      "id": "basics-tooltip-listitem--w-positions-active",
      "kind": "basics/Tooltip/ListItem",
      "name": "w/positions active",
      "story": "w/positions active",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/tooltip/ListItem.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "644de63516bd2d9d4df793aa0fa9cae665eb47a8": {
    "id": "644de63516bd2d9d4df793aa0fa9cae665eb47a8",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "basics",
      "Tooltip",
      "ListItem",
      "disabled"
    ],
    "storyId": "basics-tooltip-listitem--disabled",
    "story": {
      "id": "basics-tooltip-listitem--disabled",
      "kind": "basics/Tooltip/ListItem",
      "name": "disabled",
      "story": "disabled",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/tooltip/ListItem.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "828154d51f7a754d70bdd069223bb312e98e8e56": {
    "id": "828154d51f7a754d70bdd069223bb312e98e8e56",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "basics",
      "Tooltip",
      "Tooltip",
      "basic, default"
    ],
    "storyId": "basics-tooltip-tooltip--basic-default",
    "story": {
      "id": "basics-tooltip-tooltip--basic-default",
      "kind": "basics/Tooltip/Tooltip",
      "name": "basic, default",
      "story": "basic, default",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/tooltip/Tooltip.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "14bfb22a6d0d5f607b969b49305e3e4226c1be03": {
    "id": "14bfb22a6d0d5f607b969b49305e3e4226c1be03",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "basics",
      "Tooltip",
      "Tooltip",
      "basic, default, bottom"
    ],
    "storyId": "basics-tooltip-tooltip--basic-default-bottom",
    "story": {
      "id": "basics-tooltip-tooltip--basic-default-bottom",
      "kind": "basics/Tooltip/Tooltip",
      "name": "basic, default, bottom",
      "story": "basic, default, bottom",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/tooltip/Tooltip.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "4054ca925155ea107e35fb8caefd4b17012f0e57": {
    "id": "4054ca925155ea107e35fb8caefd4b17012f0e57",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "basics",
      "Tooltip",
      "Tooltip",
      "basic, default, left"
    ],
    "storyId": "basics-tooltip-tooltip--basic-default-left",
    "story": {
      "id": "basics-tooltip-tooltip--basic-default-left",
      "kind": "basics/Tooltip/Tooltip",
      "name": "basic, default, left",
      "story": "basic, default, left",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/tooltip/Tooltip.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "c5da467d7256444a337345fdbc8561cf85caeb01": {
    "id": "c5da467d7256444a337345fdbc8561cf85caeb01",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "basics",
      "Tooltip",
      "Tooltip",
      "basic, default, right"
    ],
    "storyId": "basics-tooltip-tooltip--basic-default-right",
    "story": {
      "id": "basics-tooltip-tooltip--basic-default-right",
      "kind": "basics/Tooltip/Tooltip",
      "name": "basic, default, right",
      "story": "basic, default, right",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/tooltip/Tooltip.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "02e6d8fbf722c973edc3011387d12859347b6507": {
    "id": "02e6d8fbf722c973edc3011387d12859347b6507",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "basics",
      "Tooltip",
      "Tooltip",
      "no chrome"
    ],
    "storyId": "basics-tooltip-tooltip--no-chrome",
    "story": {
      "id": "basics-tooltip-tooltip--no-chrome",
      "kind": "basics/Tooltip/Tooltip",
      "name": "no chrome",
      "story": "no chrome",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/tooltip/Tooltip.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "96421367eccb06515bdd0783e7bbbee0753619a7": {
    "id": "96421367eccb06515bdd0783e7bbbee0753619a7",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "basics",
      "Tooltip",
      "TooltipLinkList",
      "links"
    ],
    "storyId": "basics-tooltip-tooltiplinklist--links",
    "story": {
      "id": "basics-tooltip-tooltiplinklist--links",
      "kind": "basics/Tooltip/TooltipLinkList",
      "name": "links",
      "story": "links",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/tooltip/TooltipLinkList.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "2afc8cf7d711272d080e8af57db1ac68e3266113": {
    "id": "2afc8cf7d711272d080e8af57db1ac68e3266113",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "basics",
      "Tooltip",
      "TooltipLinkList",
      "links and callback"
    ],
    "storyId": "basics-tooltip-tooltiplinklist--links-and-callback",
    "story": {
      "id": "basics-tooltip-tooltiplinklist--links-and-callback",
      "kind": "basics/Tooltip/TooltipLinkList",
      "name": "links and callback",
      "story": "links and callback",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/tooltip/TooltipLinkList.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "eefb4ffe008faf54aaf336c53c793687db1d2111": {
    "id": "eefb4ffe008faf54aaf336c53c793687db1d2111",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "basics",
      "Tooltip",
      "TooltipMessage",
      "default"
    ],
    "storyId": "basics-tooltip-tooltipmessage--default",
    "story": {
      "id": "basics-tooltip-tooltipmessage--default",
      "kind": "basics/Tooltip/TooltipMessage",
      "name": "default",
      "story": "default",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/tooltip/TooltipMessage.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "fe9046d3ee45868fd767570e83104349343e4813": {
    "id": "fe9046d3ee45868fd767570e83104349343e4813",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "basics",
      "Tooltip",
      "TooltipMessage",
      "with link"
    ],
    "storyId": "basics-tooltip-tooltipmessage--with-link",
    "story": {
      "id": "basics-tooltip-tooltipmessage--with-link",
      "kind": "basics/Tooltip/TooltipMessage",
      "name": "with link",
      "story": "with link",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/tooltip/TooltipMessage.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "7c1a882efc177e6b9956e745f893d68bee641b0b": {
    "id": "7c1a882efc177e6b9956e745f893d68bee641b0b",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "basics",
      "Tooltip",
      "TooltipMessage",
      "with links"
    ],
    "storyId": "basics-tooltip-tooltipmessage--with-links",
    "story": {
      "id": "basics-tooltip-tooltipmessage--with-links",
      "kind": "basics/Tooltip/TooltipMessage",
      "name": "with links",
      "story": "with links",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/tooltip/TooltipMessage.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "52aafb1df56704929a23b5211e27b3aab8909771": {
    "id": "52aafb1df56704929a23b5211e27b3aab8909771",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "basics",
      "Tooltip",
      "TooltipMessage",
      "minimal message"
    ],
    "storyId": "basics-tooltip-tooltipmessage--minimal-message",
    "story": {
      "id": "basics-tooltip-tooltipmessage--minimal-message",
      "kind": "basics/Tooltip/TooltipMessage",
      "name": "minimal message",
      "story": "minimal message",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/tooltip/TooltipMessage.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "bcbf5db5521a65484def5dd59e5074c009f4aaa6": {
    "id": "bcbf5db5521a65484def5dd59e5074c009f4aaa6",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "basics",
      "Tooltip",
      "TooltipNote",
      "default"
    ],
    "storyId": "basics-tooltip-tooltipnote--default",
    "story": {
      "id": "basics-tooltip-tooltipnote--default",
      "kind": "basics/Tooltip/TooltipNote",
      "name": "default",
      "story": "default",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/tooltip/TooltipNote.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "0ac01d23080b4acc09c92f0964a5dbef723b6d74": {
    "id": "0ac01d23080b4acc09c92f0964a5dbef723b6d74",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "basics",
      "Tooltip",
      "WithTooltip",
      "simple hover"
    ],
    "storyId": "basics-tooltip-withtooltip--simple-hover",
    "story": {
      "id": "basics-tooltip-withtooltip--simple-hover",
      "kind": "basics/Tooltip/WithTooltip",
      "name": "simple hover",
      "story": "simple hover",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/tooltip/WithTooltip.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "757e94d11727deea1677c185740fe50fe546b549": {
    "id": "757e94d11727deea1677c185740fe50fe546b549",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "basics",
      "Tooltip",
      "WithTooltip",
      "simple hover, functional"
    ],
    "storyId": "basics-tooltip-withtooltip--simple-hover-functional",
    "story": {
      "id": "basics-tooltip-withtooltip--simple-hover-functional",
      "kind": "basics/Tooltip/WithTooltip",
      "name": "simple hover, functional",
      "story": "simple hover, functional",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/tooltip/WithTooltip.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "01c95242e0b37b47bf0e06be63468a16460259c9": {
    "id": "01c95242e0b37b47bf0e06be63468a16460259c9",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "basics",
      "Tooltip",
      "WithTooltip",
      "simple click"
    ],
    "storyId": "basics-tooltip-withtooltip--simple-click",
    "story": {
      "id": "basics-tooltip-withtooltip--simple-click",
      "kind": "basics/Tooltip/WithTooltip",
      "name": "simple click",
      "story": "simple click",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/tooltip/WithTooltip.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "8c679c40d8916276ec7c1613b2e99c131a6f8095": {
    "id": "8c679c40d8916276ec7c1613b2e99c131a6f8095",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "basics",
      "Tooltip",
      "WithTooltip",
      "simple click start open"
    ],
    "storyId": "basics-tooltip-withtooltip--simple-click-start-open",
    "story": {
      "id": "basics-tooltip-withtooltip--simple-click-start-open",
      "kind": "basics/Tooltip/WithTooltip",
      "name": "simple click start open",
      "story": "simple click start open",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/tooltip/WithTooltip.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "6468d878cb1ca5de2c2cfea225765e531ddd149e": {
    "id": "6468d878cb1ca5de2c2cfea225765e531ddd149e",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "basics",
      "Tooltip",
      "WithTooltip",
      "simple click closeOnClick"
    ],
    "storyId": "basics-tooltip-withtooltip--simple-click-closeonclick",
    "story": {
      "id": "basics-tooltip-withtooltip--simple-click-closeonclick",
      "kind": "basics/Tooltip/WithTooltip",
      "name": "simple click closeOnClick",
      "story": "simple click closeOnClick",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/tooltip/WithTooltip.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "39b437ef75bfcb88239c4c9a2feae7fe1cbfe8e5": {
    "id": "39b437ef75bfcb88239c4c9a2feae7fe1cbfe8e5",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "basics",
      "Tooltip",
      "WithTooltip",
      "no chrome"
    ],
    "storyId": "basics-tooltip-withtooltip--no-chrome",
    "story": {
      "id": "basics-tooltip-withtooltip--no-chrome",
      "kind": "basics/Tooltip/WithTooltip",
      "name": "no chrome",
      "story": "no chrome",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/tooltip/WithTooltip.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "ea650af7aa378153deccfb16523d2620859065e8": {
    "id": "ea650af7aa378153deccfb16523d2620859065e8",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Link",
      "cancel w/ onClick"
    ],
    "storyId": "basics-link--cancel-w-onclick",
    "story": {
      "id": "basics-link--cancel-w-onclick",
      "kind": "Basics/Link",
      "name": "cancel w/ onClick",
      "story": "cancel w/ onClick",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/typography/link/link.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "0d41a4636f4bfb8e57cb49ca38bfe95c13ce39ce": {
    "id": "0d41a4636f4bfb8e57cb49ca38bfe95c13ce39ce",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Link",
      "cancel w/ href"
    ],
    "storyId": "basics-link--cancel-w-href",
    "story": {
      "id": "basics-link--cancel-w-href",
      "kind": "Basics/Link",
      "name": "cancel w/ href",
      "story": "cancel w/ href",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/typography/link/link.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "0407d92a4e3e3047b762bfe1ce256e2eece992c5": {
    "id": "0407d92a4e3e3047b762bfe1ce256e2eece992c5",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Link",
      "no-cancel w/ onClick"
    ],
    "storyId": "basics-link--no-cancel-w-onclick",
    "story": {
      "id": "basics-link--no-cancel-w-onclick",
      "kind": "Basics/Link",
      "name": "no-cancel w/ onClick",
      "story": "no-cancel w/ onClick",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/typography/link/link.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "e6860ba8f40e1b1c650751c451b86372912cf96c": {
    "id": "e6860ba8f40e1b1c650751c451b86372912cf96c",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Link",
      "no-cancel w/ href"
    ],
    "storyId": "basics-link--no-cancel-w-href",
    "story": {
      "id": "basics-link--no-cancel-w-href",
      "kind": "Basics/Link",
      "name": "no-cancel w/ href",
      "story": "no-cancel w/ href",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/typography/link/link.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "748b55905560f9fe01269f5c97e046497f3d589a": {
    "id": "748b55905560f9fe01269f5c97e046497f3d589a",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Link",
      "styled links"
    ],
    "storyId": "basics-link--styled-links",
    "story": {
      "id": "basics-link--styled-links",
      "kind": "Basics/Link",
      "name": "styled links",
      "story": "styled links",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/typography/link/link.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "72e01c4f1f10df5b9b5556e72cfab55c9bc9b993": {
    "id": "72e01c4f1f10df5b9b5556e72cfab55c9bc9b993",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "typography",
      "all"
    ],
    "storyId": "basics-typography--all",
    "story": {
      "id": "basics-typography--all",
      "kind": "Basics/typography",
      "name": "all",
      "story": "all",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/typography/typography.stories.tsx",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "777381af29cb9ef8e311bc9b29133134a1b2b4f2": {
    "id": "777381af29cb9ef8e311bc9b29133134a1b2b4f2",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Unicode",
      "ðŸ˜€"
    ],
    "storyId": "core-unicode--ðŸ˜€",
    "story": {
      "id": "core-unicode--ðŸ˜€",
      "kind": "Core/Unicode",
      "name": "ðŸ˜€",
      "story": "ðŸ˜€",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/unicode.stories.js",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "72ed312638a0040cfc1f1e6a6ba3d22e6a097e01": {
    "id": "72ed312638a0040cfc1f1e6a6ba3d22e6a097e01",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Unicode",
      "ÐšÐ½Ð¾Ð¿ÐºÐ¸"
    ],
    "storyId": "core-unicode--ÐºÐ½Ð¾Ð¿ÐºÐ¸",
    "story": {
      "id": "core-unicode--ÐºÐ½Ð¾Ð¿ÐºÐ¸",
      "kind": "Core/Unicode",
      "name": "ÐšÐ½Ð¾Ð¿ÐºÐ¸",
      "story": "ÐšÐ½Ð¾Ð¿ÐºÐ¸",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/unicode.stories.js",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "63af5ffca5aaeda1896f10a30f01643462c86004": {
    "id": "63af5ffca5aaeda1896f10a30f01643462c86004",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Unicode",
      "ë°”ë³´"
    ],
    "storyId": "core-unicode--ë°”ë³´",
    "story": {
      "id": "core-unicode--ë°”ë³´",
      "kind": "Core/Unicode",
      "name": "ë°”ë³´",
      "story": "ë°”ë³´",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/unicode.stories.js",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "fef0c960596fa02ed5c7d0f365c1b140b31df10c": {
    "id": "fef0c960596fa02ed5c7d0f365c1b140b31df10c",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Unicode",
      "PrimÃ¡rio",
      "ðŸ˜€"
    ],
    "storyId": "core-unicode-primÃ¡rio--ðŸ˜€",
    "story": {
      "id": "core-unicode-primÃ¡rio--ðŸ˜€",
      "kind": "Core/Unicode/PrimÃ¡rio",
      "name": "ðŸ˜€",
      "story": "ðŸ˜€",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/unicode.stories.js",
        "argTypes": {},
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "465bfba9bbf73478936d4866498eb6e5560509e6": {
    "id": "465bfba9bbf73478936d4866498eb6e5560509e6",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "App",
      "Default"
    ],
    "storyId": "ui-app--default",
    "story": {
      "id": "ui-app--default",
      "kind": "UI/App",
      "name": "Default",
      "story": "Default",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/app.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-app--default",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "8dcd8722f9784cfd728d8e8c7993c12220c87192": {
    "id": "8dcd8722f9784cfd728d8e8c7993c12220c87192",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "App",
      "Loading State"
    ],
    "storyId": "ui-app--loading-state",
    "story": {
      "id": "ui-app--loading-state",
      "kind": "UI/App",
      "name": "Loading State",
      "story": "Loading State",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/app.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-app--loading-state",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "e38c306ad8f0238fb94f1f3bf503a698625cab83": {
    "id": "e38c306ad8f0238fb94f1f3bf503a698625cab83",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Layout",
      "Desktop",
      "Default"
    ],
    "storyId": "ui-layout-desktop--default",
    "story": {
      "id": "ui-layout-desktop--default",
      "kind": "UI/Layout/Desktop",
      "name": "Default",
      "story": "Default",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/layout/desktop.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-layout-desktop--default",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "8c313b6169808a650a95d188a5652ec410d3c7b6": {
    "id": "8c313b6169808a650a95d188a5652ec410d3c7b6",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Layout",
      "Desktop",
      "No Addons"
    ],
    "storyId": "ui-layout-desktop--no-addons",
    "story": {
      "id": "ui-layout-desktop--no-addons",
      "kind": "UI/Layout/Desktop",
      "name": "No Addons",
      "story": "No Addons",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/layout/desktop.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-layout-desktop--no-addons",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "03a717ad24d060b3477c0a68b02b088950d5de6b": {
    "id": "03a717ad24d060b3477c0a68b02b088950d5de6b",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Layout",
      "Desktop",
      "No Sidebar"
    ],
    "storyId": "ui-layout-desktop--no-sidebar",
    "story": {
      "id": "ui-layout-desktop--no-sidebar",
      "kind": "UI/Layout/Desktop",
      "name": "No Sidebar",
      "story": "No Sidebar",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/layout/desktop.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-layout-desktop--no-sidebar",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "f8f484b73866871c0750c0c99daa7ddde57776dc": {
    "id": "f8f484b73866871c0750c0c99daa7ddde57776dc",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Layout",
      "Desktop",
      "No Panel"
    ],
    "storyId": "ui-layout-desktop--no-panel",
    "story": {
      "id": "ui-layout-desktop--no-panel",
      "kind": "UI/Layout/Desktop",
      "name": "No Panel",
      "story": "No Panel",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/layout/desktop.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-layout-desktop--no-panel",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "b146195e41a9ec01ada685acaeacc2045ec64fb4": {
    "id": "b146195e41a9ec01ada685acaeacc2045ec64fb4",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Layout",
      "Desktop",
      "Bottom Panel"
    ],
    "storyId": "ui-layout-desktop--bottom-panel",
    "story": {
      "id": "ui-layout-desktop--bottom-panel",
      "kind": "UI/Layout/Desktop",
      "name": "Bottom Panel",
      "story": "Bottom Panel",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/layout/desktop.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-layout-desktop--bottom-panel",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "0a99777b8039c7a7f920744cb097bfd1fa873cf2": {
    "id": "0a99777b8039c7a7f920744cb097bfd1fa873cf2",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Layout",
      "Desktop",
      "Fullscreen"
    ],
    "storyId": "ui-layout-desktop--fullscreen",
    "story": {
      "id": "ui-layout-desktop--fullscreen",
      "kind": "UI/Layout/Desktop",
      "name": "Fullscreen",
      "story": "Fullscreen",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/layout/desktop.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-layout-desktop--fullscreen",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "26eebccedfb04519bd6ce3efa2d2dc10f914a973": {
    "id": "26eebccedfb04519bd6ce3efa2d2dc10f914a973",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Layout",
      "Desktop",
      "No Panel No Sidebar"
    ],
    "storyId": "ui-layout-desktop--no-panel-no-sidebar",
    "story": {
      "id": "ui-layout-desktop--no-panel-no-sidebar",
      "kind": "UI/Layout/Desktop",
      "name": "No Panel No Sidebar",
      "story": "No Panel No Sidebar",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/layout/desktop.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-layout-desktop--no-panel-no-sidebar",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "43de34a433dbc81ddcaea08f39496e2cddc368f0": {
    "id": "43de34a433dbc81ddcaea08f39496e2cddc368f0",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Layout",
      "Desktop",
      "Page"
    ],
    "storyId": "ui-layout-desktop--page",
    "story": {
      "id": "ui-layout-desktop--page",
      "kind": "UI/Layout/Desktop",
      "name": "Page",
      "story": "Page",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/layout/desktop.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-layout-desktop--page",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "06d6731f5866cd2a41cd546f939a0ecd383fccc1": {
    "id": "06d6731f5866cd2a41cd546f939a0ecd383fccc1",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Layout",
      "Mobile",
      "Initial Sidebar"
    ],
    "storyId": "ui-layout-mobile--initial-sidebar",
    "story": {
      "id": "ui-layout-mobile--initial-sidebar",
      "kind": "UI/Layout/Mobile",
      "name": "Initial Sidebar",
      "story": "Initial Sidebar",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/layout/mobile.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-layout-mobile--initial-sidebar",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "26e37882e1a32b2711459f03983475deb7424a12": {
    "id": "26e37882e1a32b2711459f03983475deb7424a12",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Layout",
      "Mobile",
      "Initial Canvas"
    ],
    "storyId": "ui-layout-mobile--initial-canvas",
    "story": {
      "id": "ui-layout-mobile--initial-canvas",
      "kind": "UI/Layout/Mobile",
      "name": "Initial Canvas",
      "story": "Initial Canvas",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/layout/mobile.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-layout-mobile--initial-canvas",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "ced481032071eed808b998d5a2185dcd304c4300": {
    "id": "ced481032071eed808b998d5a2185dcd304c4300",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Layout",
      "Mobile",
      "Initial Addons"
    ],
    "storyId": "ui-layout-mobile--initial-addons",
    "story": {
      "id": "ui-layout-mobile--initial-addons",
      "kind": "UI/Layout/Mobile",
      "name": "Initial Addons",
      "story": "Initial Addons",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/layout/mobile.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-layout-mobile--initial-addons",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "567aba6f2d94bb5630ab03e477990c3664b7365e": {
    "id": "567aba6f2d94bb5630ab03e477990c3664b7365e",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Layout",
      "Mobile",
      "Page"
    ],
    "storyId": "ui-layout-mobile--page",
    "story": {
      "id": "ui-layout-mobile--page",
      "kind": "UI/Layout/Mobile",
      "name": "Page",
      "story": "Page",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/layout/mobile.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-layout-mobile--page",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "8273a7eafe05d27bed3a6ec6cc75a0502265a84a": {
    "id": "8273a7eafe05d27bed3a6ec6cc75a0502265a84a",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Notifications",
      "NotificationItem",
      "Simple"
    ],
    "storyId": "ui-notifications-notificationitem--simple",
    "story": {
      "id": "ui-notifications-notificationitem--simple",
      "kind": "UI/Notifications/NotificationItem",
      "name": "Simple",
      "story": "Simple",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/notifications/NotificationItem.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "ui-notifications-notificationitem--simple",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "4f2753632ff8182689016f63f0089bf4b075f8c0": {
    "id": "4f2753632ff8182689016f63f0089bf4b075f8c0",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Notifications",
      "NotificationItem",
      "Long Headline"
    ],
    "storyId": "ui-notifications-notificationitem--long-headline",
    "story": {
      "id": "ui-notifications-notificationitem--long-headline",
      "kind": "UI/Notifications/NotificationItem",
      "name": "Long Headline",
      "story": "Long Headline",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/notifications/NotificationItem.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "ui-notifications-notificationitem--long-headline",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "54117bf1bf8a9b458bfc8c17f3d478f1833218e6": {
    "id": "54117bf1bf8a9b458bfc8c17f3d478f1833218e6",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Notifications",
      "NotificationItem",
      "Link"
    ],
    "storyId": "ui-notifications-notificationitem--link",
    "story": {
      "id": "ui-notifications-notificationitem--link",
      "kind": "UI/Notifications/NotificationItem",
      "name": "Link",
      "story": "Link",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/notifications/NotificationItem.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "ui-notifications-notificationitem--link",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "3264ea484e41c4a861008896216e7e634904cccd": {
    "id": "3264ea484e41c4a861008896216e7e634904cccd",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Notifications",
      "NotificationItem",
      "Link Icon With Color"
    ],
    "storyId": "ui-notifications-notificationitem--link-icon-with-color",
    "story": {
      "id": "ui-notifications-notificationitem--link-icon-with-color",
      "kind": "UI/Notifications/NotificationItem",
      "name": "Link Icon With Color",
      "story": "Link Icon With Color",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/notifications/NotificationItem.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "ui-notifications-notificationitem--link-icon-with-color",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "886c2c173a26b21733c6fe4e9f020b67cad07109": {
    "id": "886c2c173a26b21733c6fe4e9f020b67cad07109",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Notifications",
      "NotificationItem",
      "Link Icon With Color Sub Headline"
    ],
    "storyId": "ui-notifications-notificationitem--link-icon-with-color-sub-headline",
    "story": {
      "id": "ui-notifications-notificationitem--link-icon-with-color-sub-headline",
      "kind": "UI/Notifications/NotificationItem",
      "name": "Link Icon With Color Sub Headline",
      "story": "Link Icon With Color Sub Headline",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/notifications/NotificationItem.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "ui-notifications-notificationitem--link-icon-with-color-sub-headline",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "fa2e7e440ffc306724341a947f018e2d3cede5cb": {
    "id": "fa2e7e440ffc306724341a947f018e2d3cede5cb",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Notifications",
      "NotificationItem",
      "Book Icon"
    ],
    "storyId": "ui-notifications-notificationitem--book-icon",
    "story": {
      "id": "ui-notifications-notificationitem--book-icon",
      "kind": "UI/Notifications/NotificationItem",
      "name": "Book Icon",
      "story": "Book Icon",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/notifications/NotificationItem.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "ui-notifications-notificationitem--book-icon",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "99df0fa46ed36013aebf520cf3242874f1594eb3": {
    "id": "99df0fa46ed36013aebf520cf3242874f1594eb3",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Notifications",
      "NotificationItem",
      "Strong Sub Headline"
    ],
    "storyId": "ui-notifications-notificationitem--strong-sub-headline",
    "story": {
      "id": "ui-notifications-notificationitem--strong-sub-headline",
      "kind": "UI/Notifications/NotificationItem",
      "name": "Strong Sub Headline",
      "story": "Strong Sub Headline",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/notifications/NotificationItem.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "ui-notifications-notificationitem--strong-sub-headline",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "1a0457d44ee00425f3aa4a4f9a585823c2b27333": {
    "id": "1a0457d44ee00425f3aa4a4f9a585823c2b27333",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Notifications",
      "NotificationItem",
      "Strong Emphasized Sub Headline"
    ],
    "storyId": "ui-notifications-notificationitem--strong-emphasized-sub-headline",
    "story": {
      "id": "ui-notifications-notificationitem--strong-emphasized-sub-headline",
      "kind": "UI/Notifications/NotificationItem",
      "name": "Strong Emphasized Sub Headline",
      "story": "Strong Emphasized Sub Headline",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/notifications/NotificationItem.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "ui-notifications-notificationitem--strong-emphasized-sub-headline",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "89bde60001e257552991e0c0645317b8f116e802": {
    "id": "89bde60001e257552991e0c0645317b8f116e802",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Notifications",
      "NotificationItem",
      "Book Icon Sub Headline"
    ],
    "storyId": "ui-notifications-notificationitem--book-icon-sub-headline",
    "story": {
      "id": "ui-notifications-notificationitem--book-icon-sub-headline",
      "kind": "UI/Notifications/NotificationItem",
      "name": "Book Icon Sub Headline",
      "story": "Book Icon Sub Headline",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/notifications/NotificationItem.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "ui-notifications-notificationitem--book-icon-sub-headline",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "d5e4166d262064b54420b534b08446ca46294b6b": {
    "id": "d5e4166d262064b54420b534b08446ca46294b6b",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Notifications",
      "NotificationItem",
      "Book Icon Long Sub Headline"
    ],
    "storyId": "ui-notifications-notificationitem--book-icon-long-sub-headline",
    "story": {
      "id": "ui-notifications-notificationitem--book-icon-long-sub-headline",
      "kind": "UI/Notifications/NotificationItem",
      "name": "Book Icon Long Sub Headline",
      "story": "Book Icon Long Sub Headline",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/notifications/NotificationItem.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "ui-notifications-notificationitem--book-icon-long-sub-headline",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "e49d76f90b384b4981e6eac9c4caa3f61b185e8c": {
    "id": "e49d76f90b384b4981e6eac9c4caa3f61b185e8c",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Notifications",
      "NotificationItem",
      "Accessibility Icon"
    ],
    "storyId": "ui-notifications-notificationitem--accessibility-icon",
    "story": {
      "id": "ui-notifications-notificationitem--accessibility-icon",
      "kind": "UI/Notifications/NotificationItem",
      "name": "Accessibility Icon",
      "story": "Accessibility Icon",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/notifications/NotificationItem.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "ui-notifications-notificationitem--accessibility-icon",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "8ba81d62116fd859b1227968956b6362da21713c": {
    "id": "8ba81d62116fd859b1227968956b6362da21713c",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Notifications",
      "NotificationItem",
      "Accessibility Gold Icon"
    ],
    "storyId": "ui-notifications-notificationitem--accessibility-gold-icon",
    "story": {
      "id": "ui-notifications-notificationitem--accessibility-gold-icon",
      "kind": "UI/Notifications/NotificationItem",
      "name": "Accessibility Gold Icon",
      "story": "Accessibility Gold Icon",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/notifications/NotificationItem.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "ui-notifications-notificationitem--accessibility-gold-icon",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "d78c1ba3923be9b134d32bba8b06fb7c1137b5dd": {
    "id": "d78c1ba3923be9b134d32bba8b06fb7c1137b5dd",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Notifications",
      "NotificationItem",
      "Accessibility Gold Icon Long Head Line No Sub Headline"
    ],
    "storyId": "ui-notifications-notificationitem--accessibility-gold-icon-long-head-line-no-sub-headline",
    "story": {
      "id": "ui-notifications-notificationitem--accessibility-gold-icon-long-head-line-no-sub-headline",
      "kind": "UI/Notifications/NotificationItem",
      "name": "Accessibility Gold Icon Long Head Line No Sub Headline",
      "story": "Accessibility Gold Icon Long Head Line No Sub Headline",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/notifications/NotificationItem.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "ui-notifications-notificationitem--accessibility-gold-icon-long-head-line-no-sub-headline",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "dee4b06ee078f4865c7722a2a85ebaed09d299a4": {
    "id": "dee4b06ee078f4865c7722a2a85ebaed09d299a4",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Notifications",
      "NotificationList",
      "Single"
    ],
    "storyId": "ui-notifications-notificationlist--single",
    "story": {
      "id": "ui-notifications-notificationlist--single",
      "kind": "UI/Notifications/NotificationList",
      "name": "Single",
      "story": "Single",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/notifications/NotificationList.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "ui-notifications-notificationlist--single",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "2b9db72c705cb09856d2f4b2311464618eb3f8ed": {
    "id": "2b9db72c705cb09856d2f4b2311464618eb3f8ed",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Notifications",
      "NotificationList",
      "All"
    ],
    "storyId": "ui-notifications-notificationlist--all",
    "story": {
      "id": "ui-notifications-notificationlist--all",
      "kind": "UI/Notifications/NotificationList",
      "name": "All",
      "story": "All",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/notifications/NotificationList.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "ui-notifications-notificationlist--all",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "0901946849e56ffca25ca18c53c5bc4636c32f7e": {
    "id": "0901946849e56ffca25ca18c53c5bc4636c32f7e",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Notifications",
      "NotificationList",
      "Placement"
    ],
    "storyId": "ui-notifications-notificationlist--placement",
    "story": {
      "id": "ui-notifications-notificationlist--placement",
      "kind": "UI/Notifications/NotificationList",
      "name": "Placement",
      "story": "Placement",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/notifications/NotificationList.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "ui-notifications-notificationlist--placement",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "60d4fa4e26a6330bc8fea03cc86e2c7d787a8c4b": {
    "id": "60d4fa4e26a6330bc8fea03cc86e2c7d787a8c4b",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Panel",
      "Default"
    ],
    "storyId": "ui-panel--default",
    "story": {
      "id": "ui-panel--default",
      "kind": "UI/Panel",
      "name": "Default",
      "story": "Default",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/panel/panel.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-panel--default",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "74383690789b363977b4715c5d25dc98c05f7052": {
    "id": "74383690789b363977b4715c5d25dc98c05f7052",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Panel",
      "No Panels"
    ],
    "storyId": "ui-panel--no-panels",
    "story": {
      "id": "ui-panel--no-panels",
      "kind": "UI/Panel",
      "name": "No Panels",
      "story": "No Panels",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/panel/panel.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-panel--no-panels",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "dc9f7c0443265e01e311d3a362a489da4b7f06d7": {
    "id": "dc9f7c0443265e01e311d3a362a489da4b7f06d7",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Iframe",
      "Working Story"
    ],
    "storyId": "ui-iframe--working-story",
    "story": {
      "id": "ui-iframe--working-story",
      "kind": "UI/Iframe",
      "name": "Working Story",
      "story": "Working Story",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/preview/iframe.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-iframe--working-story",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "ac2324c049af9c6f1d13a76077cc838d289f876c": {
    "id": "ac2324c049af9c6f1d13a76077cc838d289f876c",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Iframe",
      "Missing Story"
    ],
    "storyId": "ui-iframe--missing-story",
    "story": {
      "id": "ui-iframe--missing-story",
      "kind": "UI/Iframe",
      "name": "Missing Story",
      "story": "Missing Story",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/preview/iframe.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-iframe--missing-story",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "ab05eddac6ba9849e9de80ef8a3e5db3c76a1374": {
    "id": "ab05eddac6ba9849e9de80ef8a3e5db3c76a1374",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Preview",
      "No Tabs"
    ],
    "storyId": "ui-preview--no-tabs",
    "story": {
      "id": "ui-preview--no-tabs",
      "kind": "UI/Preview",
      "name": "No Tabs",
      "story": "No Tabs",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/preview/preview.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-preview--no-tabs",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "d494eb9333b4c1a3e8924f7f135c5986520b7e01": {
    "id": "d494eb9333b4c1a3e8924f7f135c5986520b7e01",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Preview",
      "With Tabs"
    ],
    "storyId": "ui-preview--with-tabs",
    "story": {
      "id": "ui-preview--with-tabs",
      "kind": "UI/Preview",
      "name": "With Tabs",
      "story": "With Tabs",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/preview/preview.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-preview--with-tabs",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "8666e6eedcbb3e23f17b82f7d48ecb5cd428a69b": {
    "id": "8666e6eedcbb3e23f17b82f7d48ecb5cd428a69b",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "Explorer",
      "Simple"
    ],
    "storyId": "ui-sidebar-explorer--simple",
    "story": {
      "id": "ui-sidebar-explorer--simple",
      "kind": "UI/Sidebar/Explorer",
      "name": "Simple",
      "story": "Simple",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/Explorer.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-explorer--simple",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "3be7bf0a225a2f45678cc607f6a2d82a4b42e601": {
    "id": "3be7bf0a225a2f45678cc607f6a2d82a4b42e601",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "Explorer",
      "With Refs"
    ],
    "storyId": "ui-sidebar-explorer--with-refs",
    "story": {
      "id": "ui-sidebar-explorer--with-refs",
      "kind": "UI/Sidebar/Explorer",
      "name": "With Refs",
      "story": "With Refs",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/Explorer.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-explorer--with-refs",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "d2b0bc61fcf929fc3cc18552d1d7e494e919e8d5": {
    "id": "d2b0bc61fcf929fc3cc18552d1d7e494e919e8d5",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "Heading",
      "Menu Highlighted"
    ],
    "storyId": "ui-sidebar-heading--menu-highlighted",
    "story": {
      "id": "ui-sidebar-heading--menu-highlighted",
      "kind": "UI/Sidebar/Heading",
      "name": "Menu Highlighted",
      "story": "Menu Highlighted",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/Heading.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-heading--menu-highlighted",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "b6fde795953087a0fc232830ec057e7dd9611260": {
    "id": "b6fde795953087a0fc232830ec057e7dd9611260",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "Heading",
      "Standard"
    ],
    "storyId": "ui-sidebar-heading--standard",
    "story": {
      "id": "ui-sidebar-heading--standard",
      "kind": "UI/Sidebar/Heading",
      "name": "Standard",
      "story": "Standard",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/Heading.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-heading--standard",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "0d9a62f0deabde0d5d116a190b1eff9149160963": {
    "id": "0d9a62f0deabde0d5d116a190b1eff9149160963",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "Heading",
      "Standard No Link"
    ],
    "storyId": "ui-sidebar-heading--standard-no-link",
    "story": {
      "id": "ui-sidebar-heading--standard-no-link",
      "kind": "UI/Sidebar/Heading",
      "name": "Standard No Link",
      "story": "Standard No Link",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/Heading.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-heading--standard-no-link",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "ae57577cb597fa446452459c000f0c10b71aed31": {
    "id": "ae57577cb597fa446452459c000f0c10b71aed31",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "Heading",
      "Link And Text"
    ],
    "storyId": "ui-sidebar-heading--link-and-text",
    "story": {
      "id": "ui-sidebar-heading--link-and-text",
      "kind": "UI/Sidebar/Heading",
      "name": "Link And Text",
      "story": "Link And Text",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/Heading.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-heading--link-and-text",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "a3cbc45306c613c5e14441c91b3edd084bb12e91": {
    "id": "a3cbc45306c613c5e14441c91b3edd084bb12e91",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "Heading",
      "Only Text"
    ],
    "storyId": "ui-sidebar-heading--only-text",
    "story": {
      "id": "ui-sidebar-heading--only-text",
      "kind": "UI/Sidebar/Heading",
      "name": "Only Text",
      "story": "Only Text",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/Heading.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-heading--only-text",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "12a8216494cc0f95cf8cc2df82b6c17327053fea": {
    "id": "12a8216494cc0f95cf8cc2df82b6c17327053fea",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "Heading",
      "Long Text"
    ],
    "storyId": "ui-sidebar-heading--long-text",
    "story": {
      "id": "ui-sidebar-heading--long-text",
      "kind": "UI/Sidebar/Heading",
      "name": "Long Text",
      "story": "Long Text",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/Heading.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-heading--long-text",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "081c8fe7096b4b262f87bac8d0269315234933ea": {
    "id": "081c8fe7096b4b262f87bac8d0269315234933ea",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "Heading",
      "Custom Brand Image"
    ],
    "storyId": "ui-sidebar-heading--custom-brand-image",
    "story": {
      "id": "ui-sidebar-heading--custom-brand-image",
      "kind": "UI/Sidebar/Heading",
      "name": "Custom Brand Image",
      "story": "Custom Brand Image",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/Heading.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-heading--custom-brand-image",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "68e614702e6fdbf0af8700c765f703473f75d60f": {
    "id": "68e614702e6fdbf0af8700c765f703473f75d60f",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "Heading",
      "Custom Brand Image Tall"
    ],
    "storyId": "ui-sidebar-heading--custom-brand-image-tall",
    "story": {
      "id": "ui-sidebar-heading--custom-brand-image-tall",
      "kind": "UI/Sidebar/Heading",
      "name": "Custom Brand Image Tall",
      "story": "Custom Brand Image Tall",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/Heading.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-heading--custom-brand-image-tall",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "16666f75423162aee94a4c273cd4d9485f003287": {
    "id": "16666f75423162aee94a4c273cd4d9485f003287",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "Heading",
      "Custom Brand Image Unsized SVG"
    ],
    "storyId": "ui-sidebar-heading--custom-brand-image-unsized-svg",
    "story": {
      "id": "ui-sidebar-heading--custom-brand-image-unsized-svg",
      "kind": "UI/Sidebar/Heading",
      "name": "Custom Brand Image Unsized SVG",
      "story": "Custom Brand Image Unsized SVG",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/Heading.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-heading--custom-brand-image-unsized-svg",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "458791284c1be6e690bb4430357879f1a1e1e2a3": {
    "id": "458791284c1be6e690bb4430357879f1a1e1e2a3",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "Heading",
      "No Brand"
    ],
    "storyId": "ui-sidebar-heading--no-brand",
    "story": {
      "id": "ui-sidebar-heading--no-brand",
      "kind": "UI/Sidebar/Heading",
      "name": "No Brand",
      "story": "No Brand",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/Heading.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-heading--no-brand",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "139c62b5a17cc8024a494975266ee075c5b9ce0f": {
    "id": "139c62b5a17cc8024a494975266ee075c5b9ce0f",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "Menu",
      "Items"
    ],
    "storyId": "ui-sidebar-menu--items",
    "story": {
      "id": "ui-sidebar-menu--items",
      "kind": "UI/Sidebar/Menu",
      "name": "Items",
      "story": "Items",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/Menu.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-menu--items",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "14ead966d75076586502529e9bf6da0768298e9c": {
    "id": "14ead966d75076586502529e9bf6da0768298e9c",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "Menu",
      "Real"
    ],
    "storyId": "ui-sidebar-menu--real",
    "story": {
      "id": "ui-sidebar-menu--real",
      "kind": "UI/Sidebar/Menu",
      "name": "Real",
      "story": "Real",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/Menu.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-menu--real",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "ecc9c8a89cd55575ac0915328e2714b8929ca586": {
    "id": "ecc9c8a89cd55575ac0915328e2714b8929ca586",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "Menu",
      "Expanded"
    ],
    "storyId": "ui-sidebar-menu--expanded",
    "story": {
      "id": "ui-sidebar-menu--expanded",
      "kind": "UI/Sidebar/Menu",
      "name": "Expanded",
      "story": "Expanded",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/Menu.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-menu--expanded",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "9f1ce93eb4c91593f620e621e1e825294f303538": {
    "id": "9f1ce93eb4c91593f620e621e1e825294f303538",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "Menu",
      "Expanded Without Release Notes"
    ],
    "storyId": "ui-sidebar-menu--expanded-without-release-notes",
    "story": {
      "id": "ui-sidebar-menu--expanded-without-release-notes",
      "kind": "UI/Sidebar/Menu",
      "name": "Expanded Without Release Notes",
      "story": "Expanded Without Release Notes",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/Menu.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-menu--expanded-without-release-notes",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "2872149da7f901ce1be27b87d86a671e81b039a5": {
    "id": "2872149da7f901ce1be27b87d86a671e81b039a5",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "Refs",
      "Optimized"
    ],
    "storyId": "ui-sidebar-refs--optimized",
    "story": {
      "id": "ui-sidebar-refs--optimized",
      "kind": "UI/Sidebar/Refs",
      "name": "Optimized",
      "story": "Optimized",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/Refs.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-refs--optimized",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "62688b8a92a2874c3aff4e0b19ea0621f822e599": {
    "id": "62688b8a92a2874c3aff4e0b19ea0621f822e599",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "Refs",
      "Is Empty"
    ],
    "storyId": "ui-sidebar-refs--is-empty",
    "story": {
      "id": "ui-sidebar-refs--is-empty",
      "kind": "UI/Sidebar/Refs",
      "name": "Is Empty",
      "story": "Is Empty",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/Refs.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-refs--is-empty",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "3bd0a909cb23848356909f0616971699e9c46299": {
    "id": "3bd0a909cb23848356909f0616971699e9c46299",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "Refs",
      "Start Injected Unknown"
    ],
    "storyId": "ui-sidebar-refs--start-injected-unknown",
    "story": {
      "id": "ui-sidebar-refs--start-injected-unknown",
      "kind": "UI/Sidebar/Refs",
      "name": "Start Injected Unknown",
      "story": "Start Injected Unknown",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/Refs.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-refs--start-injected-unknown",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "13baa543dbf11f9ff88fe2d98a5ad7d71571a737": {
    "id": "13baa543dbf11f9ff88fe2d98a5ad7d71571a737",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "Refs",
      "Start Injected Loading"
    ],
    "storyId": "ui-sidebar-refs--start-injected-loading",
    "story": {
      "id": "ui-sidebar-refs--start-injected-loading",
      "kind": "UI/Sidebar/Refs",
      "name": "Start Injected Loading",
      "story": "Start Injected Loading",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/Refs.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-refs--start-injected-loading",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "1bb7312294268ffdaa420b9e9435a80e156a8893": {
    "id": "1bb7312294268ffdaa420b9e9435a80e156a8893",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "Refs",
      "Start Injected Ready"
    ],
    "storyId": "ui-sidebar-refs--start-injected-ready",
    "story": {
      "id": "ui-sidebar-refs--start-injected-ready",
      "kind": "UI/Sidebar/Refs",
      "name": "Start Injected Ready",
      "story": "Start Injected Ready",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/Refs.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-refs--start-injected-ready",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "891cbea1bd7bc41fec9229d7e0c2989754821290": {
    "id": "891cbea1bd7bc41fec9229d7e0c2989754821290",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "Refs",
      "Versions"
    ],
    "storyId": "ui-sidebar-refs--versions",
    "story": {
      "id": "ui-sidebar-refs--versions",
      "kind": "UI/Sidebar/Refs",
      "name": "Versions",
      "story": "Versions",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/Refs.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-refs--versions",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "97240e5e83537398ea04954753112797a6fe1fdf": {
    "id": "97240e5e83537398ea04954753112797a6fe1fdf",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "Refs",
      "Versions Missing Current"
    ],
    "storyId": "ui-sidebar-refs--versions-missing-current",
    "story": {
      "id": "ui-sidebar-refs--versions-missing-current",
      "kind": "UI/Sidebar/Refs",
      "name": "Versions Missing Current",
      "story": "Versions Missing Current",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/Refs.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-refs--versions-missing-current",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "e32c9e16bbc9e18900b3e81e5cdf5428121ebaf8": {
    "id": "e32c9e16bbc9e18900b3e81e5cdf5428121ebaf8",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "Refs",
      "Errored"
    ],
    "storyId": "ui-sidebar-refs--errored",
    "story": {
      "id": "ui-sidebar-refs--errored",
      "kind": "UI/Sidebar/Refs",
      "name": "Errored",
      "story": "Errored",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/Refs.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-refs--errored",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "c1c1345611159b6cb5be69009ff361b0d64c59b5": {
    "id": "c1c1345611159b6cb5be69009ff361b0d64c59b5",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "Refs",
      "Auth"
    ],
    "storyId": "ui-sidebar-refs--auth",
    "story": {
      "id": "ui-sidebar-refs--auth",
      "kind": "UI/Sidebar/Refs",
      "name": "Auth",
      "story": "Auth",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/Refs.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-refs--auth",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "ce6ea3af87daf8647c2f8125ab222b2bf6f03556": {
    "id": "ce6ea3af87daf8647c2f8125ab222b2bf6f03556",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "Refs",
      "Long"
    ],
    "storyId": "ui-sidebar-refs--long",
    "story": {
      "id": "ui-sidebar-refs--long",
      "kind": "UI/Sidebar/Refs",
      "name": "Long",
      "story": "Long",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/Refs.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-refs--long",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "39efb2d1c28f53277afaf71cb03b311c06a92119": {
    "id": "39efb2d1c28f53277afaf71cb03b311c06a92119",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "Search",
      "Simple"
    ],
    "storyId": "ui-sidebar-search--simple",
    "story": {
      "id": "ui-sidebar-search--simple",
      "kind": "UI/Sidebar/Search",
      "name": "Simple",
      "story": "Simple",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/Search.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-search--simple",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "975a523d452be82e9eef43bdd570168a7b48c2a7": {
    "id": "975a523d452be82e9eef43bdd570168a7b48c2a7",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "Search",
      "Filled In"
    ],
    "storyId": "ui-sidebar-search--filled-in",
    "story": {
      "id": "ui-sidebar-search--filled-in",
      "kind": "UI/Sidebar/Search",
      "name": "Filled In",
      "story": "Filled In",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/Search.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-search--filled-in",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "3c5caf94deb6f117b8c3e8b6d3e85c691414e5ed": {
    "id": "3c5caf94deb6f117b8c3e8b6d3e85c691414e5ed",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "Search",
      "Last Viewed"
    ],
    "storyId": "ui-sidebar-search--last-viewed",
    "story": {
      "id": "ui-sidebar-search--last-viewed",
      "kind": "UI/Sidebar/Search",
      "name": "Last Viewed",
      "story": "Last Viewed",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/Search.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-search--last-viewed",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "85ba28f7f9cd8320764c6db7fcfe4062784ea8b3": {
    "id": "85ba28f7f9cd8320764c6db7fcfe4062784ea8b3",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "Search",
      "Shortcuts Disabled"
    ],
    "storyId": "ui-sidebar-search--shortcuts-disabled",
    "story": {
      "id": "ui-sidebar-search--shortcuts-disabled",
      "kind": "UI/Sidebar/Search",
      "name": "Shortcuts Disabled",
      "story": "Shortcuts Disabled",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/Search.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-search--shortcuts-disabled",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "f722c8174908454db459c9f9c0d4a885c224d5cd": {
    "id": "f722c8174908454db459c9f9c0d4a885c224d5cd",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "SearchResults",
      "Searching"
    ],
    "storyId": "ui-sidebar-searchresults--searching",
    "story": {
      "id": "ui-sidebar-searchresults--searching",
      "kind": "UI/Sidebar/SearchResults",
      "name": "Searching",
      "story": "Searching",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/SearchResults.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-searchresults--searching",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "7c1365a9438bac5bbb9b0a72888885c5cfa9f4fa": {
    "id": "7c1365a9438bac5bbb9b0a72888885c5cfa9f4fa",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "SearchResults",
      "No Results"
    ],
    "storyId": "ui-sidebar-searchresults--no-results",
    "story": {
      "id": "ui-sidebar-searchresults--no-results",
      "kind": "UI/Sidebar/SearchResults",
      "name": "No Results",
      "story": "No Results",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/SearchResults.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-searchresults--no-results",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "92bd012d5c4f6fc0bf3c80bf6317fb0c61dfa8cd": {
    "id": "92bd012d5c4f6fc0bf3c80bf6317fb0c61dfa8cd",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "SearchResults",
      "Last Viewed"
    ],
    "storyId": "ui-sidebar-searchresults--last-viewed",
    "story": {
      "id": "ui-sidebar-searchresults--last-viewed",
      "kind": "UI/Sidebar/SearchResults",
      "name": "Last Viewed",
      "story": "Last Viewed",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/SearchResults.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-searchresults--last-viewed",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "9ca899c9ed35818dc1fa023af2c02c9caecc0f3a": {
    "id": "9ca899c9ed35818dc1fa023af2c02c9caecc0f3a",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "Sidebar",
      "Simple"
    ],
    "storyId": "ui-sidebar-sidebar--simple",
    "story": {
      "id": "ui-sidebar-sidebar--simple",
      "kind": "UI/Sidebar/Sidebar",
      "name": "Simple",
      "story": "Simple",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/Sidebar.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-sidebar--simple",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "9279cd6c8fd0a9a88963996094948b66e3330de0": {
    "id": "9279cd6c8fd0a9a88963996094948b66e3330de0",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "Sidebar",
      "Loading"
    ],
    "storyId": "ui-sidebar-sidebar--loading",
    "story": {
      "id": "ui-sidebar-sidebar--loading",
      "kind": "UI/Sidebar/Sidebar",
      "name": "Loading",
      "story": "Loading",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/Sidebar.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-sidebar--loading",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "9310bbb274a3bb95801267689cd2b61d7b12236c": {
    "id": "9310bbb274a3bb95801267689cd2b61d7b12236c",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "Sidebar",
      "Empty"
    ],
    "storyId": "ui-sidebar-sidebar--empty",
    "story": {
      "id": "ui-sidebar-sidebar--empty",
      "kind": "UI/Sidebar/Sidebar",
      "name": "Empty",
      "story": "Empty",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/Sidebar.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-sidebar--empty",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "1bb2f57ad96a2ac71063cd5ce5e45df313cc3c5f": {
    "id": "1bb2f57ad96a2ac71063cd5ce5e45df313cc3c5f",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "Sidebar",
      "With Refs"
    ],
    "storyId": "ui-sidebar-sidebar--with-refs",
    "story": {
      "id": "ui-sidebar-sidebar--with-refs",
      "kind": "UI/Sidebar/Sidebar",
      "name": "With Refs",
      "story": "With Refs",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/Sidebar.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-sidebar--with-refs",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "d3cd5167a0a289895998100c16cd84faff1324e1": {
    "id": "d3cd5167a0a289895998100c16cd84faff1324e1",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "Sidebar",
      "Loading With Refs"
    ],
    "storyId": "ui-sidebar-sidebar--loading-with-refs",
    "story": {
      "id": "ui-sidebar-sidebar--loading-with-refs",
      "kind": "UI/Sidebar/Sidebar",
      "name": "Loading With Refs",
      "story": "Loading With Refs",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/Sidebar.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-sidebar--loading-with-refs",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "497e5efdb7c6e8c7ecd6a859517e654d4c730d5b": {
    "id": "497e5efdb7c6e8c7ecd6a859517e654d4c730d5b",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "Tree",
      "Full"
    ],
    "storyId": "ui-sidebar-tree--full",
    "story": {
      "id": "ui-sidebar-tree--full",
      "kind": "UI/Sidebar/Tree",
      "name": "Full",
      "story": "Full",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/Tree.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-tree--full",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "e33b251d071921b4b3d187143bf158564fdcc028": {
    "id": "e33b251d071921b4b3d187143bf158564fdcc028",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "Tree",
      "Single Story Components"
    ],
    "storyId": "ui-sidebar-tree--single-story-components",
    "story": {
      "id": "ui-sidebar-tree--single-story-components",
      "kind": "UI/Sidebar/Tree",
      "name": "Single Story Components",
      "story": "Single Story Components",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/Tree.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-tree--single-story-components",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "72f69b41c49f5e63398ac8c729716a5efdb0eb71": {
    "id": "72f69b41c49f5e63398ac8c729716a5efdb0eb71",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "TreeNode",
      "Types"
    ],
    "storyId": "ui-sidebar-treenode--types",
    "story": {
      "id": "ui-sidebar-treenode--types",
      "kind": "UI/Sidebar/TreeNode",
      "name": "Types",
      "story": "Types",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/TreeNode.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-treenode--types",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "1a522b438f5bc5d0485404c0bec4c89e7d675ebd": {
    "id": "1a522b438f5bc5d0485404c0bec4c89e7d675ebd",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "TreeNode",
      "Expandable"
    ],
    "storyId": "ui-sidebar-treenode--expandable",
    "story": {
      "id": "ui-sidebar-treenode--expandable",
      "kind": "UI/Sidebar/TreeNode",
      "name": "Expandable",
      "story": "Expandable",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/TreeNode.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-treenode--expandable",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "79e99ed854e12e600cd18c9ee31c9af60165b87d": {
    "id": "79e99ed854e12e600cd18c9ee31c9af60165b87d",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "TreeNode",
      "Nested"
    ],
    "storyId": "ui-sidebar-treenode--nested",
    "story": {
      "id": "ui-sidebar-treenode--nested",
      "kind": "UI/Sidebar/TreeNode",
      "name": "Nested",
      "story": "Nested",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/TreeNode.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-treenode--nested",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "5b01ea222e5d4b208e888b3126eb6c31fc5c8944": {
    "id": "5b01ea222e5d4b208e888b3126eb6c31fc5c8944",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Sidebar",
      "TreeNode",
      "Selection"
    ],
    "storyId": "ui-sidebar-treenode--selection",
    "story": {
      "id": "ui-sidebar-treenode--selection",
      "kind": "UI/Sidebar/TreeNode",
      "name": "Selection",
      "story": "Selection",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/components/sidebar/TreeNode.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-sidebar-treenode--selection",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "a51548a40ee48dc9e9fa0447340e8d8cc35a1755": {
    "id": "a51548a40ee48dc9e9fa0447340e8d8cc35a1755",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Addon Panel",
      "All Addons"
    ],
    "storyId": "ui-addon-panel--all-addons",
    "story": {
      "id": "ui-addon-panel--all-addons",
      "kind": "UI/Addon Panel",
      "name": "All Addons",
      "story": "All Addons",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/containers/panel.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-addon-panel--all-addons",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "157a47aaa86864f6a1f25b0dacf53ea582d3856d": {
    "id": "157a47aaa86864f6a1f25b0dacf53ea582d3856d",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Addon Panel",
      "Filtered Addons"
    ],
    "storyId": "ui-addon-panel--filtered-addons",
    "story": {
      "id": "ui-addon-panel--filtered-addons",
      "kind": "UI/Addon Panel",
      "name": "Filtered Addons",
      "story": "Filtered Addons",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/containers/panel.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-addon-panel--filtered-addons",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "fa17efa6e2f130a02f9988b502f05a1862b67593": {
    "id": "fa17efa6e2f130a02f9988b502f05a1862b67593",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Settings",
      "SettingsFooter",
      "Basic"
    ],
    "storyId": "ui-settings-settingsfooter--basic",
    "story": {
      "id": "ui-settings-settingsfooter--basic",
      "kind": "UI/Settings/SettingsFooter",
      "name": "Basic",
      "story": "Basic",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/settings/SettingsFooter.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-settings-settingsfooter--basic",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "f3271259073c78c798c2a6c34eec43fec88d883d": {
    "id": "f3271259073c78c798c2a6c34eec43fec88d883d",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Settings",
      "ReleaseNotes",
      "Loading"
    ],
    "storyId": "ui-settings-releasenotes--loading",
    "story": {
      "id": "ui-settings-releasenotes--loading",
      "kind": "UI/Settings/ReleaseNotes",
      "name": "Loading",
      "story": "Loading",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/settings/release_notes.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-settings-releasenotes--loading",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "6ce330d1e7a6f50a0e8ad5363a8ed333cec996cb": {
    "id": "6ce330d1e7a6f50a0e8ad5363a8ed333cec996cb",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Settings",
      "ReleaseNotes",
      "Did Hit Max Wait Time"
    ],
    "storyId": "ui-settings-releasenotes--did-hit-max-wait-time",
    "story": {
      "id": "ui-settings-releasenotes--did-hit-max-wait-time",
      "kind": "UI/Settings/ReleaseNotes",
      "name": "Did Hit Max Wait Time",
      "story": "Did Hit Max Wait Time",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/settings/release_notes.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-settings-releasenotes--did-hit-max-wait-time",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "41a4da518e8b756f701d0e5c2d32cb9a21e61921": {
    "id": "41a4da518e8b756f701d0e5c2d32cb9a21e61921",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "UI",
      "Settings",
      "ShortcutsScreen",
      "default shortcuts"
    ],
    "storyId": "ui-settings-shortcutsscreen--defaults",
    "story": {
      "id": "ui-settings-shortcutsscreen--defaults",
      "kind": "UI/Settings/ShortcutsScreen",
      "name": "default shortcuts",
      "story": "default shortcuts",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/ui/src/settings/shortcuts.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "ui-settings-shortcutsscreen--defaults",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "331a14ba22569e98ce477846b7136c15d02d01ac": {
    "id": "331a14ba22569e98ce477846b7136c15d02d01ac",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "ActionBar",
      "Single Item"
    ],
    "storyId": "basics-actionbar--single-item",
    "story": {
      "id": "basics-actionbar--single-item",
      "kind": "Basics/ActionBar",
      "name": "Single Item",
      "story": "Single Item",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/ActionBar/ActionBar.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "basics-actionbar--single-item",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "3d101b1b05d835e26d071ee48eae2d775da86e3f": {
    "id": "3d101b1b05d835e26d071ee48eae2d775da86e3f",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "ActionBar",
      "Many Items"
    ],
    "storyId": "basics-actionbar--many-items",
    "story": {
      "id": "basics-actionbar--many-items",
      "kind": "Basics/ActionBar",
      "name": "Many Items",
      "story": "Many Items",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/ActionBar/ActionBar.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "basics-actionbar--many-items",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "e4edece9ceeb89d31172013abc0474646ef29b8c": {
    "id": "e4edece9ceeb89d31172013abc0474646ef29b8c",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Loader",
      "Infinite State"
    ],
    "storyId": "basics-loader--infinite-state",
    "story": {
      "id": "basics-loader--infinite-state",
      "kind": "Basics/Loader",
      "name": "Infinite State",
      "story": "Infinite State",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/Loader/Loader.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "basics-loader--infinite-state",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "f4dfd857b4db3c7bcccda9c398002def28a3a554": {
    "id": "f4dfd857b4db3c7bcccda9c398002def28a3a554",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Loader",
      "Size Adjusted"
    ],
    "storyId": "basics-loader--size-adjusted",
    "story": {
      "id": "basics-loader--size-adjusted",
      "kind": "Basics/Loader",
      "name": "Size Adjusted",
      "story": "Size Adjusted",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/Loader/Loader.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "basics-loader--size-adjusted",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "aafa25c46edc71d4930e6fda0f4cf482997546d8": {
    "id": "aafa25c46edc71d4930e6fda0f4cf482997546d8",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Loader",
      "Progress Bar"
    ],
    "storyId": "basics-loader--progress-bar",
    "story": {
      "id": "basics-loader--progress-bar",
      "kind": "Basics/Loader",
      "name": "Progress Bar",
      "story": "Progress Bar",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/Loader/Loader.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "basics-loader--progress-bar",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "bccd597e1e487377a8e9013dea0f39df0f32efb9": {
    "id": "bccd597e1e487377a8e9013dea0f39df0f32efb9",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Loader",
      "Progress Error"
    ],
    "storyId": "basics-loader--progress-error",
    "story": {
      "id": "basics-loader--progress-error",
      "kind": "Basics/Loader",
      "name": "Progress Error",
      "story": "Progress Error",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/Loader/Loader.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "basics-loader--progress-error",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "15b532e81a61b3d9cd0becd4f7093e883b93aa63": {
    "id": "15b532e81a61b3d9cd0becd4f7093e883b93aa63",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "ScrollArea",
      "Vertical"
    ],
    "storyId": "basics-scrollarea--vertical",
    "story": {
      "id": "basics-scrollarea--vertical",
      "kind": "Basics/ScrollArea",
      "name": "Vertical",
      "story": "Vertical",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/ScrollArea/ScrollArea.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "basics-scrollarea--vertical",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "8816aa73e91293cf425d0a3cb6944f1ec7f2707d": {
    "id": "8816aa73e91293cf425d0a3cb6944f1ec7f2707d",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "ScrollArea",
      "Horizontal"
    ],
    "storyId": "basics-scrollarea--horizontal",
    "story": {
      "id": "basics-scrollarea--horizontal",
      "kind": "Basics/ScrollArea",
      "name": "Horizontal",
      "story": "Horizontal",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/ScrollArea/ScrollArea.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "basics-scrollarea--horizontal",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "cb5b1a9df59a9ce4c683df623ca87621efd9916e": {
    "id": "cb5b1a9df59a9ce4c683df623ca87621efd9916e",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "ScrollArea",
      "Both"
    ],
    "storyId": "basics-scrollarea--both",
    "story": {
      "id": "basics-scrollarea--both",
      "kind": "Basics/ScrollArea",
      "name": "Both",
      "story": "Both",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/ScrollArea/ScrollArea.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "basics-scrollarea--both",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "556ada17cdb614065d9ef9bb032f5dac07925e7f": {
    "id": "556ada17cdb614065d9ef9bb032f5dac07925e7f",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "ScrollArea",
      "With Outer Border"
    ],
    "storyId": "basics-scrollarea--with-outer-border",
    "story": {
      "id": "basics-scrollarea--with-outer-border",
      "kind": "Basics/ScrollArea",
      "name": "With Outer Border",
      "story": "With Outer Border",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/ScrollArea/ScrollArea.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "basics-scrollarea--with-outer-border",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "bc57f15defd301fbcf50a35d66aa8daaeefa493c": {
    "id": "bc57f15defd301fbcf50a35d66aa8daaeefa493c",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Zoom",
      "Element Actual Size"
    ],
    "storyId": "basics-zoom--element-actual-size",
    "story": {
      "id": "basics-zoom--element-actual-size",
      "kind": "Basics/Zoom",
      "name": "Element Actual Size",
      "story": "Element Actual Size",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/Zoom/Zoom.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "basics-zoom--element-actual-size",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "76e01b422383baf3c3c37b9f5e1f3a92e63ae965": {
    "id": "76e01b422383baf3c3c37b9f5e1f3a92e63ae965",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Zoom",
      "Element Zoomed In"
    ],
    "storyId": "basics-zoom--element-zoomed-in",
    "story": {
      "id": "basics-zoom--element-zoomed-in",
      "kind": "Basics/Zoom",
      "name": "Element Zoomed In",
      "story": "Element Zoomed In",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/Zoom/Zoom.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "basics-zoom--element-zoomed-in",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "f3e4cec7d252906f7ebee9edff146de750a06843": {
    "id": "f3e4cec7d252906f7ebee9edff146de750a06843",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Zoom",
      "Element Zoomed Out"
    ],
    "storyId": "basics-zoom--element-zoomed-out",
    "story": {
      "id": "basics-zoom--element-zoomed-out",
      "kind": "Basics/Zoom",
      "name": "Element Zoomed Out",
      "story": "Element Zoomed Out",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/Zoom/Zoom.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "basics-zoom--element-zoomed-out",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "0e457ea29d44413b79c51c27bdffdf97de7531e7": {
    "id": "0e457ea29d44413b79c51c27bdffdf97de7531e7",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Zoom",
      "I Frame Actual Size"
    ],
    "storyId": "basics-zoom--i-frame-actual-size",
    "story": {
      "id": "basics-zoom--i-frame-actual-size",
      "kind": "Basics/Zoom",
      "name": "I Frame Actual Size",
      "story": "I Frame Actual Size",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/Zoom/Zoom.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "basics-zoom--i-frame-actual-size",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "fd7a1d9d525089aaf943711f33eb40861ce9dff2": {
    "id": "fd7a1d9d525089aaf943711f33eb40861ce9dff2",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Zoom",
      "I Frame Zoomed In"
    ],
    "storyId": "basics-zoom--i-frame-zoomed-in",
    "story": {
      "id": "basics-zoom--i-frame-zoomed-in",
      "kind": "Basics/Zoom",
      "name": "I Frame Zoomed In",
      "story": "I Frame Zoomed In",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/Zoom/Zoom.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "basics-zoom--i-frame-zoomed-in",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "4f1fcac3c700703fe6060101d9d74165239f6759": {
    "id": "4f1fcac3c700703fe6060101d9d74165239f6759",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Zoom",
      "I Frame Zoomed Out"
    ],
    "storyId": "basics-zoom--i-frame-zoomed-out",
    "story": {
      "id": "basics-zoom--i-frame-zoomed-out",
      "kind": "Basics/Zoom",
      "name": "I Frame Zoomed Out",
      "story": "I Frame Zoomed Out",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/Zoom/Zoom.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "basics-zoom--i-frame-zoomed-out",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "3bcbbdfb8b751b2c1892af71e5308fcb2cdcd108": {
    "id": "3bcbbdfb8b751b2c1892af71e5308fcb2cdcd108",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "ArgRow",
      "String"
    ],
    "storyId": "docs-argrow--string",
    "story": {
      "id": "docs-argrow--string",
      "kind": "Docs/ArgRow",
      "name": "String",
      "story": "String",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/ArgRow.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-argrow--string",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "09e2d27ae33fb6353d354f0cdab7778ff45dada2": {
    "id": "09e2d27ae33fb6353d354f0cdab7778ff45dada2",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "ArgRow",
      "Long Name"
    ],
    "storyId": "docs-argrow--long-name",
    "story": {
      "id": "docs-argrow--long-name",
      "kind": "Docs/ArgRow",
      "name": "Long Name",
      "story": "Long Name",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/ArgRow.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-argrow--long-name",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "56a3b75e7318c9e549c12f02b5f76718c186a912": {
    "id": "56a3b75e7318c9e549c12f02b5f76718c186a912",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "ArgRow",
      "Long Desc"
    ],
    "storyId": "docs-argrow--long-desc",
    "story": {
      "id": "docs-argrow--long-desc",
      "kind": "Docs/ArgRow",
      "name": "Long Desc",
      "story": "Long Desc",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/ArgRow.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-argrow--long-desc",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "599bdaa6f3359be5bde6fbcf5d7374ba112d559f": {
    "id": "599bdaa6f3359be5bde6fbcf5d7374ba112d559f",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "ArgRow",
      "Boolean"
    ],
    "storyId": "docs-argrow--boolean",
    "story": {
      "id": "docs-argrow--boolean",
      "kind": "Docs/ArgRow",
      "name": "Boolean",
      "story": "Boolean",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/ArgRow.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-argrow--boolean",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "7e5860da65f2a098ba08578b91653df12f22492a": {
    "id": "7e5860da65f2a098ba08578b91653df12f22492a",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "ArgRow",
      "Color"
    ],
    "storyId": "docs-argrow--color",
    "story": {
      "id": "docs-argrow--color",
      "kind": "Docs/ArgRow",
      "name": "Color",
      "story": "Color",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/ArgRow.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-argrow--color",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "ae65e0d418e89f39b2ba804e956f83d4eb242708": {
    "id": "ae65e0d418e89f39b2ba804e956f83d4eb242708",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "ArgRow",
      "Date"
    ],
    "storyId": "docs-argrow--date",
    "story": {
      "id": "docs-argrow--date",
      "kind": "Docs/ArgRow",
      "name": "Date",
      "story": "Date",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/ArgRow.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-argrow--date",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "9b226f96a47d226163abe4062430a5f52d72ca4f": {
    "id": "9b226f96a47d226163abe4062430a5f52d72ca4f",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "ArgRow",
      "Number"
    ],
    "storyId": "docs-argrow--number",
    "story": {
      "id": "docs-argrow--number",
      "kind": "Docs/ArgRow",
      "name": "Number",
      "story": "Number",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/ArgRow.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-argrow--number",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "6fef67b9c00640f66af2cd0e78cde690594cdd45": {
    "id": "6fef67b9c00640f66af2cd0e78cde690594cdd45",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "ArgRow",
      "Range"
    ],
    "storyId": "docs-argrow--range",
    "story": {
      "id": "docs-argrow--range",
      "kind": "Docs/ArgRow",
      "name": "Range",
      "story": "Range",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/ArgRow.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-argrow--range",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "185bd190c57fc5c232d2ba7d9752c6f90c5d08dc": {
    "id": "185bd190c57fc5c232d2ba7d9752c6f90c5d08dc",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "ArgRow",
      "Radio"
    ],
    "storyId": "docs-argrow--radio",
    "story": {
      "id": "docs-argrow--radio",
      "kind": "Docs/ArgRow",
      "name": "Radio",
      "story": "Radio",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/ArgRow.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-argrow--radio",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "049baccc5f5f3d7af5d15236af2a34781aad99b2": {
    "id": "049baccc5f5f3d7af5d15236af2a34781aad99b2",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "ArgRow",
      "Inline Radio"
    ],
    "storyId": "docs-argrow--inline-radio",
    "story": {
      "id": "docs-argrow--inline-radio",
      "kind": "Docs/ArgRow",
      "name": "Inline Radio",
      "story": "Inline Radio",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/ArgRow.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-argrow--inline-radio",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "d2aae28dbc9e2b5c32a74c2b866278ad75443809": {
    "id": "d2aae28dbc9e2b5c32a74c2b866278ad75443809",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "ArgRow",
      "Check"
    ],
    "storyId": "docs-argrow--check",
    "story": {
      "id": "docs-argrow--check",
      "kind": "Docs/ArgRow",
      "name": "Check",
      "story": "Check",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/ArgRow.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-argrow--check",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "f3dea9c08601d45bb31d044832477d2af3f7857e": {
    "id": "f3dea9c08601d45bb31d044832477d2af3f7857e",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "ArgRow",
      "Inline Check"
    ],
    "storyId": "docs-argrow--inline-check",
    "story": {
      "id": "docs-argrow--inline-check",
      "kind": "Docs/ArgRow",
      "name": "Inline Check",
      "story": "Inline Check",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/ArgRow.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-argrow--inline-check",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "bc65dc3464c6aa7c35e137b7c9d4e375b5ef88ce": {
    "id": "bc65dc3464c6aa7c35e137b7c9d4e375b5ef88ce",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "ArgRow",
      "Select"
    ],
    "storyId": "docs-argrow--select",
    "story": {
      "id": "docs-argrow--select",
      "kind": "Docs/ArgRow",
      "name": "Select",
      "story": "Select",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/ArgRow.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-argrow--select",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "c2cba2a0da84b80541efd57ee4567b3b7b00a18d": {
    "id": "c2cba2a0da84b80541efd57ee4567b3b7b00a18d",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "ArgRow",
      "Multi Select"
    ],
    "storyId": "docs-argrow--multi-select",
    "story": {
      "id": "docs-argrow--multi-select",
      "kind": "Docs/ArgRow",
      "name": "Multi Select",
      "story": "Multi Select",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/ArgRow.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-argrow--multi-select",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "717056099ae28a2e0d28785a119680a3d104ca3a": {
    "id": "717056099ae28a2e0d28785a119680a3d104ca3a",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "ArgRow",
      "Object Of"
    ],
    "storyId": "docs-argrow--object-of",
    "story": {
      "id": "docs-argrow--object-of",
      "kind": "Docs/ArgRow",
      "name": "Object Of",
      "story": "Object Of",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/ArgRow.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-argrow--object-of",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "b63f1fe3d7aa23dd7dcc8e3645f6f15c4a31d528": {
    "id": "b63f1fe3d7aa23dd7dcc8e3645f6f15c4a31d528",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "ArgRow",
      "Array Of"
    ],
    "storyId": "docs-argrow--array-of",
    "story": {
      "id": "docs-argrow--array-of",
      "kind": "Docs/ArgRow",
      "name": "Array Of",
      "story": "Array Of",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/ArgRow.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-argrow--array-of",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "f66a57dcb100c7fbe9f2509e39783ecd770bc8ab": {
    "id": "f66a57dcb100c7fbe9f2509e39783ecd770bc8ab",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "ArgRow",
      "Complex Object"
    ],
    "storyId": "docs-argrow--complex-object",
    "story": {
      "id": "docs-argrow--complex-object",
      "kind": "Docs/ArgRow",
      "name": "Complex Object",
      "story": "Complex Object",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/ArgRow.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-argrow--complex-object",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "241252cacb45e8143be48b5f43c586ab7850bb34": {
    "id": "241252cacb45e8143be48b5f43c586ab7850bb34",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "ArgRow",
      "Func"
    ],
    "storyId": "docs-argrow--func",
    "story": {
      "id": "docs-argrow--func",
      "kind": "Docs/ArgRow",
      "name": "Func",
      "story": "Func",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/ArgRow.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-argrow--func",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "1daa946c4ac8e3a50a870aae7d0f846f40f12ec9": {
    "id": "1daa946c4ac8e3a50a870aae7d0f846f40f12ec9",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "ArgRow",
      "Enum"
    ],
    "storyId": "docs-argrow--enum",
    "story": {
      "id": "docs-argrow--enum",
      "kind": "Docs/ArgRow",
      "name": "Enum",
      "story": "Enum",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/ArgRow.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-argrow--enum",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "8603420f0650df30834a3027c0f0f67f86a891dd": {
    "id": "8603420f0650df30834a3027c0f0f67f86a891dd",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "ArgRow",
      "Long Enum"
    ],
    "storyId": "docs-argrow--long-enum",
    "story": {
      "id": "docs-argrow--long-enum",
      "kind": "Docs/ArgRow",
      "name": "Long Enum",
      "story": "Long Enum",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/ArgRow.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-argrow--long-enum",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "970170d3746005418c8b03cf22a4b4c441a1771d": {
    "id": "970170d3746005418c8b03cf22a4b4c441a1771d",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "ArgRow",
      "Complex Union"
    ],
    "storyId": "docs-argrow--complex-union",
    "story": {
      "id": "docs-argrow--complex-union",
      "kind": "Docs/ArgRow",
      "name": "Complex Union",
      "story": "Complex Union",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/ArgRow.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-argrow--complex-union",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "01fc9f38251815fc3373d1d9664e265e2d2f1e7a": {
    "id": "01fc9f38251815fc3373d1d9664e265e2d2f1e7a",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "ArgRow",
      "Markdown"
    ],
    "storyId": "docs-argrow--markdown",
    "story": {
      "id": "docs-argrow--markdown",
      "kind": "Docs/ArgRow",
      "name": "Markdown",
      "story": "Markdown",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/ArgRow.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-argrow--markdown",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "380da0cd3d2a5b05c68802761558c7c8f89bd998": {
    "id": "380da0cd3d2a5b05c68802761558c7c8f89bd998",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "ArgRow",
      "String Compact"
    ],
    "storyId": "docs-argrow--string-compact",
    "story": {
      "id": "docs-argrow--string-compact",
      "kind": "Docs/ArgRow",
      "name": "String Compact",
      "story": "String Compact",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/ArgRow.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-argrow--string-compact",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "0d87ececfdbd1c2e4290eefd324b2102957efce2": {
    "id": "0d87ececfdbd1c2e4290eefd324b2102957efce2",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "ArgRow",
      "String No Controls"
    ],
    "storyId": "docs-argrow--string-no-controls",
    "story": {
      "id": "docs-argrow--string-no-controls",
      "kind": "Docs/ArgRow",
      "name": "String No Controls",
      "story": "String No Controls",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/ArgRow.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-argrow--string-no-controls",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "dfeb326191ac57b83db376e2d5f230af89e76490": {
    "id": "dfeb326191ac57b83db376e2d5f230af89e76490",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "ArgRow",
      "String No Controls Compact"
    ],
    "storyId": "docs-argrow--string-no-controls-compact",
    "story": {
      "id": "docs-argrow--string-no-controls-compact",
      "kind": "Docs/ArgRow",
      "name": "String No Controls Compact",
      "story": "String No Controls Compact",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/ArgRow.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-argrow--string-no-controls-compact",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "59797e241ee80627583fb14f845c5c844dfbf3d4": {
    "id": "59797e241ee80627583fb14f845c5c844dfbf3d4",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "ArgsTable",
      "Normal"
    ],
    "storyId": "docs-argstable--normal",
    "story": {
      "id": "docs-argstable--normal",
      "kind": "Docs/ArgsTable",
      "name": "Normal",
      "story": "Normal",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/ArgsTable.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-argstable--normal",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "aca463376a66627263c12befbbdae0c0c53b4e75": {
    "id": "aca463376a66627263c12befbbdae0c0c53b4e75",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "ArgsTable",
      "Compact"
    ],
    "storyId": "docs-argstable--compact",
    "story": {
      "id": "docs-argstable--compact",
      "kind": "Docs/ArgsTable",
      "name": "Compact",
      "story": "Compact",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/ArgsTable.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-argstable--compact",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "24acc63754f9393c377541f22049fb6156e5bc8a": {
    "id": "24acc63754f9393c377541f22049fb6156e5bc8a",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "ArgsTable",
      "In Addon Panel"
    ],
    "storyId": "docs-argstable--in-addon-panel",
    "story": {
      "id": "docs-argstable--in-addon-panel",
      "kind": "Docs/ArgsTable",
      "name": "In Addon Panel",
      "story": "In Addon Panel",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/ArgsTable.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-argstable--in-addon-panel",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "178f387dd1e67861da781081971de0460ba9dd9e": {
    "id": "178f387dd1e67861da781081971de0460ba9dd9e",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "ArgsTable",
      "In Addon Panel With Warning"
    ],
    "storyId": "docs-argstable--in-addon-panel-with-warning",
    "story": {
      "id": "docs-argstable--in-addon-panel-with-warning",
      "kind": "Docs/ArgsTable",
      "name": "In Addon Panel With Warning",
      "story": "In Addon Panel With Warning",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/ArgsTable.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-argstable--in-addon-panel-with-warning",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "11b7bffb1b8cf3834268264d03da917a2a992ad1": {
    "id": "11b7bffb1b8cf3834268264d03da917a2a992ad1",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "ArgsTable",
      "Sections"
    ],
    "storyId": "docs-argstable--sections",
    "story": {
      "id": "docs-argstable--sections",
      "kind": "Docs/ArgsTable",
      "name": "Sections",
      "story": "Sections",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/ArgsTable.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-argstable--sections",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "c1f8c2d765d3bede3394191129640775051f8aa5": {
    "id": "c1f8c2d765d3bede3394191129640775051f8aa5",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "ArgsTable",
      "Sections Compact"
    ],
    "storyId": "docs-argstable--sections-compact",
    "story": {
      "id": "docs-argstable--sections-compact",
      "kind": "Docs/ArgsTable",
      "name": "Sections Compact",
      "story": "Sections Compact",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/ArgsTable.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-argstable--sections-compact",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "7408eadc5a16f33da08536a4b9e9f0e7a75d7e66": {
    "id": "7408eadc5a16f33da08536a4b9e9f0e7a75d7e66",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "ArgsTable",
      "Sections And Subsections"
    ],
    "storyId": "docs-argstable--sections-and-subsections",
    "story": {
      "id": "docs-argstable--sections-and-subsections",
      "kind": "Docs/ArgsTable",
      "name": "Sections And Subsections",
      "story": "Sections And Subsections",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/ArgsTable.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-argstable--sections-and-subsections",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "e8d8a6eb0d4041b080bf2f3f764045e4d2ddb9cf": {
    "id": "e8d8a6eb0d4041b080bf2f3f764045e4d2ddb9cf",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "ArgsTable",
      "Subsections Only"
    ],
    "storyId": "docs-argstable--subsections-only",
    "story": {
      "id": "docs-argstable--subsections-only",
      "kind": "Docs/ArgsTable",
      "name": "Subsections Only",
      "story": "Subsections Only",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/ArgsTable.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-argstable--subsections-only",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "b98edf22f50166d98aa4ac1ebc506a39775310e9": {
    "id": "b98edf22f50166d98aa4ac1ebc506a39775310e9",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "ArgsTable",
      "All Controls"
    ],
    "storyId": "docs-argstable--all-controls",
    "story": {
      "id": "docs-argstable--all-controls",
      "kind": "Docs/ArgsTable",
      "name": "All Controls",
      "story": "All Controls",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/ArgsTable.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-argstable--all-controls",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "19450700ede9e64b5f3b87f69eceaa8892c4bb7a": {
    "id": "19450700ede9e64b5f3b87f69eceaa8892c4bb7a",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "ArgsTable",
      "Error"
    ],
    "storyId": "docs-argstable--error",
    "story": {
      "id": "docs-argstable--error",
      "kind": "Docs/ArgsTable",
      "name": "Error",
      "story": "Error",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/ArgsTable.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-argstable--error",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "a230d89b28b3b91e9588e2cb1f18ccec753d5f73": {
    "id": "a230d89b28b3b91e9588e2cb1f18ccec753d5f73",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "ArgsTable",
      "Empty"
    ],
    "storyId": "docs-argstable--empty",
    "story": {
      "id": "docs-argstable--empty",
      "kind": "Docs/ArgsTable",
      "name": "Empty",
      "story": "Empty",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/ArgsTable.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-argstable--empty",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "a58b66db72655e135bf781517fe52e61d70ef8c0": {
    "id": "a58b66db72655e135bf781517fe52e61d70ef8c0",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "ArgsTable",
      "With Default Expanded Args"
    ],
    "storyId": "docs-argstable--with-default-expanded-args",
    "story": {
      "id": "docs-argstable--with-default-expanded-args",
      "kind": "Docs/ArgsTable",
      "name": "With Default Expanded Args",
      "story": "With Default Expanded Args",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/ArgsTable.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-argstable--with-default-expanded-args",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "ccb8a80937956b8fc68c76a047568514b2d7d22f": {
    "id": "ccb8a80937956b8fc68c76a047568514b2d7d22f",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "SectionRow",
      "Section"
    ],
    "storyId": "docs-sectionrow--section",
    "story": {
      "id": "docs-sectionrow--section",
      "kind": "Docs/SectionRow",
      "name": "Section",
      "story": "Section",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/SectionRow.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-sectionrow--section",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "866fbcad820962175a222ed50c08c0a4288dc286": {
    "id": "866fbcad820962175a222ed50c08c0a4288dc286",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "SectionRow",
      "Subsection"
    ],
    "storyId": "docs-sectionrow--subsection",
    "story": {
      "id": "docs-sectionrow--subsection",
      "kind": "Docs/SectionRow",
      "name": "Subsection",
      "story": "Subsection",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/SectionRow.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-sectionrow--subsection",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "83424d7aa6cb5f646d30e900573e1fa44819bc0e": {
    "id": "83424d7aa6cb5f646d30e900573e1fa44819bc0e",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "SectionRow",
      "Collapsed"
    ],
    "storyId": "docs-sectionrow--collapsed",
    "story": {
      "id": "docs-sectionrow--collapsed",
      "kind": "Docs/SectionRow",
      "name": "Collapsed",
      "story": "Collapsed",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/SectionRow.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-sectionrow--collapsed",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "67557e38ca89be806b821c7c83e102097957fb2a": {
    "id": "67557e38ca89be806b821c7c83e102097957fb2a",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "SectionRow",
      "Nested"
    ],
    "storyId": "docs-sectionrow--nested",
    "story": {
      "id": "docs-sectionrow--nested",
      "kind": "Docs/SectionRow",
      "name": "Nested",
      "story": "Nested",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/SectionRow.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-sectionrow--nested",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "44876aebd64e0a8f4129fd9e5fb6677f66f1bd5e": {
    "id": "44876aebd64e0a8f4129fd9e5fb6677f66f1bd5e",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "TabbedArgsTable",
      "Tabs"
    ],
    "storyId": "docs-tabbedargstable--tabs",
    "story": {
      "id": "docs-tabbedargstable--tabs",
      "kind": "Docs/TabbedArgsTable",
      "name": "Tabs",
      "story": "Tabs",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/TabbedArgsTable.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-tabbedargstable--tabs",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "67bdd57d4a4f938782a8fc69f263cb92e0ffd08a": {
    "id": "67bdd57d4a4f938782a8fc69f263cb92e0ffd08a",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "TabbedArgsTable",
      "Tabs In Addon Panel"
    ],
    "storyId": "docs-tabbedargstable--tabs-in-addon-panel",
    "story": {
      "id": "docs-tabbedargstable--tabs-in-addon-panel",
      "kind": "Docs/TabbedArgsTable",
      "name": "Tabs In Addon Panel",
      "story": "Tabs In Addon Panel",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/TabbedArgsTable.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-tabbedargstable--tabs-in-addon-panel",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "2710146d88b3db025ec3c72959c380ac6bb37ebf": {
    "id": "2710146d88b3db025ec3c72959c380ac6bb37ebf",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "TabbedArgsTable",
      "Empty"
    ],
    "storyId": "docs-tabbedargstable--empty",
    "story": {
      "id": "docs-tabbedargstable--empty",
      "kind": "Docs/TabbedArgsTable",
      "name": "Empty",
      "story": "Empty",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ArgsTable/TabbedArgsTable.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-tabbedargstable--empty",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "cb2ab09294b6b67a6ba2ab5b4e1cbed7a811c0a7": {
    "id": "cb2ab09294b6b67a6ba2ab5b4e1cbed7a811c0a7",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "ColorPalette",
      "Default Style"
    ],
    "storyId": "docs-colorpalette--default-style",
    "story": {
      "id": "docs-colorpalette--default-style",
      "kind": "Docs/ColorPalette",
      "name": "Default Style",
      "story": "Default Style",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ColorPalette.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-colorpalette--default-style",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "8157dbb3ebbd966c8d4bd2384952914fa07364c0": {
    "id": "8157dbb3ebbd966c8d4bd2384952914fa07364c0",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "ColorPalette",
      "Named Colors"
    ],
    "storyId": "docs-colorpalette--named-colors",
    "story": {
      "id": "docs-colorpalette--named-colors",
      "kind": "Docs/ColorPalette",
      "name": "Named Colors",
      "story": "Named Colors",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/ColorPalette.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-colorpalette--named-colors",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "da2763baec52da4bf4bced870124ee740dc0de20": {
    "id": "da2763baec52da4bf4bced870124ee740dc0de20",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "Description",
      "Text"
    ],
    "storyId": "docs-description--text",
    "story": {
      "id": "docs-description--text",
      "kind": "Docs/Description",
      "name": "Text",
      "story": "Text",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/Description.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-description--text",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "9bbe7b47db3573a42bfd3fb6c543a549c2e02aa0": {
    "id": "9bbe7b47db3573a42bfd3fb6c543a549c2e02aa0",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "Description",
      "Markdown"
    ],
    "storyId": "docs-description--markdown",
    "story": {
      "id": "docs-description--markdown",
      "kind": "Docs/Description",
      "name": "Markdown",
      "story": "Markdown",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/Description.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-description--markdown",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "be877dffee9703fd92504b9beaa775b6a903bb1e": {
    "id": "be877dffee9703fd92504b9beaa775b6a903bb1e",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "Description",
      "Markdown Links"
    ],
    "storyId": "docs-description--markdown-links",
    "story": {
      "id": "docs-description--markdown-links",
      "kind": "Docs/Description",
      "name": "Markdown Links",
      "story": "Markdown Links",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/Description.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-description--markdown-links",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "036d0f326811815d6c202800ab6b81ab0194029e": {
    "id": "036d0f326811815d6c202800ab6b81ab0194029e",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "DocsPage",
      "With Subtitle"
    ],
    "storyId": "docs-docspage--with-subtitle",
    "story": {
      "id": "docs-docspage--with-subtitle",
      "kind": "Docs/DocsPage",
      "name": "With Subtitle",
      "story": "With Subtitle",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/DocsPage.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-docspage--with-subtitle",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "aad33b04400e36b646c54d6c2de51aa6402344a2": {
    "id": "aad33b04400e36b646c54d6c2de51aa6402344a2",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "DocsPage",
      "Empty"
    ],
    "storyId": "docs-docspage--empty",
    "story": {
      "id": "docs-docspage--empty",
      "kind": "Docs/DocsPage",
      "name": "Empty",
      "story": "Empty",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/DocsPage.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-docspage--empty",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "b7a2cd62ebd72433c430097d10afe30492f289ea": {
    "id": "b7a2cd62ebd72433c430097d10afe30492f289ea",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "DocsPage",
      "No Text"
    ],
    "storyId": "docs-docspage--no-text",
    "story": {
      "id": "docs-docspage--no-text",
      "kind": "Docs/DocsPage",
      "name": "No Text",
      "story": "No Text",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/DocsPage.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-docspage--no-text",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "bc87522c85791c2bec923bfd8da4cb0edab3ec11": {
    "id": "bc87522c85791c2bec923bfd8da4cb0edab3ec11",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "DocsPage",
      "Text"
    ],
    "storyId": "docs-docspage--text",
    "story": {
      "id": "docs-docspage--text",
      "kind": "Docs/DocsPage",
      "name": "Text",
      "story": "Text",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/DocsPage.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-docspage--text",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "2d0e786b13414fad6e61ffc7ad175177fa0a6100": {
    "id": "2d0e786b13414fad6e61ffc7ad175177fa0a6100",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "DocsPage",
      "Markdown"
    ],
    "storyId": "docs-docspage--markdown",
    "story": {
      "id": "docs-docspage--markdown",
      "kind": "Docs/DocsPage",
      "name": "Markdown",
      "story": "Markdown",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/DocsPage.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-docspage--markdown",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "821c7b3911b964bd56293b855da339791dcba6ec": {
    "id": "821c7b3911b964bd56293b855da339791dcba6ec",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "EmptyBlock",
      "Error"
    ],
    "storyId": "docs-emptyblock--error",
    "story": {
      "id": "docs-emptyblock--error",
      "kind": "Docs/EmptyBlock",
      "name": "Error",
      "story": "Error",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/EmptyBlock.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-emptyblock--error",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "a26993ec1bff31e0ceaca5bbd6289d7e79a12868": {
    "id": "a26993ec1bff31e0ceaca5bbd6289d7e79a12868",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "IconGallery",
      "Default Style"
    ],
    "storyId": "docs-icongallery--default-style",
    "story": {
      "id": "docs-icongallery--default-style",
      "kind": "Docs/IconGallery",
      "name": "Default Style",
      "story": "Default Style",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/IconGallery.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-icongallery--default-style",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "660938731c9b2c36ee5c4af85223a61b452085ef": {
    "id": "660938731c9b2c36ee5c4af85223a61b452085ef",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "Preview",
      "Code Collapsed"
    ],
    "storyId": "docs-preview--code-collapsed",
    "story": {
      "id": "docs-preview--code-collapsed",
      "kind": "Docs/Preview",
      "name": "Code Collapsed",
      "story": "Code Collapsed",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/Preview.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-preview--code-collapsed",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "783872240b5cb517ceff96c467ad56a737b2163d": {
    "id": "783872240b5cb517ceff96c467ad56a737b2163d",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "Preview",
      "Code Expanded"
    ],
    "storyId": "docs-preview--code-expanded",
    "story": {
      "id": "docs-preview--code-expanded",
      "kind": "Docs/Preview",
      "name": "Code Expanded",
      "story": "Code Expanded",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/Preview.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-preview--code-expanded",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "213bc6f475160aa3908a35cbc6ba6b5bfaabaed0": {
    "id": "213bc6f475160aa3908a35cbc6ba6b5bfaabaed0",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "Preview",
      "Code Error"
    ],
    "storyId": "docs-preview--code-error",
    "story": {
      "id": "docs-preview--code-error",
      "kind": "Docs/Preview",
      "name": "Code Error",
      "story": "Code Error",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/Preview.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-preview--code-error",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "1779115833e42fb926f8e0774820dae7a6bdc36e": {
    "id": "1779115833e42fb926f8e0774820dae7a6bdc36e",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "Preview",
      "Single"
    ],
    "storyId": "docs-preview--single",
    "story": {
      "id": "docs-preview--single",
      "kind": "Docs/Preview",
      "name": "Single",
      "story": "Single",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/Preview.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-preview--single",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "cf3f40b6787603dce06844d97838b76daf65570b": {
    "id": "cf3f40b6787603dce06844d97838b76daf65570b",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "Preview",
      "Row"
    ],
    "storyId": "docs-preview--row",
    "story": {
      "id": "docs-preview--row",
      "kind": "Docs/Preview",
      "name": "Row",
      "story": "Row",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/Preview.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-preview--row",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "7fc7fce6dfe0c151dccb16251d2cc90a88595917": {
    "id": "7fc7fce6dfe0c151dccb16251d2cc90a88595917",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "Preview",
      "Column"
    ],
    "storyId": "docs-preview--column",
    "story": {
      "id": "docs-preview--column",
      "kind": "Docs/Preview",
      "name": "Column",
      "story": "Column",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/Preview.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-preview--column",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "b652942768748ad8fb27583f96360b6b61567395": {
    "id": "b652942768748ad8fb27583f96360b6b61567395",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "Preview",
      "Grid With 3 Columns"
    ],
    "storyId": "docs-preview--grid-with-3-columns",
    "story": {
      "id": "docs-preview--grid-with-3-columns",
      "kind": "Docs/Preview",
      "name": "Grid With 3 Columns",
      "story": "Grid With 3 Columns",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/Preview.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-preview--grid-with-3-columns",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "91ad62fb71b4a743c99c52c0eb1f9b443a7af0ea": {
    "id": "91ad62fb71b4a743c99c52c0eb1f9b443a7af0ea",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "Preview",
      "With Toolbar"
    ],
    "storyId": "docs-preview--with-toolbar",
    "story": {
      "id": "docs-preview--with-toolbar",
      "kind": "Docs/Preview",
      "name": "With Toolbar",
      "story": "With Toolbar",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/Preview.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-preview--with-toolbar",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "8ed5fd8dfc58c08b269814b1f579543df0c60c93": {
    "id": "8ed5fd8dfc58c08b269814b1f579543df0c60c93",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "Preview",
      "Wide"
    ],
    "storyId": "docs-preview--wide",
    "story": {
      "id": "docs-preview--wide",
      "kind": "Docs/Preview",
      "name": "Wide",
      "story": "Wide",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/Preview.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-preview--wide",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "72ef6749f25fd9f489e1f6357c1e15967c2d9528": {
    "id": "72ef6749f25fd9f489e1f6357c1e15967c2d9528",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "Preview",
      "With Toolbar Multi"
    ],
    "storyId": "docs-preview--with-toolbar-multi",
    "story": {
      "id": "docs-preview--with-toolbar-multi",
      "kind": "Docs/Preview",
      "name": "With Toolbar Multi",
      "story": "With Toolbar Multi",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/Preview.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-preview--with-toolbar-multi",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "081b3571b8eb8f396869a6505c28d6e00ed31e06": {
    "id": "081b3571b8eb8f396869a6505c28d6e00ed31e06",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "Preview",
      "With Fullscreen Single"
    ],
    "storyId": "docs-preview--with-fullscreen-single",
    "story": {
      "id": "docs-preview--with-fullscreen-single",
      "kind": "Docs/Preview",
      "name": "With Fullscreen Single",
      "story": "With Fullscreen Single",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/Preview.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-preview--with-fullscreen-single",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "044d159f44aedbc7e427dba51b0e0a9ebf355cba": {
    "id": "044d159f44aedbc7e427dba51b0e0a9ebf355cba",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "Preview",
      "With Fullscreen Multi"
    ],
    "storyId": "docs-preview--with-fullscreen-multi",
    "story": {
      "id": "docs-preview--with-fullscreen-multi",
      "kind": "Docs/Preview",
      "name": "With Fullscreen Multi",
      "story": "With Fullscreen Multi",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/Preview.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-preview--with-fullscreen-multi",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "bbc2ec78db1cc83c6a39a034651f0ae0e58aefed": {
    "id": "bbc2ec78db1cc83c6a39a034651f0ae0e58aefed",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "Preview",
      "With Centered Single"
    ],
    "storyId": "docs-preview--with-centered-single",
    "story": {
      "id": "docs-preview--with-centered-single",
      "kind": "Docs/Preview",
      "name": "With Centered Single",
      "story": "With Centered Single",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/Preview.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-preview--with-centered-single",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "ae8ef6b4fa27e5b2e0f96d7f8ed596aa4a70b102": {
    "id": "ae8ef6b4fa27e5b2e0f96d7f8ed596aa4a70b102",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "Preview",
      "With Centered Multi"
    ],
    "storyId": "docs-preview--with-centered-multi",
    "story": {
      "id": "docs-preview--with-centered-multi",
      "kind": "Docs/Preview",
      "name": "With Centered Multi",
      "story": "With Centered Multi",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/Preview.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-preview--with-centered-multi",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "de752c0286a3b178c99ed9319fa777c3770ae002": {
    "id": "de752c0286a3b178c99ed9319fa777c3770ae002",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "Preview",
      "With Additional Actions"
    ],
    "storyId": "docs-preview--with-additional-actions",
    "story": {
      "id": "docs-preview--with-additional-actions",
      "kind": "Docs/Preview",
      "name": "With Additional Actions",
      "story": "With Additional Actions",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/Preview.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-preview--with-additional-actions",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "88408b74dd5e86dad7d0e2500cb9be6f876d2140": {
    "id": "88408b74dd5e86dad7d0e2500cb9be6f876d2140",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "Source",
      "JSX"
    ],
    "storyId": "docs-source--jsx",
    "story": {
      "id": "docs-source--jsx",
      "kind": "Docs/Source",
      "name": "JSX",
      "story": "JSX",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/Source.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-source--jsx",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "253f673b9a1875a79d6617e052edadf5b8a4e03d": {
    "id": "253f673b9a1875a79d6617e052edadf5b8a4e03d",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "Source",
      "CSS"
    ],
    "storyId": "docs-source--css",
    "story": {
      "id": "docs-source--css",
      "kind": "Docs/Source",
      "name": "CSS",
      "story": "CSS",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/Source.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-source--css",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "c3cbda6869ebac987f6d9fbcd4f946682ec8385a": {
    "id": "c3cbda6869ebac987f6d9fbcd4f946682ec8385a",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "Source",
      "No Story"
    ],
    "storyId": "docs-source--no-story",
    "story": {
      "id": "docs-source--no-story",
      "kind": "Docs/Source",
      "name": "No Story",
      "story": "No Story",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/Source.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-source--no-story",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "46f10dad3d2ba7189c5c36a48bbe97425aebd3cb": {
    "id": "46f10dad3d2ba7189c5c36a48bbe97425aebd3cb",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "Source",
      "Source Unavailable"
    ],
    "storyId": "docs-source--source-unavailable",
    "story": {
      "id": "docs-source--source-unavailable",
      "kind": "Docs/Source",
      "name": "Source Unavailable",
      "story": "Source Unavailable",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/Source.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-source--source-unavailable",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "c779cae5f7d89a57456044031daf39f68f333273": {
    "id": "c779cae5f7d89a57456044031daf39f68f333273",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "Story",
      "Inline"
    ],
    "storyId": "docs-story--inline",
    "story": {
      "id": "docs-story--inline",
      "kind": "Docs/Story",
      "name": "Inline",
      "story": "Inline",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/Story.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-story--inline",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "3d5966b6a42830c262b563283c743deee115b4ae": {
    "id": "3d5966b6a42830c262b563283c743deee115b4ae",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "Story",
      "Error"
    ],
    "storyId": "docs-story--error",
    "story": {
      "id": "docs-story--error",
      "kind": "Docs/Story",
      "name": "Error",
      "story": "Error",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/Story.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-story--error",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "a8f5123006249f4ca47587618a5a443c70835eb2": {
    "id": "a8f5123006249f4ca47587618a5a443c70835eb2",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "Story",
      "React Hook"
    ],
    "storyId": "docs-story--react-hook",
    "story": {
      "id": "docs-story--react-hook",
      "kind": "Docs/Story",
      "name": "React Hook",
      "story": "React Hook",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/Story.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-story--react-hook",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "81cba493405c11c3399554ddb8f9743a6d423471": {
    "id": "81cba493405c11c3399554ddb8f9743a6d423471",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "Typeset",
      "With Font Sizes"
    ],
    "storyId": "docs-typeset--with-font-sizes",
    "story": {
      "id": "docs-typeset--with-font-sizes",
      "kind": "Docs/Typeset",
      "name": "With Font Sizes",
      "story": "With Font Sizes",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/Typeset.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-typeset--with-font-sizes",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "6e1d8e00f21e0f5f6bbe75c9f062f74f245bd1c2": {
    "id": "6e1d8e00f21e0f5f6bbe75c9f062f74f245bd1c2",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "Typeset",
      "With Font Weight"
    ],
    "storyId": "docs-typeset--with-font-weight",
    "story": {
      "id": "docs-typeset--with-font-weight",
      "kind": "Docs/Typeset",
      "name": "With Font Weight",
      "story": "With Font Weight",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/Typeset.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-typeset--with-font-weight",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "bffa65a6b6efc045925926a008feab8934b6d0ae": {
    "id": "bffa65a6b6efc045925926a008feab8934b6d0ae",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "Typeset",
      "With Font Family"
    ],
    "storyId": "docs-typeset--with-font-family",
    "story": {
      "id": "docs-typeset--with-font-family",
      "kind": "Docs/Typeset",
      "name": "With Font Family",
      "story": "With Font Family",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/Typeset.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-typeset--with-font-family",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "60f070b0ebac77cc6139fd0f3634682ff38a8e48": {
    "id": "60f070b0ebac77cc6139fd0f3634682ff38a8e48",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Docs",
      "Typeset",
      "With Weight Text"
    ],
    "storyId": "docs-typeset--with-weight-text",
    "story": {
      "id": "docs-typeset--with-weight-text",
      "kind": "Docs/Typeset",
      "name": "With Weight Text",
      "story": "With Weight Text",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/blocks/Typeset.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "docs-typeset--with-weight-text",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "2a935c706b1b81b83193483252d0a85534cc5dae": {
    "id": "2a935c706b1b81b83193483252d0a85534cc5dae",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Brand",
      "StorybookLogo",
      "Normal"
    ],
    "storyId": "basics-brand-storybooklogo--normal",
    "story": {
      "id": "basics-brand-storybooklogo--normal",
      "kind": "Basics/Brand/StorybookLogo",
      "name": "Normal",
      "story": "Normal",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/brand/StorybookLogo.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "basics-brand-storybooklogo--normal",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "153ff07099045bb9a399666326eec708c67e2031": {
    "id": "153ff07099045bb9a399666326eec708c67e2031",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Controls",
      "Array",
      "Basic"
    ],
    "storyId": "controls-array--basic",
    "story": {
      "id": "controls-array--basic",
      "kind": "Controls/Array",
      "name": "Basic",
      "story": "Basic",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/controls/Array.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "controls-array--basic",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "975ee6c185cbeeb87e89107b8788e028878b14e9": {
    "id": "975ee6c185cbeeb87e89107b8788e028878b14e9",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Controls",
      "Array",
      "Undefined"
    ],
    "storyId": "controls-array--undefined",
    "story": {
      "id": "controls-array--undefined",
      "kind": "Controls/Array",
      "name": "Undefined",
      "story": "Undefined",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/controls/Array.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "controls-array--undefined",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "4637b805e03e682c188b5bffe8e28c02138e8e60": {
    "id": "4637b805e03e682c188b5bffe8e28c02138e8e60",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Controls",
      "Boolean",
      "Basic"
    ],
    "storyId": "controls-boolean--basic",
    "story": {
      "id": "controls-boolean--basic",
      "kind": "Controls/Boolean",
      "name": "Basic",
      "story": "Basic",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/controls/Boolean.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "controls-boolean--basic",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "3147eff1d3508bf18df91e1332295ffa41b25fab": {
    "id": "3147eff1d3508bf18df91e1332295ffa41b25fab",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Controls",
      "Boolean",
      "Undefined"
    ],
    "storyId": "controls-boolean--undefined",
    "story": {
      "id": "controls-boolean--undefined",
      "kind": "Controls/Boolean",
      "name": "Undefined",
      "story": "Undefined",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/controls/Boolean.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "controls-boolean--undefined",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "f08e68d956e4f1c10622a2a525f7c7c4383f0f0a": {
    "id": "f08e68d956e4f1c10622a2a525f7c7c4383f0f0a",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Controls",
      "Color",
      "Basic"
    ],
    "storyId": "controls-color--basic",
    "story": {
      "id": "controls-color--basic",
      "kind": "Controls/Color",
      "name": "Basic",
      "story": "Basic",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/controls/Color.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "controls-color--basic",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "3e6030bb25119e9a07bdf7f5d47e96e26a235148": {
    "id": "3e6030bb25119e9a07bdf7f5d47e96e26a235148",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Controls",
      "Color",
      "Undefined"
    ],
    "storyId": "controls-color--undefined",
    "story": {
      "id": "controls-color--undefined",
      "kind": "Controls/Color",
      "name": "Undefined",
      "story": "Undefined",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/controls/Color.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "controls-color--undefined",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "a233e1aa4821eb457adf7fde9c39b81b4e65a118": {
    "id": "a233e1aa4821eb457adf7fde9c39b81b4e65a118",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Controls",
      "Color",
      "With Preset Colors"
    ],
    "storyId": "controls-color--with-preset-colors",
    "story": {
      "id": "controls-color--with-preset-colors",
      "kind": "Controls/Color",
      "name": "With Preset Colors",
      "story": "With Preset Colors",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/controls/Color.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "controls-color--with-preset-colors",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "a28ddf7cc98f426b148e586511ec6bd29e869b87": {
    "id": "a28ddf7cc98f426b148e586511ec6bd29e869b87",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Controls",
      "Date",
      "Basic"
    ],
    "storyId": "controls-date--basic",
    "story": {
      "id": "controls-date--basic",
      "kind": "Controls/Date",
      "name": "Basic",
      "story": "Basic",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/controls/Date.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "controls-date--basic",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "5635147321b823f60547a6c774c1dee0e1df697b": {
    "id": "5635147321b823f60547a6c774c1dee0e1df697b",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Controls",
      "Date",
      "Undefined"
    ],
    "storyId": "controls-date--undefined",
    "story": {
      "id": "controls-date--undefined",
      "kind": "Controls/Date",
      "name": "Undefined",
      "story": "Undefined",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/controls/Date.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "controls-date--undefined",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "656af7a5d3cee70089872b6eadc912abe3cbcb31": {
    "id": "656af7a5d3cee70089872b6eadc912abe3cbcb31",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Controls",
      "Number",
      "Basic"
    ],
    "storyId": "controls-number--basic",
    "story": {
      "id": "controls-number--basic",
      "kind": "Controls/Number",
      "name": "Basic",
      "story": "Basic",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/controls/Number.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "controls-number--basic",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "988841df5718a95eafbc581326115ca98cb31220": {
    "id": "988841df5718a95eafbc581326115ca98cb31220",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Controls",
      "Number",
      "Undefined"
    ],
    "storyId": "controls-number--undefined",
    "story": {
      "id": "controls-number--undefined",
      "kind": "Controls/Number",
      "name": "Undefined",
      "story": "Undefined",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/controls/Number.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "controls-number--undefined",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "addb77e23aa04ba8d33132251301399b603859b1": {
    "id": "addb77e23aa04ba8d33132251301399b603859b1",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Controls",
      "Object",
      "Basic"
    ],
    "storyId": "controls-object--basic",
    "story": {
      "id": "controls-object--basic",
      "kind": "Controls/Object",
      "name": "Basic",
      "story": "Basic",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/controls/Object.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "controls-object--basic",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "4c0e9025c0e9c495ede9a08f0ce8acea4af4497f": {
    "id": "4c0e9025c0e9c495ede9a08f0ce8acea4af4497f",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Controls",
      "Object",
      "Null"
    ],
    "storyId": "controls-object--null",
    "story": {
      "id": "controls-object--null",
      "kind": "Controls/Object",
      "name": "Null",
      "story": "Null",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/controls/Object.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "controls-object--null",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "5ec999b03cf995356bab139e6ddf05e5498b8afc": {
    "id": "5ec999b03cf995356bab139e6ddf05e5498b8afc",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Controls",
      "Object",
      "Undefined"
    ],
    "storyId": "controls-object--undefined",
    "story": {
      "id": "controls-object--undefined",
      "kind": "Controls/Object",
      "name": "Undefined",
      "story": "Undefined",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/controls/Object.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "controls-object--undefined",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "7552c2c7fb64b9bbde26c7880bea784953c8f0c3": {
    "id": "7552c2c7fb64b9bbde26c7880bea784953c8f0c3",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Controls",
      "Object",
      "Validated As Array"
    ],
    "storyId": "controls-object--validated-as-array",
    "story": {
      "id": "controls-object--validated-as-array",
      "kind": "Controls/Object",
      "name": "Validated As Array",
      "story": "Validated As Array",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/controls/Object.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "controls-object--validated-as-array",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "5f42a8c0963b0ee2d5c29fa59660e9c9c93e0139": {
    "id": "5f42a8c0963b0ee2d5c29fa59660e9c9c93e0139",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Controls",
      "Range",
      "Basic"
    ],
    "storyId": "controls-range--basic",
    "story": {
      "id": "controls-range--basic",
      "kind": "Controls/Range",
      "name": "Basic",
      "story": "Basic",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/controls/Range.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "controls-range--basic",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "051195175916a9349d7a3b327b169fecd9bd0c7e": {
    "id": "051195175916a9349d7a3b327b169fecd9bd0c7e",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Controls",
      "Range",
      "Undefined"
    ],
    "storyId": "controls-range--undefined",
    "story": {
      "id": "controls-range--undefined",
      "kind": "Controls/Range",
      "name": "Undefined",
      "story": "Undefined",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/controls/Range.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "controls-range--undefined",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "3dadda28ad2d59284db1e28d362e49f9783d74a9": {
    "id": "3dadda28ad2d59284db1e28d362e49f9783d74a9",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Controls",
      "Text",
      "Basic"
    ],
    "storyId": "controls-text--basic",
    "story": {
      "id": "controls-text--basic",
      "kind": "Controls/Text",
      "name": "Basic",
      "story": "Basic",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/controls/Text.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "controls-text--basic",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "f734affdf88f661c0c3d226c4b127143a7769828": {
    "id": "f734affdf88f661c0c3d226c4b127143a7769828",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Controls",
      "Text",
      "Undefined"
    ],
    "storyId": "controls-text--undefined",
    "story": {
      "id": "controls-text--undefined",
      "kind": "Controls/Text",
      "name": "Undefined",
      "story": "Undefined",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/controls/Text.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "controls-text--undefined",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "3ebbfceef059b73fbc3ede274591283b7706e099": {
    "id": "3ebbfceef059b73fbc3ede274591283b7706e099",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Controls",
      "Options",
      "Check Array"
    ],
    "storyId": "controls-options--check-array",
    "story": {
      "id": "controls-options--check-array",
      "kind": "Controls/Options",
      "name": "Check Array",
      "story": "Check Array",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/controls/options/Options.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "controls-options--check-array",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "18f4b2045a9c7853b295a014a153790641c04f55": {
    "id": "18f4b2045a9c7853b295a014a153790641c04f55",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Controls",
      "Options",
      "Inline Check Array"
    ],
    "storyId": "controls-options--inline-check-array",
    "story": {
      "id": "controls-options--inline-check-array",
      "kind": "Controls/Options",
      "name": "Inline Check Array",
      "story": "Inline Check Array",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/controls/options/Options.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "controls-options--inline-check-array",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "73b2201625687d723723ec651872f5f70902586a": {
    "id": "73b2201625687d723723ec651872f5f70902586a",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Controls",
      "Options",
      "Check Object"
    ],
    "storyId": "controls-options--check-object",
    "story": {
      "id": "controls-options--check-object",
      "kind": "Controls/Options",
      "name": "Check Object",
      "story": "Check Object",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/controls/options/Options.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "controls-options--check-object",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "102f24cc91986479aa5865d599a45c786a7d44ed": {
    "id": "102f24cc91986479aa5865d599a45c786a7d44ed",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Controls",
      "Options",
      "Inline Check Object"
    ],
    "storyId": "controls-options--inline-check-object",
    "story": {
      "id": "controls-options--inline-check-object",
      "kind": "Controls/Options",
      "name": "Inline Check Object",
      "story": "Inline Check Object",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/controls/options/Options.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "controls-options--inline-check-object",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "124918cdc3141858c4a3dd038045248544f7ca7f": {
    "id": "124918cdc3141858c4a3dd038045248544f7ca7f",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Controls",
      "Options",
      "Array Radio"
    ],
    "storyId": "controls-options--array-radio",
    "story": {
      "id": "controls-options--array-radio",
      "kind": "Controls/Options",
      "name": "Array Radio",
      "story": "Array Radio",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/controls/options/Options.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "controls-options--array-radio",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "1c14e0093c779573d2c320ab12f8e8391593f3b6": {
    "id": "1c14e0093c779573d2c320ab12f8e8391593f3b6",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Controls",
      "Options",
      "Array Inline Radio"
    ],
    "storyId": "controls-options--array-inline-radio",
    "story": {
      "id": "controls-options--array-inline-radio",
      "kind": "Controls/Options",
      "name": "Array Inline Radio",
      "story": "Array Inline Radio",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/controls/options/Options.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "controls-options--array-inline-radio",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "ed8564499ed6b66c7583412d1720e6dfa9816d54": {
    "id": "ed8564499ed6b66c7583412d1720e6dfa9816d54",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Controls",
      "Options",
      "Object Radio"
    ],
    "storyId": "controls-options--object-radio",
    "story": {
      "id": "controls-options--object-radio",
      "kind": "Controls/Options",
      "name": "Object Radio",
      "story": "Object Radio",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/controls/options/Options.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "controls-options--object-radio",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "85d143a76b095ecd0e95466170b45df2851a5009": {
    "id": "85d143a76b095ecd0e95466170b45df2851a5009",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Controls",
      "Options",
      "Object Inline Radio"
    ],
    "storyId": "controls-options--object-inline-radio",
    "story": {
      "id": "controls-options--object-inline-radio",
      "kind": "Controls/Options",
      "name": "Object Inline Radio",
      "story": "Object Inline Radio",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/controls/options/Options.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "controls-options--object-inline-radio",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "481f455ea51abe64769570e8567ee45285fd19fd": {
    "id": "481f455ea51abe64769570e8567ee45285fd19fd",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Controls",
      "Options",
      "Array Select"
    ],
    "storyId": "controls-options--array-select",
    "story": {
      "id": "controls-options--array-select",
      "kind": "Controls/Options",
      "name": "Array Select",
      "story": "Array Select",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/controls/options/Options.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "controls-options--array-select",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "ca0683916cd51a0f1f66bed53ab74888ecdce0dd": {
    "id": "ca0683916cd51a0f1f66bed53ab74888ecdce0dd",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Controls",
      "Options",
      "Array Multi Select"
    ],
    "storyId": "controls-options--array-multi-select",
    "story": {
      "id": "controls-options--array-multi-select",
      "kind": "Controls/Options",
      "name": "Array Multi Select",
      "story": "Array Multi Select",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/controls/options/Options.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "controls-options--array-multi-select",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "5583116db22abee3b95eec4ebc378fd28f3187a3": {
    "id": "5583116db22abee3b95eec4ebc378fd28f3187a3",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Controls",
      "Options",
      "Object Select"
    ],
    "storyId": "controls-options--object-select",
    "story": {
      "id": "controls-options--object-select",
      "kind": "Controls/Options",
      "name": "Object Select",
      "story": "Object Select",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/controls/options/Options.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "controls-options--object-select",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "0793e61d2063e71b01ee69858cb3734f6723bca6": {
    "id": "0793e61d2063e71b01ee69858cb3734f6723bca6",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Controls",
      "Options",
      "Object Multi Select"
    ],
    "storyId": "controls-options--object-multi-select",
    "story": {
      "id": "controls-options--object-multi-select",
      "kind": "Controls/Options",
      "name": "Object Multi Select",
      "story": "Object Multi Select",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/controls/options/Options.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "controls-options--object-multi-select",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "0670938c77ca12d323f6d31aab7656c87bc8b93b": {
    "id": "0670938c77ca12d323f6d31aab7656c87bc8b93b",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Placeholder",
      "Single Child"
    ],
    "storyId": "basics-placeholder--single-child",
    "story": {
      "id": "basics-placeholder--single-child",
      "kind": "Basics/Placeholder",
      "name": "Single Child",
      "story": "Single Child",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/placeholder/placeholder.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "basics-placeholder--single-child",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "93c341b8647094a3b76fb2ddf3ad87e6ae88c55c": {
    "id": "93c341b8647094a3b76fb2ddf3ad87e6ae88c55c",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "Placeholder",
      "Two Children"
    ],
    "storyId": "basics-placeholder--two-children",
    "story": {
      "id": "basics-placeholder--two-children",
      "kind": "Basics/Placeholder",
      "name": "Two Children",
      "story": "Two Children",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/placeholder/placeholder.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "basics-placeholder--two-children",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "f1c81dfdced37177820d870651f9133d4a847686": {
    "id": "f1c81dfdced37177820d870651f9133d4a847686",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "DocumentFormatting",
      "With Markdown"
    ],
    "storyId": "basics-documentformatting--with-markdown",
    "story": {
      "id": "basics-documentformatting--with-markdown",
      "kind": "Basics/DocumentFormatting",
      "name": "With Markdown",
      "story": "With Markdown",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/typography/DocumentWrapper.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "basics-documentformatting--with-markdown",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "7f671a04c2defb69f8ce8178e917e14541e4ff4a": {
    "id": "7f671a04c2defb69f8ce8178e917e14541e4ff4a",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Basics",
      "DocumentFormatting",
      "With DOM"
    ],
    "storyId": "basics-documentformatting--with-dom",
    "story": {
      "id": "basics-documentformatting--with-dom",
      "kind": "Basics/DocumentFormatting",
      "name": "With DOM",
      "story": "With DOM",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./lib/components/src/typography/DocumentWrapper.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "basics-documentformatting--with-dom",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "3c05d47dd7fe7487820c5b13d24da89ab01e45d7": {
    "id": "3c05d47dd7fe7487820c5b13d24da89ab01e45d7",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "A11y",
      "BaseButton",
      "Default"
    ],
    "storyId": "addons-a11y-basebutton--default",
    "story": {
      "id": "addons-a11y-basebutton--default",
      "kind": "Addons/A11y/BaseButton",
      "name": "Default",
      "story": "Default",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-a11y/base-button.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-a11y-basebutton--default",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "e775a27550bd721bc6144d2afd2688bcf82e9d03": {
    "id": "e775a27550bd721bc6144d2afd2688bcf82e9d03",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "A11y",
      "BaseButton",
      "Label"
    ],
    "storyId": "addons-a11y-basebutton--label",
    "story": {
      "id": "addons-a11y-basebutton--label",
      "kind": "Addons/A11y/BaseButton",
      "name": "Label",
      "story": "Label",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-a11y/base-button.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-a11y-basebutton--label",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "b7e7585e3abfdefad5d9037cac235ed8d5007ea5": {
    "id": "b7e7585e3abfdefad5d9037cac235ed8d5007ea5",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "A11y",
      "BaseButton",
      "Disabled"
    ],
    "storyId": "addons-a11y-basebutton--disabled",
    "story": {
      "id": "addons-a11y-basebutton--disabled",
      "kind": "Addons/A11y/BaseButton",
      "name": "Disabled",
      "story": "Disabled",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-a11y/base-button.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-a11y-basebutton--disabled",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "d1249a7446e215ad5aa8837d9806b50f6cd98a36": {
    "id": "d1249a7446e215ad5aa8837d9806b50f6cd98a36",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "A11y",
      "BaseButton",
      "Invalid contrast"
    ],
    "storyId": "addons-a11y-basebutton--invalid-contrast",
    "story": {
      "id": "addons-a11y-basebutton--invalid-contrast",
      "kind": "Addons/A11y/BaseButton",
      "name": "Invalid contrast",
      "story": "Invalid contrast",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-a11y/base-button.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-a11y-basebutton--invalid-contrast",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "2209b1411bd6e0e4e6011621abbb8bb15512382f": {
    "id": "2209b1411bd6e0e4e6011621abbb8bb15512382f",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "A11y",
      "BaseButton",
      "delayed render"
    ],
    "storyId": "addons-a11y-basebutton--delayed-render",
    "story": {
      "id": "addons-a11y-basebutton--delayed-render",
      "kind": "Addons/A11y/BaseButton",
      "name": "delayed render",
      "story": "delayed render",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-a11y/base-button.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-a11y-basebutton--delayed-render",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "78bd32980d47a02dc4cbe1d5f1bf91e6953b9623": {
    "id": "78bd32980d47a02dc4cbe1d5f1bf91e6953b9623",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "A11y",
      "Button",
      "Default"
    ],
    "storyId": "addons-a11y-button--default",
    "story": {
      "id": "addons-a11y-button--default",
      "kind": "Addons/A11y/Button",
      "name": "Default",
      "story": "Default",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-a11y/button.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-a11y-button--default",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "1adbfad5f41262cb09e509b375e7aab9734d6069": {
    "id": "1adbfad5f41262cb09e509b375e7aab9734d6069",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "A11y",
      "Button",
      "Content"
    ],
    "storyId": "addons-a11y-button--content",
    "story": {
      "id": "addons-a11y-button--content",
      "kind": "Addons/A11y/Button",
      "name": "Content",
      "story": "Content",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-a11y/button.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-a11y-button--content",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "512971d82ed83311d34df8d4d66c537d32124614": {
    "id": "512971d82ed83311d34df8d4d66c537d32124614",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "A11y",
      "Button",
      "Label"
    ],
    "storyId": "addons-a11y-button--label",
    "story": {
      "id": "addons-a11y-button--label",
      "kind": "Addons/A11y/Button",
      "name": "Label",
      "story": "Label",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-a11y/button.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-a11y-button--label",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "37d448db14760e1b05745363ed6b0b59cf5ad4f0": {
    "id": "37d448db14760e1b05745363ed6b0b59cf5ad4f0",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "A11y",
      "Button",
      "Disabled"
    ],
    "storyId": "addons-a11y-button--disabled",
    "story": {
      "id": "addons-a11y-button--disabled",
      "kind": "Addons/A11y/Button",
      "name": "Disabled",
      "story": "Disabled",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-a11y/button.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-a11y-button--disabled",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "c710bb023fcc0532076aa604eb384e6096ee617f": {
    "id": "c710bb023fcc0532076aa604eb384e6096ee617f",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "A11y",
      "Button",
      "Invalid contrast"
    ],
    "storyId": "addons-a11y-button--invalid-contrast",
    "story": {
      "id": "addons-a11y-button--invalid-contrast",
      "kind": "Addons/A11y/Button",
      "name": "Invalid contrast",
      "story": "Invalid contrast",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-a11y/button.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-a11y-button--invalid-contrast",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "9f3279cb8045a06d637768c68269f8175b73bba0": {
    "id": "9f3279cb8045a06d637768c68269f8175b73bba0",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "A11y",
      "Form",
      "Without Label"
    ],
    "storyId": "addons-a11y-form--without-label",
    "story": {
      "id": "addons-a11y-form--without-label",
      "kind": "Addons/A11y/Form",
      "name": "Without Label",
      "story": "Without Label",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-a11y/form.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-a11y-form--without-label",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "95f9417ff190c5f95b67f2d6dd192239a2abc305": {
    "id": "95f9417ff190c5f95b67f2d6dd192239a2abc305",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "A11y",
      "Form",
      "With label"
    ],
    "storyId": "addons-a11y-form--with-label",
    "story": {
      "id": "addons-a11y-form--with-label",
      "kind": "Addons/A11y/Form",
      "name": "With label",
      "story": "With label",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-a11y/form.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-a11y-form--with-label",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "d1491db0bb2625919527d9a8d60dd99a102ea6d7": {
    "id": "d1491db0bb2625919527d9a8d60dd99a102ea6d7",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "A11y",
      "Form",
      "With placeholder"
    ],
    "storyId": "addons-a11y-form--with-placeholder",
    "story": {
      "id": "addons-a11y-form--with-placeholder",
      "kind": "Addons/A11y/Form",
      "name": "With placeholder",
      "story": "With placeholder",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-a11y/form.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-a11y-form--with-placeholder",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "8dd397392b53f4709e9278265b29e0623fdefd3e": {
    "id": "8dd397392b53f4709e9278265b29e0623fdefd3e",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "A11y",
      "Highlight",
      "Passes"
    ],
    "storyId": "addons-a11y-highlight--passes",
    "story": {
      "id": "addons-a11y-highlight--passes",
      "kind": "Addons/A11y/Highlight",
      "name": "Passes",
      "story": "Passes",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-a11y/highlight.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-a11y-highlight--passes",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "09aef73a9ae35e55fc46abeb8543114c33aac8c7": {
    "id": "09aef73a9ae35e55fc46abeb8543114c33aac8c7",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "A11y",
      "Highlight",
      "Incomplete"
    ],
    "storyId": "addons-a11y-highlight--incomplete",
    "story": {
      "id": "addons-a11y-highlight--incomplete",
      "kind": "Addons/A11y/Highlight",
      "name": "Incomplete",
      "story": "Incomplete",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-a11y/highlight.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-a11y-highlight--incomplete",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "06931bcebb8a29e693d50a45747ba0cde78d0aa8": {
    "id": "06931bcebb8a29e693d50a45747ba0cde78d0aa8",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "A11y",
      "Highlight",
      "Violations"
    ],
    "storyId": "addons-a11y-highlight--violations",
    "story": {
      "id": "addons-a11y-highlight--violations",
      "kind": "Addons/A11y/Highlight",
      "name": "Violations",
      "story": "Violations",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-a11y/highlight.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-a11y-highlight--violations",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "e3495b21f461632d8f2c86fcb23b116abcd598ae": {
    "id": "e3495b21f461632d8f2c86fcb23b116abcd598ae",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "A11y",
      "Image",
      "Without alt"
    ],
    "storyId": "addons-a11y-image--without-alt",
    "story": {
      "id": "addons-a11y-image--without-alt",
      "kind": "Addons/A11y/Image",
      "name": "Without alt",
      "story": "Without alt",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-a11y/image.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-a11y-image--without-alt",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "b0371f3d20b2eae7a0edf9535f930a819f69e358": {
    "id": "b0371f3d20b2eae7a0edf9535f930a819f69e358",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "A11y",
      "Image",
      "Without alt but unchecked"
    ],
    "storyId": "addons-a11y-image--without-alt-but-unchecked",
    "story": {
      "id": "addons-a11y-image--without-alt-but-unchecked",
      "kind": "Addons/A11y/Image",
      "name": "Without alt but unchecked",
      "story": "Without alt but unchecked",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-a11y/image.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-a11y-image--without-alt-but-unchecked",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "3c77bb6f566e3666501df47e3b7293c2fca7d911": {
    "id": "3c77bb6f566e3666501df47e3b7293c2fca7d911",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "A11y",
      "Image",
      "With alt"
    ],
    "storyId": "addons-a11y-image--with-alt",
    "story": {
      "id": "addons-a11y-image--with-alt",
      "kind": "Addons/A11y/Image",
      "name": "With alt",
      "story": "With alt",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-a11y/image.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-a11y-image--with-alt",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "e47f9bfe1fb210ffd61d86f611b20dda10794a4e": {
    "id": "e47f9bfe1fb210ffd61d86f611b20dda10794a4e",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "A11y",
      "Image",
      "Presentation"
    ],
    "storyId": "addons-a11y-image--presentation",
    "story": {
      "id": "addons-a11y-image--presentation",
      "kind": "Addons/A11y/Image",
      "name": "Presentation",
      "story": "Presentation",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-a11y/image.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-a11y-image--presentation",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "08c8372c42d6925f580b8f7d04b8d32977d36b8c": {
    "id": "08c8372c42d6925f580b8f7d04b8d32977d36b8c",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "A11y",
      "Typography",
      "Correct"
    ],
    "storyId": "addons-a11y-typography--correct",
    "story": {
      "id": "addons-a11y-typography--correct",
      "kind": "Addons/A11y/Typography",
      "name": "Correct",
      "story": "Correct",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-a11y/typography.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-a11y-typography--correct",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "b4f19917116e6a9de6d1b8262c18c19cdab06ca7": {
    "id": "b4f19917116e6a9de6d1b8262c18c19cdab06ca7",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "A11y",
      "Typography",
      "Empty Heading"
    ],
    "storyId": "addons-a11y-typography--empty-heading",
    "story": {
      "id": "addons-a11y-typography--empty-heading",
      "kind": "Addons/A11y/Typography",
      "name": "Empty Heading",
      "story": "Empty Heading",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-a11y/typography.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-a11y-typography--empty-heading",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "e006e46bb0e59be4b62fbd00c86205c9112751e6": {
    "id": "e006e46bb0e59be4b62fbd00c86205c9112751e6",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "A11y",
      "Typography",
      "Empty Paragraph"
    ],
    "storyId": "addons-a11y-typography--empty-paragraph",
    "story": {
      "id": "addons-a11y-typography--empty-paragraph",
      "kind": "Addons/A11y/Typography",
      "name": "Empty Paragraph",
      "story": "Empty Paragraph",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-a11y/typography.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-a11y-typography--empty-paragraph",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "cf51e018f6cb9560fc6c04373b3364703545c387": {
    "id": "cf51e018f6cb9560fc6c04373b3364703545c387",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "A11y",
      "Typography",
      "Empty Link"
    ],
    "storyId": "addons-a11y-typography--empty-link",
    "story": {
      "id": "addons-a11y-typography--empty-link",
      "kind": "Addons/A11y/Typography",
      "name": "Empty Link",
      "story": "Empty Link",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-a11y/typography.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-a11y-typography--empty-link",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "9bab2690ad77fe78b2b7b0e9a743de5d2bcf5adb": {
    "id": "9bab2690ad77fe78b2b7b0e9a743de5d2bcf5adb",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "A11y",
      "Typography",
      "Link without href"
    ],
    "storyId": "addons-a11y-typography--link-without-href",
    "story": {
      "id": "addons-a11y-typography--link-without-href",
      "kind": "Addons/A11y/Typography",
      "name": "Link without href",
      "story": "Link without href",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-a11y/typography.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-a11y-typography--link-without-href",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "7943966af5b035339a6ad265b1869a4d5cf09953": {
    "id": "7943966af5b035339a6ad265b1869a4d5cf09953",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "A11y",
      "Typography",
      "Manual"
    ],
    "storyId": "addons-a11y-typography--manual",
    "story": {
      "id": "addons-a11y-typography--manual",
      "kind": "Addons/A11y/Typography",
      "name": "Manual",
      "story": "Manual",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-a11y/typography.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-a11y-typography--manual",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "b92ac69977019e8444ac3df5039b8ea88f0be998": {
    "id": "b92ac69977019e8444ac3df5039b8ea88f0be998",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Actions",
      "Arg Types Example"
    ],
    "storyId": "addons-actions--arg-types-example",
    "story": {
      "id": "addons-actions--arg-types-example",
      "kind": "Addons/Actions",
      "name": "Arg Types Example",
      "story": "Arg Types Example",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-actions.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-actions--arg-types-example",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "9600b74479f95b03a48cf7d8a6988662ef8ca7ad": {
    "id": "9600b74479f95b03a48cf7d8a6988662ef8ca7ad",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Actions",
      "Arg Types Regex Example"
    ],
    "storyId": "addons-actions--arg-types-regex-example",
    "story": {
      "id": "addons-actions--arg-types-regex-example",
      "kind": "Addons/Actions",
      "name": "Arg Types Regex Example",
      "story": "Arg Types Regex Example",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-actions.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-actions--arg-types-regex-example",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "e0a76027f3f2b2b3ef1f90587957aa2d33ece15f": {
    "id": "e0a76027f3f2b2b3ef1f90587957aa2d33ece15f",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Actions",
      "Basic example"
    ],
    "storyId": "addons-actions--basic-example",
    "story": {
      "id": "addons-actions--basic-example",
      "kind": "Addons/Actions",
      "name": "Basic example",
      "story": "Basic example",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-actions.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-actions--basic-example",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "8e6080208cbc8a2fb5b3212771f19ad3a6e3620d": {
    "id": "8e6080208cbc8a2fb5b3212771f19ad3a6e3620d",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Actions",
      "Multiple actions"
    ],
    "storyId": "addons-actions--multiple-actions",
    "story": {
      "id": "addons-actions--multiple-actions",
      "kind": "Addons/Actions",
      "name": "Multiple actions",
      "story": "Multiple actions",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-actions.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-actions--multiple-actions",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "4522365afd94aa797c8575eb441fb5b3436f78fa": {
    "id": "4522365afd94aa797c8575eb441fb5b3436f78fa",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Actions",
      "Multiple actions + config"
    ],
    "storyId": "addons-actions--multiple-actions-config",
    "story": {
      "id": "addons-actions--multiple-actions-config",
      "kind": "Addons/Actions",
      "name": "Multiple actions + config",
      "story": "Multiple actions + config",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-actions.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-actions--multiple-actions-config",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "5b4790e7d813062eee718b4174316b83d70e7082": {
    "id": "5b4790e7d813062eee718b4174316b83d70e7082",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Actions",
      "Multiple actions as object"
    ],
    "storyId": "addons-actions--multiple-actions-as-object",
    "story": {
      "id": "addons-actions--multiple-actions-as-object",
      "kind": "Addons/Actions",
      "name": "Multiple actions as object",
      "story": "Multiple actions as object",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-actions.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-actions--multiple-actions-as-object",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "893ca68553927c6cb8bc87aee68800a805626ca3": {
    "id": "893ca68553927c6cb8bc87aee68800a805626ca3",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Actions",
      "Multiple actions, object + config"
    ],
    "storyId": "addons-actions--multiple-actions-object-config",
    "story": {
      "id": "addons-actions--multiple-actions-object-config",
      "kind": "Addons/Actions",
      "name": "Multiple actions, object + config",
      "story": "Multiple actions, object + config",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-actions.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-actions--multiple-actions-object-config",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "9b2294518f7898a729316a31c741f620be57199d": {
    "id": "9b2294518f7898a729316a31c741f620be57199d",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Actions",
      "Circular Payload"
    ],
    "storyId": "addons-actions--circular-payload",
    "story": {
      "id": "addons-actions--circular-payload",
      "kind": "Addons/Actions",
      "name": "Circular Payload",
      "story": "Circular Payload",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-actions.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-actions--circular-payload",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "79d9a5ff4367de53688bc1d67a913f1b97d271c9": {
    "id": "79d9a5ff4367de53688bc1d67a913f1b97d271c9",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Actions",
      "Reserved keyword as name"
    ],
    "storyId": "addons-actions--reserved-keyword-as-name",
    "story": {
      "id": "addons-actions--reserved-keyword-as-name",
      "kind": "Addons/Actions",
      "name": "Reserved keyword as name",
      "story": "Reserved keyword as name",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-actions.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-actions--reserved-keyword-as-name",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "50248ec855118c2b970524e3c4a477fa90abdd3d": {
    "id": "50248ec855118c2b970524e3c4a477fa90abdd3d",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Actions",
      "All types"
    ],
    "storyId": "addons-actions--all-types",
    "story": {
      "id": "addons-actions--all-types",
      "kind": "Addons/Actions",
      "name": "All types",
      "story": "All types",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-actions.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-actions--all-types",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "738b6842ef07417ff82f82496aaed0dd1790582c": {
    "id": "738b6842ef07417ff82f82496aaed0dd1790582c",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Actions",
      "Configure Actions Depth"
    ],
    "storyId": "addons-actions--configure-actions-depth",
    "story": {
      "id": "addons-actions--configure-actions-depth",
      "kind": "Addons/Actions",
      "name": "Configure Actions Depth",
      "story": "Configure Actions Depth",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-actions.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-actions--configure-actions-depth",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "7d633f44c45b5f02ae197ad4d27ba11fc19d4bf9": {
    "id": "7d633f44c45b5f02ae197ad4d27ba11fc19d4bf9",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Actions",
      "Persisting the action logger"
    ],
    "storyId": "addons-actions--persisting-the-action-logger",
    "story": {
      "id": "addons-actions--persisting-the-action-logger",
      "kind": "Addons/Actions",
      "name": "Persisting the action logger",
      "story": "Persisting the action logger",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-actions.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-actions--persisting-the-action-logger",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "814650e35b1aab8f10b1a219a261443ea8ae2808": {
    "id": "814650e35b1aab8f10b1a219a261443ea8ae2808",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Actions",
      "Limit Action Output"
    ],
    "storyId": "addons-actions--limit-action-output",
    "story": {
      "id": "addons-actions--limit-action-output",
      "kind": "Addons/Actions",
      "name": "Limit Action Output",
      "story": "Limit Action Output",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-actions.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-actions--limit-action-output",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "c469a3672265afb9c5bfba5a18c875f4e40bec24": {
    "id": "c469a3672265afb9c5bfba5a18c875f4e40bec24",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Actions",
      "skipped via disable:true"
    ],
    "storyId": "addons-actions--skipped-via-disable-true",
    "story": {
      "id": "addons-actions--skipped-via-disable-true",
      "kind": "Addons/Actions",
      "name": "skipped via disable:true",
      "story": "skipped via disable:true",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-actions.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-actions--skipped-via-disable-true",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "c9bbee76f8f82dab323d075d0fa121604ac355f9": {
    "id": "c9bbee76f8f82dab323d075d0fa121604ac355f9",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Backgrounds",
      "Story 1"
    ],
    "storyId": "addons-backgrounds--story-1",
    "story": {
      "id": "addons-backgrounds--story-1",
      "kind": "Addons/Backgrounds",
      "name": "Story 1",
      "story": "Story 1",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-backgrounds.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-backgrounds--story-1",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "9ffaa202e81f2280db0d8ce0a8f8c0f7513460f7": {
    "id": "9ffaa202e81f2280db0d8ce0a8f8c0f7513460f7",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Backgrounds",
      "Story 2"
    ],
    "storyId": "addons-backgrounds--story-2",
    "story": {
      "id": "addons-backgrounds--story-2",
      "kind": "Addons/Backgrounds",
      "name": "Story 2",
      "story": "Story 2",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-backgrounds.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-backgrounds--story-2",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "05153b9610ffef36bcb8e63c7a5a86a7b590b1a5": {
    "id": "05153b9610ffef36bcb8e63c7a5a86a7b590b1a5",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Backgrounds",
      "Overridden"
    ],
    "storyId": "addons-backgrounds--overridden",
    "story": {
      "id": "addons-backgrounds--overridden",
      "kind": "Addons/Backgrounds",
      "name": "Overridden",
      "story": "Overridden",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-backgrounds.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-backgrounds--overridden",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "905b6fcc977cc60bc6f65eacaec652e7f03b895b": {
    "id": "905b6fcc977cc60bc6f65eacaec652e7f03b895b",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Backgrounds",
      "With Gradient"
    ],
    "storyId": "addons-backgrounds--with-gradient",
    "story": {
      "id": "addons-backgrounds--with-gradient",
      "kind": "Addons/Backgrounds",
      "name": "With Gradient",
      "story": "With Gradient",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-backgrounds.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-backgrounds--with-gradient",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "8ac6a2dbb30bedb8374f5ed228bd5a3b91df3b96": {
    "id": "8ac6a2dbb30bedb8374f5ed228bd5a3b91df3b96",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Backgrounds",
      "With Image"
    ],
    "storyId": "addons-backgrounds--with-image",
    "story": {
      "id": "addons-backgrounds--with-image",
      "kind": "Addons/Backgrounds",
      "name": "With Image",
      "story": "With Image",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-backgrounds.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-backgrounds--with-image",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "0d4d812936e1f45006affd903dee155fc5108342": {
    "id": "0d4d812936e1f45006affd903dee155fc5108342",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Backgrounds",
      "Disabled Backgrounds"
    ],
    "storyId": "addons-backgrounds--disabled-backgrounds",
    "story": {
      "id": "addons-backgrounds--disabled-backgrounds",
      "kind": "Addons/Backgrounds",
      "name": "Disabled Backgrounds",
      "story": "Disabled Backgrounds",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-backgrounds.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-backgrounds--disabled-backgrounds",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "6eeabf399a304a63e7dc53b55ab9378b296f16ca": {
    "id": "6eeabf399a304a63e7dc53b55ab9378b296f16ca",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Backgrounds",
      "Disabled Grid"
    ],
    "storyId": "addons-backgrounds--disabled-grid",
    "story": {
      "id": "addons-backgrounds--disabled-grid",
      "kind": "Addons/Backgrounds",
      "name": "Disabled Grid",
      "story": "Disabled Grid",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-backgrounds.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-backgrounds--disabled-grid",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "d477d782367c5d4b5a5346977b3b6ba246f18d35": {
    "id": "d477d782367c5d4b5a5346977b3b6ba246f18d35",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Backgrounds",
      "Grid Cell Properties"
    ],
    "storyId": "addons-backgrounds--grid-cell-properties",
    "story": {
      "id": "addons-backgrounds--grid-cell-properties",
      "kind": "Addons/Backgrounds",
      "name": "Grid Cell Properties",
      "story": "Grid Cell Properties",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-backgrounds.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-backgrounds--grid-cell-properties",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "ee82c3e6e8e744110e1ab96d60a9e28306072775": {
    "id": "ee82c3e6e8e744110e1ab96d60a9e28306072775",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Backgrounds",
      "Aligned Grid When Full Screen"
    ],
    "storyId": "addons-backgrounds--aligned-grid-when-full-screen",
    "story": {
      "id": "addons-backgrounds--aligned-grid-when-full-screen",
      "kind": "Addons/Backgrounds",
      "name": "Aligned Grid When Full Screen",
      "story": "Aligned Grid When Full Screen",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-backgrounds.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-backgrounds--aligned-grid-when-full-screen",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "2709b0f16b7b7c2afeea2da4ad832ce27c7f9cd6": {
    "id": "2709b0f16b7b7c2afeea2da4ad832ce27c7f9cd6",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Controls",
      "Basic"
    ],
    "storyId": "addons-controls--basic",
    "story": {
      "id": "addons-controls--basic",
      "kind": "Addons/Controls",
      "name": "Basic",
      "story": "Basic",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-controls.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "addons-controls--basic",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "5bd6b0e6de4fa11f72a359ebcbe8a0d6942e804d": {
    "id": "5bd6b0e6de4fa11f72a359ebcbe8a0d6942e804d",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Controls",
      "Action"
    ],
    "storyId": "addons-controls--action",
    "story": {
      "id": "addons-controls--action",
      "kind": "Addons/Controls",
      "name": "Action",
      "story": "Action",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-controls.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "addons-controls--action",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "0b6cab28420862df1bcf7db6c9684f2539406e66": {
    "id": "0b6cab28420862df1bcf7db6c9684f2539406e66",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Controls",
      "Image File Control"
    ],
    "storyId": "addons-controls--image-file-control",
    "story": {
      "id": "addons-controls--image-file-control",
      "kind": "Addons/Controls",
      "name": "Image File Control",
      "story": "Image File Control",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-controls.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "addons-controls--image-file-control",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "54a3e95844d80fcd66211889e551f62b6884ad5d": {
    "id": "54a3e95844d80fcd66211889e551f62b6884ad5d",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Controls",
      "Custom Controls"
    ],
    "storyId": "addons-controls--custom-controls",
    "story": {
      "id": "addons-controls--custom-controls",
      "kind": "Addons/Controls",
      "name": "Custom Controls",
      "story": "Custom Controls",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-controls.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "addons-controls--custom-controls",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "78382edbf6584c6fffa7832141a64c59999d0ab4": {
    "id": "78382edbf6584c6fffa7832141a64c59999d0ab4",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Controls",
      "No Args"
    ],
    "storyId": "addons-controls--no-args",
    "story": {
      "id": "addons-controls--no-args",
      "kind": "Addons/Controls",
      "name": "No Args",
      "story": "No Args",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-controls.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "addons-controls--no-args",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "bf08776e4e6bc28a42d40ea10ae846b08c4667d4": {
    "id": "bf08776e4e6bc28a42d40ea10ae846b08c4667d4",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Controls",
      "Cyclic Args"
    ],
    "storyId": "addons-controls--cyclic-args",
    "story": {
      "id": "addons-controls--cyclic-args",
      "kind": "Addons/Controls",
      "name": "Cyclic Args",
      "story": "Cyclic Args",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-controls.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "addons-controls--cyclic-args",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "239b384e7fb3a6b87f9d7ebc325d1731581688ef": {
    "id": "239b384e7fb3a6b87f9d7ebc325d1731581688ef",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Controls",
      "Custom Control Matchers"
    ],
    "storyId": "addons-controls--custom-control-matchers",
    "story": {
      "id": "addons-controls--custom-control-matchers",
      "kind": "Addons/Controls",
      "name": "Custom Control Matchers",
      "story": "Custom Control Matchers",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-controls.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "addons-controls--custom-control-matchers",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "18359e8536780bf087dbbe1208f5a77eb587bcc6": {
    "id": "18359e8536780bf087dbbe1208f5a77eb587bcc6",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Controls",
      "With Disabled Custom Control Matchers"
    ],
    "storyId": "addons-controls--with-disabled-custom-control-matchers",
    "story": {
      "id": "addons-controls--with-disabled-custom-control-matchers",
      "kind": "Addons/Controls",
      "name": "With Disabled Custom Control Matchers",
      "story": "With Disabled Custom Control Matchers",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-controls.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "addons-controls--with-disabled-custom-control-matchers",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "fa723bdd524177a1c6c55ce2043d9f5a7197d606": {
    "id": "fa723bdd524177a1c6c55ce2043d9f5a7197d606",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Controls",
      "Filtered With Include"
    ],
    "storyId": "addons-controls--filtered-with-include",
    "story": {
      "id": "addons-controls--filtered-with-include",
      "kind": "Addons/Controls",
      "name": "Filtered With Include",
      "story": "Filtered With Include",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-controls.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "addons-controls--filtered-with-include",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "68c35c0c25dd8ab263a6c03f1d6fb644700c3b3b": {
    "id": "68c35c0c25dd8ab263a6c03f1d6fb644700c3b3b",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Controls",
      "Filtered With Include Regex"
    ],
    "storyId": "addons-controls--filtered-with-include-regex",
    "story": {
      "id": "addons-controls--filtered-with-include-regex",
      "kind": "Addons/Controls",
      "name": "Filtered With Include Regex",
      "story": "Filtered With Include Regex",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-controls.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "addons-controls--filtered-with-include-regex",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "ece85289a4809f6b9928fa8c7c6ae855df378d25": {
    "id": "ece85289a4809f6b9928fa8c7c6ae855df378d25",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Controls",
      "Filtered With Exclude"
    ],
    "storyId": "addons-controls--filtered-with-exclude",
    "story": {
      "id": "addons-controls--filtered-with-exclude",
      "kind": "Addons/Controls",
      "name": "Filtered With Exclude",
      "story": "Filtered With Exclude",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-controls.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "addons-controls--filtered-with-exclude",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "dd76f2d88f66c4cc138cf563bd734de4aee9d74b": {
    "id": "dd76f2d88f66c4cc138cf563bd734de4aee9d74b",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Controls",
      "Filtered With Exclude Regex"
    ],
    "storyId": "addons-controls--filtered-with-exclude-regex",
    "story": {
      "id": "addons-controls--filtered-with-exclude-regex",
      "kind": "Addons/Controls",
      "name": "Filtered With Exclude Regex",
      "story": "Filtered With Exclude Regex",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-controls.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "addons-controls--filtered-with-exclude-regex",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "3805ada8d2688fc79d85240ccdaac0b1e52264b2": {
    "id": "3805ada8d2688fc79d85240ccdaac0b1e52264b2",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Cssresources",
      "Primary Large Button"
    ],
    "storyId": "addons-cssresources--primary-large-button",
    "story": {
      "id": "addons-cssresources--primary-large-button",
      "kind": "Addons/Cssresources",
      "name": "Primary Large Button",
      "story": "Primary Large Button",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-cssresources.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-cssresources--primary-large-button",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "f4d48073e236b647cd69556272fd02836f07170a": {
    "id": "f4d48073e236b647cd69556272fd02836f07170a",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Cssresources",
      "Camera Icon"
    ],
    "storyId": "addons-cssresources--camera-icon",
    "story": {
      "id": "addons-cssresources--camera-icon",
      "kind": "Addons/Cssresources",
      "name": "Camera Icon",
      "story": "Camera Icon",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-cssresources.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-cssresources--camera-icon",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "269c55e5c28ccf053d861398134720039778550f": {
    "id": "269c55e5c28ccf053d861398134720039778550f",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Design assets",
      "single image"
    ],
    "storyId": "addons-design-assets--single-image",
    "story": {
      "id": "addons-design-assets--single-image",
      "kind": "Addons/Design assets",
      "name": "single image",
      "story": "single image",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-design-assets.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-design-assets--single-image",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "53c2fa044c9a401d0400c2e19e500bfb90cf2fb4": {
    "id": "53c2fa044c9a401d0400c2e19e500bfb90cf2fb4",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Design assets",
      "single webpage"
    ],
    "storyId": "addons-design-assets--single-webpage",
    "story": {
      "id": "addons-design-assets--single-webpage",
      "kind": "Addons/Design assets",
      "name": "single webpage",
      "story": "single webpage",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-design-assets.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-design-assets--single-webpage",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "ee3767d65d2e8cd4c05e80cad6db77a7cd244b0f": {
    "id": "ee3767d65d2e8cd4c05e80cad6db77a7cd244b0f",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Design assets",
      "youtube video"
    ],
    "storyId": "addons-design-assets--youtube-video",
    "story": {
      "id": "addons-design-assets--youtube-video",
      "kind": "Addons/Design assets",
      "name": "youtube video",
      "story": "youtube video",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-design-assets.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-design-assets--youtube-video",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "e68e060619d9561d6a449523327458bf9de38253": {
    "id": "e68e060619d9561d6a449523327458bf9de38253",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Design assets",
      "multiple images"
    ],
    "storyId": "addons-design-assets--multiple-images",
    "story": {
      "id": "addons-design-assets--multiple-images",
      "kind": "Addons/Design assets",
      "name": "multiple images",
      "story": "multiple images",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-design-assets.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-design-assets--multiple-images",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "d29bf44cfd98ffd8773d73769c0d652ac800d4bf": {
    "id": "d29bf44cfd98ffd8773d73769c0d652ac800d4bf",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Design assets",
      "named assets"
    ],
    "storyId": "addons-design-assets--named-assets",
    "story": {
      "id": "addons-design-assets--named-assets",
      "kind": "Addons/Design assets",
      "name": "named assets",
      "story": "named assets",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-design-assets.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-design-assets--named-assets",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "a999b5b124a0032702135579d25eae4f5c4b8c8e": {
    "id": "a999b5b124a0032702135579d25eae4f5c4b8c8e",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Design assets",
      "url replacement"
    ],
    "storyId": "addons-design-assets--url-replacement",
    "story": {
      "id": "addons-design-assets--url-replacement",
      "kind": "Addons/Design assets",
      "name": "url replacement",
      "story": "url replacement",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-design-assets.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-design-assets--url-replacement",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "44eb1fea613201c9d7b5f40987ad33344a130823": {
    "id": "44eb1fea613201c9d7b5f40987ad33344a130823",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "stories docs blocks",
      "Def Docs Page"
    ],
    "storyId": "addons-docs-stories-docs-blocks--def-docs-page",
    "story": {
      "id": "addons-docs-stories-docs-blocks--def-docs-page",
      "kind": "Addons/Docs/stories docs blocks",
      "name": "Def Docs Page",
      "story": "Def Docs Page",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/addon-docs-blocks.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-stories-docs-blocks--def-docs-page",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "89192f5c8e08842f98262344730ed6545733058b": {
    "id": "89192f5c8e08842f98262344730ed6545733058b",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "stories docs blocks",
      "Small Docs Page"
    ],
    "storyId": "addons-docs-stories-docs-blocks--small-docs-page",
    "story": {
      "id": "addons-docs-stories-docs-blocks--small-docs-page",
      "kind": "Addons/Docs/stories docs blocks",
      "name": "Small Docs Page",
      "story": "Small Docs Page",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/addon-docs-blocks.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-stories-docs-blocks--small-docs-page",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "ff55cb0f5a45e7045052ed352ad0b6e627cd6f4f": {
    "id": "ff55cb0f5a45e7045052ed352ad0b6e627cd6f4f",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "stories docs blocks",
      "Check Box Props"
    ],
    "storyId": "addons-docs-stories-docs-blocks--check-box-props",
    "story": {
      "id": "addons-docs-stories-docs-blocks--check-box-props",
      "kind": "Addons/Docs/stories docs blocks",
      "name": "Check Box Props",
      "story": "Check Box Props",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/addon-docs-blocks.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-stories-docs-blocks--check-box-props",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "f61ef8008484874ed08417eec6720647559a8653": {
    "id": "f61ef8008484874ed08417eec6720647559a8653",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "stories docs blocks",
      "Custom Labels"
    ],
    "storyId": "addons-docs-stories-docs-blocks--custom-labels",
    "story": {
      "id": "addons-docs-stories-docs-blocks--custom-labels",
      "kind": "Addons/Docs/stories docs blocks",
      "name": "Custom Labels",
      "story": "Custom Labels",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/addon-docs-blocks.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-stories-docs-blocks--custom-labels",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "0f0d2cc3133b85273ff1cfa33a2b97178380580e": {
    "id": "0f0d2cc3133b85273ff1cfa33a2b97178380580e",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "stories docs blocks",
      "Custom Stories Filter"
    ],
    "storyId": "addons-docs-stories-docs-blocks--custom-stories-filter",
    "story": {
      "id": "addons-docs-stories-docs-blocks--custom-stories-filter",
      "kind": "Addons/Docs/stories docs blocks",
      "name": "Custom Stories Filter",
      "story": "Custom Stories Filter",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/addon-docs-blocks.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-stories-docs-blocks--custom-stories-filter",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "1d781f095037162cb9d8ef3a42778493d8cb11d4": {
    "id": "1d781f095037162cb9d8ef3a42778493d8cb11d4",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "stories docs blocks",
      "Many Components"
    ],
    "storyId": "addons-docs-stories-docs-blocks--multiple-components",
    "story": {
      "id": "addons-docs-stories-docs-blocks--multiple-components",
      "kind": "Addons/Docs/stories docs blocks",
      "name": "Many Components",
      "story": "Many Components",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/addon-docs-blocks.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-stories-docs-blocks--multiple-components",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "8409c992f2e4fae7221739cb564c44014f064f14": {
    "id": "8409c992f2e4fae7221739cb564c44014f064f14",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "stories docs blocks",
      "Components Props"
    ],
    "storyId": "addons-docs-stories-docs-blocks--components-props",
    "story": {
      "id": "addons-docs-stories-docs-blocks--components-props",
      "kind": "Addons/Docs/stories docs blocks",
      "name": "Components Props",
      "story": "Components Props",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/addon-docs-blocks.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-stories-docs-blocks--components-props",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "dcb6c25fccc11dcc76a96389b46a617afd6fb026": {
    "id": "dcb6c25fccc11dcc76a96389b46a617afd6fb026",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "mdx",
      "hello story"
    ],
    "storyId": "addons-docs-mdx-id--hello-story",
    "story": {
      "id": "addons-docs-mdx-id--hello-story",
      "kind": "Addons/Docs/mdx",
      "name": "hello story",
      "story": "hello story",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/addon-docs-mdx.stories.mdx",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-mdx-id--hello-story",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "5e513667485e22c57e24c3da9ab2be5f3f0f5aa7": {
    "id": "5e513667485e22c57e24c3da9ab2be5f3f0f5aa7",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "mdx",
      "goodbye"
    ],
    "storyId": "addons-docs-mdx-id--goodbye",
    "story": {
      "id": "addons-docs-mdx-id--goodbye",
      "kind": "Addons/Docs/mdx",
      "name": "goodbye",
      "story": "goodbye",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/addon-docs-mdx.stories.mdx",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-mdx-id--goodbye",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "70785b24087d071d023630a0ca5e8aca14259fd8": {
    "id": "70785b24087d071d023630a0ca5e8aca14259fd8",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "mdx",
      "with icons"
    ],
    "storyId": "addons-docs-mdx-id--with-icons",
    "story": {
      "id": "addons-docs-mdx-id--with-icons",
      "kind": "Addons/Docs/mdx",
      "name": "with icons",
      "story": "with icons",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/addon-docs-mdx.stories.mdx",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-mdx-id--with-icons",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "5c9b01a5f80f64153ae9f537f7bb3cc96c70c8bb": {
    "id": "5c9b01a5f80f64153ae9f537f7bb3cc96c70c8bb",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "mdx",
      "notes"
    ],
    "storyId": "addons-docs-mdx-id--notes",
    "story": {
      "id": "addons-docs-mdx-id--notes",
      "kind": "Addons/Docs/mdx",
      "name": "notes",
      "story": "notes",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/addon-docs-mdx.stories.mdx",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-mdx-id--notes",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "998b4c834c2a9cce66464d90969c607a17f6cd22": {
    "id": "998b4c834c2a9cce66464d90969c607a17f6cd22",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "mdx",
      "plaintext"
    ],
    "storyId": "addons-docs-mdx-id--plaintext",
    "story": {
      "id": "addons-docs-mdx-id--plaintext",
      "kind": "Addons/Docs/mdx",
      "name": "plaintext",
      "story": "plaintext",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/addon-docs-mdx.stories.mdx",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-mdx-id--plaintext",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "651361bb986929498d72a61134e3389ec0bff89a": {
    "id": "651361bb986929498d72a61134e3389ec0bff89a",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "mdx",
      "solo story"
    ],
    "storyId": "addons-docs-mdx-id--solo-story",
    "story": {
      "id": "addons-docs-mdx-id--solo-story",
      "kind": "Addons/Docs/mdx",
      "name": "solo story",
      "story": "solo story",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/addon-docs-mdx.stories.mdx",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-mdx-id--solo-story",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "2fadfcaa86d62a7c0da87fc9677cbae54ecf56da": {
    "id": "2fadfcaa86d62a7c0da87fc9677cbae54ecf56da",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "mdx",
      "iframe story"
    ],
    "storyId": "addons-docs-mdx-id--iframe-story",
    "story": {
      "id": "addons-docs-mdx-id--iframe-story",
      "kind": "Addons/Docs/mdx",
      "name": "iframe story",
      "story": "iframe story",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/addon-docs-mdx.stories.mdx",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-mdx-id--iframe-story",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "17705941bd2e316eba5c559e8a43c33a6694858b": {
    "id": "17705941bd2e316eba5c559e8a43c33a6694858b",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "mdx",
      "decorator story"
    ],
    "storyId": "addons-docs-mdx-id--decorator-story",
    "story": {
      "id": "addons-docs-mdx-id--decorator-story",
      "kind": "Addons/Docs/mdx",
      "name": "decorator story",
      "story": "decorator story",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/addon-docs-mdx.stories.mdx",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-mdx-id--decorator-story",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "729ad8f0388ba871075381594b7e8348359a824e": {
    "id": "729ad8f0388ba871075381594b7e8348359a824e",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "mdx",
      "theme"
    ],
    "storyId": "addons-docs-mdx-id--theme",
    "story": {
      "id": "addons-docs-mdx-id--theme",
      "kind": "Addons/Docs/mdx",
      "name": "theme",
      "story": "theme",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/addon-docs-mdx.stories.mdx",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-mdx-id--theme",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "4d582a79f9c610381b9e9e90cd87e60ec99e66af": {
    "id": "4d582a79f9c610381b9e9e90cd87e60ec99e66af",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "mdx",
      "function"
    ],
    "storyId": "addons-docs-mdx-id--function-story",
    "story": {
      "id": "addons-docs-mdx-id--function-story",
      "kind": "Addons/Docs/mdx",
      "name": "function",
      "story": "function",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/addon-docs-mdx.stories.mdx",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-mdx-id--function-story",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "9c6d9f0a2c88e814e49ee007172ea1ffcbadfa0d": {
    "id": "9c6d9f0a2c88e814e49ee007172ea1ffcbadfa0d",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "mdx",
      "fixed layout example"
    ],
    "storyId": "addons-docs-mdx-id--fixed-layout-example",
    "story": {
      "id": "addons-docs-mdx-id--fixed-layout-example",
      "kind": "Addons/Docs/mdx",
      "name": "fixed layout example",
      "story": "fixed layout example",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/addon-docs-mdx.stories.mdx",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-mdx-id--fixed-layout-example",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "786e3ca3796ea5cd9fec4a44a05574ca0e446ae8": {
    "id": "786e3ca3796ea5cd9fec4a44a05574ca0e446ae8",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "mdx",
      "no source Canvas"
    ],
    "storyId": "addons-docs-mdx-id--no-source-canvas",
    "story": {
      "id": "addons-docs-mdx-id--no-source-canvas",
      "kind": "Addons/Docs/mdx",
      "name": "no source Canvas",
      "story": "no source Canvas",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/addon-docs-mdx.stories.mdx",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-mdx-id--no-source-canvas",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "a47cb017ce0c495c16446e1a3fc894d3efae3801": {
    "id": "a47cb017ce0c495c16446e1a3fc894d3efae3801",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "mdx",
      "docs disable"
    ],
    "storyId": "addons-docs-mdx-id--docs-disable",
    "story": {
      "id": "addons-docs-mdx-id--docs-disable",
      "kind": "Addons/Docs/mdx",
      "name": "docs disable",
      "story": "docs disable",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/addon-docs-mdx.stories.mdx",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-mdx-id--docs-disable",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "2bb924f6c49c7c3075f479a144939f9ed9134dba": {
    "id": "2bb924f6c49c7c3075f479a144939f9ed9134dba",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "mdx",
      "story multiple children"
    ],
    "storyId": "addons-docs-mdx-id--story-multiple-children",
    "story": {
      "id": "addons-docs-mdx-id--story-multiple-children",
      "kind": "Addons/Docs/mdx",
      "name": "story multiple children",
      "story": "story multiple children",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/addon-docs-mdx.stories.mdx",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-mdx-id--story-multiple-children",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "9c33421d36932b4594c47c22d2bbec6cc7372d7e": {
    "id": "9c33421d36932b4594c47c22d2bbec6cc7372d7e",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "stories",
      "Basic"
    ],
    "storyId": "addons-docs-stories--basic",
    "story": {
      "id": "addons-docs-stories--basic",
      "kind": "Addons/Docs/stories",
      "name": "Basic",
      "story": "Basic",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/addon-docs.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-stories--basic",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "8c85b988604ddd6dcbb1c559527b4b9d1b1d8833": {
    "id": "8c85b988604ddd6dcbb1c559527b4b9d1b1d8833",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "stories",
      "no docs"
    ],
    "storyId": "addons-docs-stories--no-docs",
    "story": {
      "id": "addons-docs-stories--no-docs",
      "kind": "Addons/Docs/stories",
      "name": "no docs",
      "story": "no docs",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/addon-docs.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-stories--no-docs",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "184a7530ebe1f7cb2b4461bc618d857dcc0edee9": {
    "id": "184a7530ebe1f7cb2b4461bc618d857dcc0edee9",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "stories",
      "with notes"
    ],
    "storyId": "addons-docs-stories--with-notes",
    "story": {
      "id": "addons-docs-stories--with-notes",
      "kind": "Addons/Docs/stories",
      "name": "with notes",
      "story": "with notes",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/addon-docs.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-stories--with-notes",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "6abb6cef573e4f6f4850037a88ae2c73afed59d1": {
    "id": "6abb6cef573e4f6f4850037a88ae2c73afed59d1",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "stories",
      "with info"
    ],
    "storyId": "addons-docs-stories--with-info",
    "story": {
      "id": "addons-docs-stories--with-info",
      "kind": "Addons/Docs/stories",
      "name": "with info",
      "story": "with info",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/addon-docs.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-stories--with-info",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "4c6e9128dad9a5e875b460e2df5a26b595ae31fb": {
    "id": "4c6e9128dad9a5e875b460e2df5a26b595ae31fb",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "stories",
      "mdx override"
    ],
    "storyId": "addons-docs-stories--mdx-override",
    "story": {
      "id": "addons-docs-stories--mdx-override",
      "kind": "Addons/Docs/stories",
      "name": "mdx override",
      "story": "mdx override",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/addon-docs.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-stories--mdx-override",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "1eed53dad69c8adcdc5369afae39dda3256f163b": {
    "id": "1eed53dad69c8adcdc5369afae39dda3256f163b",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "stories",
      "jsx override"
    ],
    "storyId": "addons-docs-stories--jsx-override",
    "story": {
      "id": "addons-docs-stories--jsx-override",
      "kind": "Addons/Docs/stories",
      "name": "jsx override",
      "story": "jsx override",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/addon-docs.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-stories--jsx-override",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "0a0e592148c9c8e64b82845aa922811d112e1c60": {
    "id": "0a0e592148c9c8e64b82845aa922811d112e1c60",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "stories",
      "Docs Disable"
    ],
    "storyId": "addons-docs-stories--docs-disable",
    "story": {
      "id": "addons-docs-stories--docs-disable",
      "kind": "Addons/Docs/stories",
      "name": "Docs Disable",
      "story": "Docs Disable",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/addon-docs.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-stories--docs-disable",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "11366f04ca61047e2059628f1ce94b9d2dc8d74c": {
    "id": "11366f04ca61047e2059628f1ce94b9d2dc8d74c",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "stories",
      "Larger Than Preview"
    ],
    "storyId": "addons-docs-stories--larger-than-preview",
    "story": {
      "id": "addons-docs-stories--larger-than-preview",
      "kind": "Addons/Docs/stories",
      "name": "Larger Than Preview",
      "story": "Larger Than Preview",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/addon-docs.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-stories--larger-than-preview",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "166cc5d60e78460e9e4de1d057b458de9977d713": {
    "id": "166cc5d60e78460e9e4de1d057b458de9977d713",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "Subcomponents array",
      "Basic"
    ],
    "storyId": "addons-docs-subcomponents-array--basic",
    "story": {
      "id": "addons-docs-subcomponents-array--basic",
      "kind": "Addons/Docs/Subcomponents array",
      "name": "Basic",
      "story": "Basic",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/array-subcomponents.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-subcomponents-array--basic",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "2b86f224cb68fd2331b82401fadb520e70b13f08": {
    "id": "2b86f224cb68fd2331b82401fadb520e70b13f08",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "container-override",
      "dummy"
    ],
    "storyId": "addons-docs-container-override--dummy",
    "story": {
      "id": "addons-docs-container-override--dummy",
      "kind": "Addons/Docs/container-override",
      "name": "dummy",
      "story": "dummy",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/container-override.stories.mdx",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-container-override--dummy",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "e4f8c192320843aa1ed907314e3bf4b9fb850ffd": {
    "id": "e4f8c192320843aa1ed907314e3bf4b9fb850ffd",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "csf-with-mdx-docs",
      "with args"
    ],
    "storyId": "addons-docs-csf-with-mdx-docs--with-args",
    "story": {
      "id": "addons-docs-csf-with-mdx-docs--with-args",
      "kind": "Addons/Docs/csf-with-mdx-docs",
      "name": "with args",
      "story": "with args",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/csf-with-mdx-docs.stories.mdx",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-csf-with-mdx-docs--with-args",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "7768f0201e2712c1925331157d3b97f6ca0cfecb": {
    "id": "7768f0201e2712c1925331157d3b97f6ca0cfecb",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "csf-with-mdx-docs",
      "Basic"
    ],
    "storyId": "addons-docs-csf-with-mdx-docs--basic",
    "story": {
      "id": "addons-docs-csf-with-mdx-docs--basic",
      "kind": "Addons/Docs/csf-with-mdx-docs",
      "name": "Basic",
      "story": "Basic",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/csf-with-mdx-docs.stories.mdx",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-csf-with-mdx-docs--basic",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "36c1fc448a9f8e3295151095762037837c9ed957": {
    "id": "36c1fc448a9f8e3295151095762037837c9ed957",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "csf-with-mdx-docs",
      "with template"
    ],
    "storyId": "addons-docs-csf-with-mdx-docs--with-template",
    "story": {
      "id": "addons-docs-csf-with-mdx-docs--with-template",
      "kind": "Addons/Docs/csf-with-mdx-docs",
      "name": "with template",
      "story": "with template",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/csf-with-mdx-docs.stories.mdx",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-csf-with-mdx-docs--with-template",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "09c06e9ab46c69208903d74c31b12b1a9b43fc95": {
    "id": "09c06e9ab46c69208903d74c31b12b1a9b43fc95",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "dynamic title",
      "Basic"
    ],
    "storyId": "addons-docs-dynamic-title--basic",
    "story": {
      "id": "addons-docs-dynamic-title--basic",
      "kind": "Addons/Docs/dynamic title",
      "name": "Basic",
      "story": "Basic",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/dynamic-title.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-dynamic-title--basic",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "2e5c7baca6cdf6e4c5d9e17d5b84be4b7a9292cc": {
    "id": "2e5c7baca6cdf6e4c5d9e17d5b84be4b7a9292cc",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "ForwardRefInnerPropTypes",
      "Displays forward ref component w/ inner propTypes correctly w/o args"
    ],
    "storyId": "addons-docs-forwardrefinnerproptypes--displays-correctly",
    "story": {
      "id": "addons-docs-forwardrefinnerproptypes--displays-correctly",
      "kind": "Addons/Docs/ForwardRefInnerPropTypes",
      "name": "Displays forward ref component w/ inner propTypes correctly w/o args",
      "story": "Displays forward ref component w/ inner propTypes correctly w/o args",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/forward-ref-inner-proptypes.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-forwardrefinnerproptypes--displays-correctly",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "a43ed6fe81eecfa0518733fede260f3853501ab1": {
    "id": "a43ed6fe81eecfa0518733fede260f3853501ab1",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "ForwardRefOuterPropTypes",
      "Displays forward ref component w/ outer propTypes correctly"
    ],
    "storyId": "addons-docs-forwardrefouterproptypes--displays-correctly",
    "story": {
      "id": "addons-docs-forwardrefouterproptypes--displays-correctly",
      "kind": "Addons/Docs/ForwardRefOuterPropTypes",
      "name": "Displays forward ref component w/ outer propTypes correctly",
      "story": "Displays forward ref component w/ outer propTypes correctly",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/forward-ref-outer-proptypes.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-forwardrefouterproptypes--displays-correctly",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "b5c09fd6bcdc89cdba5d33ff65ccef518bf10c20": {
    "id": "b5c09fd6bcdc89cdba5d33ff65ccef518bf10c20",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "Imported",
      "Basic"
    ],
    "storyId": "addons-docs-imported--basic",
    "story": {
      "id": "addons-docs-imported--basic",
      "kind": "Addons/Docs/Imported",
      "name": "Basic",
      "story": "Basic",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/imported.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-imported--basic",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "dfa7c5895100a26dd96bdbdcff375fb5873887ba": {
    "id": "dfa7c5895100a26dd96bdbdcff375fb5873887ba",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "mdx-in-story",
      "Typography"
    ],
    "storyId": "addons-docs-mdx-in-story--typography",
    "story": {
      "id": "addons-docs-mdx-in-story--typography",
      "kind": "Addons/Docs/mdx-in-story",
      "name": "Typography",
      "story": "Typography",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/mdx.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-mdx-in-story--typography",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "fd987334efcdb38afe5eb0c79bbd3b190ffbe3a6": {
    "id": "fd987334efcdb38afe5eb0c79bbd3b190ffbe3a6",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "mdx-in-story",
      "Dark Mode Docs"
    ],
    "storyId": "addons-docs-mdx-in-story--dark-mode-docs",
    "story": {
      "id": "addons-docs-mdx-in-story--dark-mode-docs",
      "kind": "Addons/Docs/mdx-in-story",
      "name": "Dark Mode Docs",
      "story": "Dark Mode Docs",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/mdx.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-mdx-in-story--dark-mode-docs",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "515d9d89aca3777b7f5fd69425f8ad6e0e2d24e6": {
    "id": "515d9d89aca3777b7f5fd69425f8ad6e0e2d24e6",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "Memo",
      "Displays components with memo correctly"
    ],
    "storyId": "addons-docs-memo--displays-correctly",
    "story": {
      "id": "addons-docs-memo--displays-correctly",
      "kind": "Addons/Docs/Memo",
      "name": "Displays components with memo correctly",
      "story": "Displays components with memo correctly",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/memo.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-memo--displays-correctly",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "1f7bc629f8b86bd0ee9d410cfb32187e5cdaefd9": {
    "id": "1f7bc629f8b86bd0ee9d410cfb32187e5cdaefd9",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "template",
      "testing"
    ],
    "storyId": "addons-docs-template--testing",
    "story": {
      "id": "addons-docs-template--testing",
      "kind": "Addons/Docs/template",
      "name": "testing",
      "story": "testing",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/meta-string-template.stories.mdx",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-template--testing",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "43ee803c36b92086451e8e9cc9cfce2798a8c740": {
    "id": "43ee803c36b92086451e8e9cc9cfce2798a8c740",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "Mixed Leaves",
      "Component",
      "B"
    ],
    "storyId": "addons-docs-mixed-leaves-component--b",
    "story": {
      "id": "addons-docs-mixed-leaves-component--b",
      "kind": "Addons/Docs/Mixed Leaves/Component",
      "name": "B",
      "story": "B",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/mixed-leaves-component.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-mixed-leaves-component--b",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "6346ecff34905bdbd25e6f9796d06142f88228ee": {
    "id": "6346ecff34905bdbd25e6f9796d06142f88228ee",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "Mixed Leaves",
      "Component",
      "C"
    ],
    "storyId": "addons-docs-mixed-leaves-component--c",
    "story": {
      "id": "addons-docs-mixed-leaves-component--c",
      "kind": "Addons/Docs/Mixed Leaves/Component",
      "name": "C",
      "story": "C",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/mixed-leaves-component.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-mixed-leaves-component--c",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "80c1c1a6b5391af421402f0c67a19206b74d484b": {
    "id": "80c1c1a6b5391af421402f0c67a19206b74d484b",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "Mixed Leaves",
      "A"
    ],
    "storyId": "addons-docs-mixed-leaves--a",
    "story": {
      "id": "addons-docs-mixed-leaves--a",
      "kind": "Addons/Docs/Mixed Leaves",
      "name": "A",
      "story": "A",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/mixed-leaves-folder.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-mixed-leaves--a",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "960bb11ed952fcf9c6970d3981b32688ba4111c6": {
    "id": "960bb11ed952fcf9c6970d3981b32688ba4111c6",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "props",
      "ArgTypes"
    ],
    "storyId": "addons-docs-props--arg-types",
    "story": {
      "id": "addons-docs-props--arg-types",
      "kind": "Addons/Docs/props",
      "name": "ArgTypes",
      "story": "ArgTypes",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/props.stories.mdx",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-props--arg-types",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "095d6a97b8e4e9afd21124aef43da52c4cfe2dff": {
    "id": "095d6a97b8e4e9afd21124aef43da52c4cfe2dff",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "props",
      "Args"
    ],
    "storyId": "addons-docs-props--args",
    "story": {
      "id": "addons-docs-props--args",
      "kind": "Addons/Docs/props",
      "name": "Args",
      "story": "Args",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/props.stories.mdx",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-props--args",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "7c309b5b21f024439adbdf7efe4ceaa234b6de43": {
    "id": "7c309b5b21f024439adbdf7efe4ceaa234b6de43",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "props",
      "Component"
    ],
    "storyId": "addons-docs-props--component",
    "story": {
      "id": "addons-docs-props--component",
      "kind": "Addons/Docs/props",
      "name": "Component",
      "story": "Component",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/props.stories.mdx",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-props--component",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "8cf0f49957bc3c39860c1a417482a80f0da44b65": {
    "id": "8cf0f49957bc3c39860c1a417482a80f0da44b65",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "props",
      "Controls"
    ],
    "storyId": "addons-docs-props--controls",
    "story": {
      "id": "addons-docs-props--controls",
      "kind": "Addons/Docs/props",
      "name": "Controls",
      "story": "Controls",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/props.stories.mdx",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-props--controls",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "309347492e8c406b968d81a5a608222aefe4b859": {
    "id": "309347492e8c406b968d81a5a608222aefe4b859",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "Source",
      "Basic"
    ],
    "storyId": "addons-docs-source--basic",
    "story": {
      "id": "addons-docs-source--basic",
      "kind": "Addons/Docs/Source",
      "name": "Basic",
      "story": "Basic",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/source.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-source--basic",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "db5ef81528161ba393912d92d3e74160d5b121cf": {
    "id": "db5ef81528161ba393912d92d3e74160d5b121cf",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "Source",
      "No Args"
    ],
    "storyId": "addons-docs-source--no-args",
    "story": {
      "id": "addons-docs-source--no-args",
      "kind": "Addons/Docs/Source",
      "name": "No Args",
      "story": "No Args",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/source.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-source--no-args",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "3827eb66c1d6977e758913b84ee69d429b6ccd3f": {
    "id": "3827eb66c1d6977e758913b84ee69d429b6ccd3f",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "Source",
      "Force Code Source"
    ],
    "storyId": "addons-docs-source--force-code-source",
    "story": {
      "id": "addons-docs-source--force-code-source",
      "kind": "Addons/Docs/Source",
      "name": "Force Code Source",
      "story": "Force Code Source",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/source.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-source--force-code-source",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "6898ecb04ecda9a63eda3bac3d6e0a965c5f1550": {
    "id": "6898ecb04ecda9a63eda3bac3d6e0a965c5f1550",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "Source",
      "Custom Source"
    ],
    "storyId": "addons-docs-source--custom-source",
    "story": {
      "id": "addons-docs-source--custom-source",
      "kind": "Addons/Docs/Source",
      "name": "Custom Source",
      "story": "Custom Source",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/source.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-source--custom-source",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "368def0f568166dc672d8c28d641ccb364e4f1bd": {
    "id": "368def0f568166dc672d8c28d641ccb364e4f1bd",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "ButtonGroup",
      "Basic"
    ],
    "storyId": "addons-docs-buttongroup--basic",
    "story": {
      "id": "addons-docs-buttongroup--basic",
      "kind": "Addons/Docs/ButtonGroup",
      "name": "Basic",
      "story": "Basic",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/subcomponents.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-buttongroup--basic",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "9cb3a1b4468a739af2420f90f2532586d9a795fa": {
    "id": "9cb3a1b4468a739af2420f90f2532586d9a795fa",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "transformSource",
      "Code"
    ],
    "storyId": "addons-docs-transformsource--code",
    "story": {
      "id": "addons-docs-transformsource--code",
      "kind": "Addons/Docs/transformSource",
      "name": "Code",
      "story": "Code",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/transform-source.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-transformsource--code",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "2cb9e61eb7662e0f18675c36e2313617a66f233b": {
    "id": "2cb9e61eb7662e0f18675c36e2313617a66f233b",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "transformSource",
      "Dynamic"
    ],
    "storyId": "addons-docs-transformsource--dynamic",
    "story": {
      "id": "addons-docs-transformsource--dynamic",
      "kind": "Addons/Docs/transformSource",
      "name": "Dynamic",
      "story": "Dynamic",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/transform-source.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-transformsource--dynamic",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "9058941a45d7accf3692840bbf6e067f7bfe52dc": {
    "id": "9058941a45d7accf3692840bbf6e067f7bfe52dc",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "transformSource",
      "Auto"
    ],
    "storyId": "addons-docs-transformsource--auto",
    "story": {
      "id": "addons-docs-transformsource--auto",
      "kind": "Addons/Docs/transformSource",
      "name": "Auto",
      "story": "Auto",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/transform-source.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-transformsource--auto",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "a60eca6a1089666febf453214f7024359a1476ca": {
    "id": "a60eca6a1089666febf453214f7024359a1476ca",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "TsButton",
      "Simple Button"
    ],
    "storyId": "addons-docs-tsbutton--simple-button",
    "story": {
      "id": "addons-docs-tsbutton--simple-button",
      "kind": "Addons/Docs/TsButton",
      "name": "Simple Button",
      "story": "Simple Button",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/ts-button.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-tsbutton--simple-button",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "34e00dbf596a97c61f706d58bc580401cd8402f6": {
    "id": "34e00dbf596a97c61f706d58bc580401cd8402f6",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Docs",
      "TsButton",
      "With Type"
    ],
    "storyId": "addons-docs-tsbutton--with-type",
    "story": {
      "id": "addons-docs-tsbutton--with-type",
      "kind": "Addons/Docs/TsButton",
      "name": "With Type",
      "story": "With Type",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-docs/ts-button.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "addons-docs-tsbutton--with-type",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "e1686f125a01b04feadbfb04936bb48aac687b3c": {
    "id": "e1686f125a01b04feadbfb04936bb48aac687b3c",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Events",
      "Logger"
    ],
    "storyId": "addons-events--logger",
    "story": {
      "id": "addons-events--logger",
      "kind": "Addons/Events",
      "name": "Logger",
      "story": "Logger",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-events.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-events--logger",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "ebf931e3fefce8b3971afb45a50d4269b2bbb3e7": {
    "id": "ebf931e3fefce8b3971afb45a50d4269b2bbb3e7",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "GraphQL",
      "get Pikachu"
    ],
    "storyId": "addons-graphql--get-pikachu",
    "story": {
      "id": "addons-graphql--get-pikachu",
      "kind": "Addons/GraphQL",
      "name": "get Pikachu",
      "story": "get Pikachu",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-graphql.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-graphql--get-pikachu",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "958a4c35fa466233bcbdf337db598fb5f6a670f7": {
    "id": "958a4c35fa466233bcbdf337db598fb5f6a670f7",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Jest",
      "With Tests"
    ],
    "storyId": "addons-jest--with-tests",
    "story": {
      "id": "addons-jest--with-tests",
      "kind": "Addons/Jest",
      "name": "With Tests",
      "story": "With Tests",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-jest.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-jest--with-tests",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "d2d3bc7d863199378323c0a9e2ff8ef35ea06819": {
    "id": "d2d3bc7d863199378323c0a9e2ff8ef35ea06819",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Jest",
      "With Inferred Tests"
    ],
    "storyId": "addons-jest--with-inferred-tests",
    "story": {
      "id": "addons-jest--with-inferred-tests",
      "kind": "Addons/Jest",
      "name": "With Inferred Tests",
      "story": "With Inferred Tests",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-jest.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-jest--with-inferred-tests",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "28790adc8a5a58bb58a6449b6c68c9b6685d095a": {
    "id": "28790adc8a5a58bb58a6449b6c68c9b6685d095a",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Jest",
      "Disabled Tests"
    ],
    "storyId": "addons-jest--disabled-tests",
    "story": {
      "id": "addons-jest--disabled-tests",
      "kind": "Addons/Jest",
      "name": "Disabled Tests",
      "story": "Disabled Tests",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-jest.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-jest--disabled-tests",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "f4a864fb77fbd3f42bb2c5f85af5f206893a7f72": {
    "id": "f4a864fb77fbd3f42bb2c5f85af5f206893a7f72",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Knobs",
      "with decorators",
      "With Decorator Calling Story Function More Than Once"
    ],
    "storyId": "addons-knobs-with-decorators--with-decorator-calling-story-function-more-than-once",
    "story": {
      "id": "addons-knobs-with-decorators--with-decorator-calling-story-function-more-than-once",
      "kind": "Addons/Knobs/with decorators",
      "name": "With Decorator Calling Story Function More Than Once",
      "story": "With Decorator Calling Story Function More Than Once",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-knobs/with-knobs-decorators.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-knobs-with-decorators--with-decorator-calling-story-function-more-than-once",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "8aa67bcf9b2fb729f064cce3e9820ebd3b24f1a2": {
    "id": "8aa67bcf9b2fb729f064cce3e9820ebd3b24f1a2",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Knobs",
      "withKnobs using options",
      "accepts options"
    ],
    "storyId": "addons-knobs-withknobs-using-options--accepts-options",
    "story": {
      "id": "addons-knobs-withknobs-using-options--accepts-options",
      "kind": "Addons/Knobs/withKnobs using options",
      "name": "accepts options",
      "story": "accepts options",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-knobs/with-knobs-options.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-knobs-withknobs-using-options--accepts-options",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "f4bf775182dd156e62f5c2ef179ee59bf7ba7931": {
    "id": "f4bf775182dd156e62f5c2ef179ee59bf7ba7931",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Knobs",
      "withKnobs",
      "Select Knob"
    ],
    "storyId": "addons-knobs-withknobs--select-knob",
    "story": {
      "id": "addons-knobs-withknobs--select-knob",
      "kind": "Addons/Knobs/withKnobs",
      "name": "Select Knob",
      "story": "Select Knob",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-knobs/with-knobs.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-knobs-withknobs--select-knob",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "f378f0496e1b1904dd5071f1853e0346231ef27f": {
    "id": "f378f0496e1b1904dd5071f1853e0346231ef27f",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Knobs",
      "withKnobs",
      "tweaks static values"
    ],
    "storyId": "addons-knobs-withknobs--tweaks-static-values",
    "story": {
      "id": "addons-knobs-withknobs--tweaks-static-values",
      "kind": "Addons/Knobs/withKnobs",
      "name": "tweaks static values",
      "story": "tweaks static values",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-knobs/with-knobs.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-knobs-withknobs--tweaks-static-values",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "0b8faf5d9a16aabd9e1b593c152a17636e9223f3": {
    "id": "0b8faf5d9a16aabd9e1b593c152a17636e9223f3",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Knobs",
      "withKnobs",
      "tweaks static values organized in groups"
    ],
    "storyId": "addons-knobs-withknobs--tweaks-static-values-organized-in-groups",
    "story": {
      "id": "addons-knobs-withknobs--tweaks-static-values-organized-in-groups",
      "kind": "Addons/Knobs/withKnobs",
      "name": "tweaks static values organized in groups",
      "story": "tweaks static values organized in groups",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-knobs/with-knobs.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-knobs-withknobs--tweaks-static-values-organized-in-groups",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "6bbc0d09ca0d3026a22337b74de3d6b1221c7c13": {
    "id": "6bbc0d09ca0d3026a22337b74de3d6b1221c7c13",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Knobs",
      "withKnobs",
      "dynamic knobs"
    ],
    "storyId": "addons-knobs-withknobs--dynamic-knobs",
    "story": {
      "id": "addons-knobs-withknobs--dynamic-knobs",
      "kind": "Addons/Knobs/withKnobs",
      "name": "dynamic knobs",
      "story": "dynamic knobs",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-knobs/with-knobs.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-knobs-withknobs--dynamic-knobs",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "18752413fac7b72bd280b9f61f99f68a3f989f83": {
    "id": "18752413fac7b72bd280b9f61f99f68a3f989f83",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Knobs",
      "withKnobs",
      "complex select"
    ],
    "storyId": "addons-knobs-withknobs--complex-select",
    "story": {
      "id": "addons-knobs-withknobs--complex-select",
      "kind": "Addons/Knobs/withKnobs",
      "name": "complex select",
      "story": "complex select",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-knobs/with-knobs.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-knobs-withknobs--complex-select",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "4b976192168900a43709d7d9d0edbed28cebe145": {
    "id": "4b976192168900a43709d7d9d0edbed28cebe145",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Knobs",
      "withKnobs",
      "Options Knob"
    ],
    "storyId": "addons-knobs-withknobs--options-knob",
    "story": {
      "id": "addons-knobs-withknobs--options-knob",
      "kind": "Addons/Knobs/withKnobs",
      "name": "Options Knob",
      "story": "Options Knob",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-knobs/with-knobs.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-knobs-withknobs--options-knob",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "eb2b0fe92636c733c63e2050bccffeec96799798": {
    "id": "eb2b0fe92636c733c63e2050bccffeec96799798",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Knobs",
      "withKnobs",
      "triggers actions via button"
    ],
    "storyId": "addons-knobs-withknobs--triggers-actions-via-button",
    "story": {
      "id": "addons-knobs-withknobs--triggers-actions-via-button",
      "kind": "Addons/Knobs/withKnobs",
      "name": "triggers actions via button",
      "story": "triggers actions via button",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-knobs/with-knobs.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-knobs-withknobs--triggers-actions-via-button",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "22b53b8fa8daf10a9eb53f0799b63ddad560dee2": {
    "id": "22b53b8fa8daf10a9eb53f0799b63ddad560dee2",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Knobs",
      "withKnobs",
      "Button With React Use State"
    ],
    "storyId": "addons-knobs-withknobs--button-with-react-use-state",
    "story": {
      "id": "addons-knobs-withknobs--button-with-react-use-state",
      "kind": "Addons/Knobs/withKnobs",
      "name": "Button With React Use State",
      "story": "Button With React Use State",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-knobs/with-knobs.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-knobs-withknobs--button-with-react-use-state",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "5dee7e14a95cea0a6f816a85bd33fb30be194d50": {
    "id": "5dee7e14a95cea0a6f816a85bd33fb30be194d50",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Knobs",
      "withKnobs",
      "XSS safety"
    ],
    "storyId": "addons-knobs-withknobs--xss-safety",
    "story": {
      "id": "addons-knobs-withknobs--xss-safety",
      "kind": "Addons/Knobs/withKnobs",
      "name": "XSS safety",
      "story": "XSS safety",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-knobs/with-knobs.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-knobs-withknobs--xss-safety",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "060cbab7be595f7a404dc129003cb066742598f9": {
    "id": "060cbab7be595f7a404dc129003cb066742598f9",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Knobs",
      "withKnobs",
      "accepts story parameters"
    ],
    "storyId": "addons-knobs-withknobs--accepts-story-parameters",
    "story": {
      "id": "addons-knobs-withknobs--accepts-story-parameters",
      "kind": "Addons/Knobs/withKnobs",
      "name": "accepts story parameters",
      "story": "accepts story parameters",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-knobs/with-knobs.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-knobs-withknobs--accepts-story-parameters",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "fd13099719741eba994eb95f0cfcfe0adfb7344d": {
    "id": "fd13099719741eba994eb95f0cfcfe0adfb7344d",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Knobs",
      "withKnobs",
      "With Duplicate Decorator"
    ],
    "storyId": "addons-knobs-withknobs--with-duplicate-decorator",
    "story": {
      "id": "addons-knobs-withknobs--with-duplicate-decorator",
      "kind": "Addons/Knobs/withKnobs",
      "name": "With Duplicate Decorator",
      "story": "With Duplicate Decorator",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-knobs/with-knobs.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-knobs-withknobs--with-duplicate-decorator",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "a36d7636f0dd4ea9555bae6e0e4b7c94b0568c4f": {
    "id": "a36d7636f0dd4ea9555bae6e0e4b7c94b0568c4f",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Knobs",
      "withKnobs",
      "With Knob Value To Be Encoded"
    ],
    "storyId": "addons-knobs-withknobs--with-knob-value-to-be-encoded",
    "story": {
      "id": "addons-knobs-withknobs--with-knob-value-to-be-encoded",
      "kind": "Addons/Knobs/withKnobs",
      "name": "With Knob Value To Be Encoded",
      "story": "With Knob Value To Be Encoded",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-knobs/with-knobs.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-knobs-withknobs--with-knob-value-to-be-encoded",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "b8ceab9fedb749bf4f29fe3ded5511920cd04f76": {
    "id": "b8ceab9fedb749bf4f29fe3ded5511920cd04f76",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Links",
      "Button",
      "First"
    ],
    "storyId": "addons-links-button--first",
    "story": {
      "id": "addons-links-button--first",
      "kind": "Addons/Links/Button",
      "name": "First",
      "story": "First",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-links/button.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "addons-links-button--first",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "31c68b627a850a1340a8ffa231f4410bac695409": {
    "id": "31c68b627a850a1340a8ffa231f4410bac695409",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Links",
      "Button",
      "Second"
    ],
    "storyId": "addons-links-button--second",
    "story": {
      "id": "addons-links-button--second",
      "kind": "Addons/Links/Button",
      "name": "Second",
      "story": "Second",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-links/button.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "addons-links-button--second",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "dc326796962e672c0be40c6e61bbf23638ca06e3": {
    "id": "dc326796962e672c0be40c6e61bbf23638ca06e3",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Links",
      "Href",
      "Log"
    ],
    "storyId": "addons-links-href--log",
    "story": {
      "id": "addons-links-href--log",
      "kind": "Addons/Links/Href",
      "name": "Log",
      "story": "Log",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-links/href.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-links-href--log",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "a510ba3777b2536e49b396fb7876d4d15b65c893": {
    "id": "a510ba3777b2536e49b396fb7876d4d15b65c893",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Links",
      "Link",
      "First"
    ],
    "storyId": "addons-links-link--first",
    "story": {
      "id": "addons-links-link--first",
      "kind": "Addons/Links/Link",
      "name": "First",
      "story": "First",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-links/link.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-links-link--first",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "fd13e5b8bbb02a675e403cdd190386f61832a5d8": {
    "id": "fd13e5b8bbb02a675e403cdd190386f61832a5d8",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Links",
      "Link",
      "Second"
    ],
    "storyId": "addons-links-link--second",
    "story": {
      "id": "addons-links-link--second",
      "kind": "Addons/Links/Link",
      "name": "Second",
      "story": "Second",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-links/link.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-links-link--second",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "24e4da32e5f1ac5e8527bad7b077e47fdc3400aa": {
    "id": "24e4da32e5f1ac5e8527bad7b077e47fdc3400aa",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Links",
      "Scroll position",
      "First"
    ],
    "storyId": "addons-links-scroll-position--first",
    "story": {
      "id": "addons-links-scroll-position--first",
      "kind": "Addons/Links/Scroll position",
      "name": "First",
      "story": "First",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-links/scroll.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-links-scroll-position--first",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "97dc0983f319f6b2c3c2877ba314e515e5240d76": {
    "id": "97dc0983f319f6b2c3c2877ba314e515e5240d76",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Links",
      "Scroll position",
      "Second"
    ],
    "storyId": "addons-links-scroll-position--second",
    "story": {
      "id": "addons-links-scroll-position--second",
      "kind": "Addons/Links/Scroll position",
      "name": "Second",
      "story": "Second",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-links/scroll.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-links-scroll-position--second",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "4f535adcc93c7313bd311e24e513ae777bdc1222": {
    "id": "4f535adcc93c7313bd311e24e513ae777bdc1222",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Links",
      "Select",
      "Index"
    ],
    "storyId": "addons-links-select--index",
    "story": {
      "id": "addons-links-select--index",
      "kind": "Addons/Links/Select",
      "name": "Index",
      "story": "Index",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-links/select.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-links-select--index",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "6fb239158625bd2fbf457aedd59ef27a5d7abf81": {
    "id": "6fb239158625bd2fbf457aedd59ef27a5d7abf81",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Links",
      "Select",
      "First"
    ],
    "storyId": "addons-links-select--first",
    "story": {
      "id": "addons-links-select--first",
      "kind": "Addons/Links/Select",
      "name": "First",
      "story": "First",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-links/select.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-links-select--first",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "1e496ca94d4cf91ff2f14ee23ff68dccdc6afa4f": {
    "id": "1e496ca94d4cf91ff2f14ee23ff68dccdc6afa4f",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Links",
      "Select",
      "Second"
    ],
    "storyId": "addons-links-select--second",
    "story": {
      "id": "addons-links-select--second",
      "kind": "Addons/Links/Select",
      "name": "Second",
      "story": "Second",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-links/select.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-links-select--second",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "62548b4f4e5c5904fdf10ea30876de3908c495aa": {
    "id": "62548b4f4e5c5904fdf10ea30876de3908c495aa",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Links",
      "Select",
      "Third"
    ],
    "storyId": "addons-links-select--third",
    "story": {
      "id": "addons-links-select--third",
      "kind": "Addons/Links/Select",
      "name": "Third",
      "story": "Third",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-links/select.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-links-select--third",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "89e2ee7ad9b2ffa45921a809eeca3697927be76f": {
    "id": "89e2ee7ad9b2ffa45921a809eeca3697927be76f",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Options",
      "setting name"
    ],
    "storyId": "addons-options--setting-name",
    "story": {
      "id": "addons-options--setting-name",
      "kind": "Addons/Options",
      "name": "setting name",
      "story": "setting name",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-options.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-options--setting-name",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "a942c99dc48cfff68f1112b752ac8eb5fd6422af": {
    "id": "a942c99dc48cfff68f1112b752ac8eb5fd6422af",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Options",
      "hiding addon panel"
    ],
    "storyId": "addons-options--hiding-addon-panel",
    "story": {
      "id": "addons-options--hiding-addon-panel",
      "kind": "Addons/Options",
      "name": "hiding addon panel",
      "story": "hiding addon panel",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-options.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-options--hiding-addon-panel",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "73e97ca1ac32536e4b61433dcbb5f33c306d7daf": {
    "id": "73e97ca1ac32536e4b61433dcbb5f33c306d7daf",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "QueryParams",
      "mock is true"
    ],
    "storyId": "addons-queryparams--mock-is-true",
    "story": {
      "id": "addons-queryparams--mock-is-true",
      "kind": "Addons/QueryParams",
      "name": "mock is true",
      "story": "mock is true",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-queryparams.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-queryparams--mock-is-true",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "5a405c990278dd0953dc43dc6279bdc9258a3635": {
    "id": "5a405c990278dd0953dc43dc6279bdc9258a3635",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "QueryParams",
      "mock is 4"
    ],
    "storyId": "addons-queryparams--mock-is-4",
    "story": {
      "id": "addons-queryparams--mock-is-4",
      "kind": "Addons/QueryParams",
      "name": "mock is 4",
      "story": "mock is 4",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-queryparams.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-queryparams--mock-is-4",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "85bcb870cbfcdcc42ecf56354bef8b372157158d": {
    "id": "85bcb870cbfcdcc42ecf56354bef8b372157158d",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Storyshots",
      "Block story"
    ],
    "storyId": "addons-storyshots--block",
    "story": {
      "id": "addons-storyshots--block",
      "kind": "Addons/Storyshots",
      "name": "Block story",
      "story": "Block story",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-storyshots.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-storyshots--block",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "8282ecc2e38ed032e34fc1d15fb41845a805f2b7": {
    "id": "8282ecc2e38ed032e34fc1d15fb41845a805f2b7",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Toolbars",
      "Locale"
    ],
    "storyId": "addons-toolbars--locale",
    "story": {
      "id": "addons-toolbars--locale",
      "kind": "Addons/Toolbars",
      "name": "Locale",
      "story": "Locale",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-toolbars.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-toolbars--locale",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "bb15a73add9247e3fb86278b2df5f3161b52b6e6": {
    "id": "bb15a73add9247e3fb86278b2df5f3161b52b6e6",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Viewport",
      "Custom Default (Kindle Fire 2)",
      "Inherited"
    ],
    "storyId": "addons-viewport-custom-default-kindle-fire-2--inherited",
    "story": {
      "id": "addons-viewport-custom-default-kindle-fire-2--inherited",
      "kind": "Addons/Viewport/Custom Default (Kindle Fire 2)",
      "name": "Inherited",
      "story": "Inherited",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-viewport/custom-default.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-viewport-custom-default-kindle-fire-2--inherited",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "e603b8827c6c1f2a7b03f374472166198a3ef301": {
    "id": "e603b8827c6c1f2a7b03f374472166198a3ef301",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Viewport",
      "Custom Default (Kindle Fire 2)",
      "Overridden via \"withViewport\" parameterized decorator"
    ],
    "storyId": "addons-viewport-custom-default-kindle-fire-2--overridden-via-with-viewport-parameterized-decorator",
    "story": {
      "id": "addons-viewport-custom-default-kindle-fire-2--overridden-via-with-viewport-parameterized-decorator",
      "kind": "Addons/Viewport/Custom Default (Kindle Fire 2)",
      "name": "Overridden via \"withViewport\" parameterized decorator",
      "story": "Overridden via \"withViewport\" parameterized decorator",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-viewport/custom-default.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-viewport-custom-default-kindle-fire-2--overridden-via-with-viewport-parameterized-decorator",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "dfa76565cfa6bc03df4eef05eafc24a41b507c5a": {
    "id": "dfa76565cfa6bc03df4eef05eafc24a41b507c5a",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Viewport",
      "Custom Default (Kindle Fire 2)",
      "Disabled"
    ],
    "storyId": "addons-viewport-custom-default-kindle-fire-2--disabled",
    "story": {
      "id": "addons-viewport-custom-default-kindle-fire-2--disabled",
      "kind": "Addons/Viewport/Custom Default (Kindle Fire 2)",
      "name": "Disabled",
      "story": "Disabled",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-viewport/custom-default.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-viewport-custom-default-kindle-fire-2--disabled",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "6bf50903333a597a6ef93fc8bbba5dfb6362e105": {
    "id": "6bf50903333a597a6ef93fc8bbba5dfb6362e105",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Viewport",
      "default"
    ],
    "storyId": "addons-viewport--default-fn",
    "story": {
      "id": "addons-viewport--default-fn",
      "kind": "Addons/Viewport",
      "name": "default",
      "story": "default",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/addon-viewport/default.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "addons-viewport--default-fn",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "d1e924856a8db5c41d557fcefd776ba9eceb13d0": {
    "id": "d1e924856a8db5c41d557fcefd776ba9eceb13d0",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Controls-Sort",
      "None"
    ],
    "storyId": "addons-controls-sort--none",
    "story": {
      "id": "addons-controls-sort--none",
      "kind": "Addons/Controls-Sort",
      "name": "None",
      "story": "None",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/controls-sort.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "addons-controls-sort--none",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "d3589ba44e4f1469ae27172b27fc62709ca835f9": {
    "id": "d3589ba44e4f1469ae27172b27fc62709ca835f9",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Controls-Sort",
      "Alpha"
    ],
    "storyId": "addons-controls-sort--alpha",
    "story": {
      "id": "addons-controls-sort--alpha",
      "kind": "Addons/Controls-Sort",
      "name": "Alpha",
      "story": "Alpha",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/controls-sort.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "addons-controls-sort--alpha",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "15a69f6e3b47282f255a54808b54dc8f689609df": {
    "id": "15a69f6e3b47282f255a54808b54dc8f689609df",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Addons",
      "Controls-Sort",
      "Required First"
    ],
    "storyId": "addons-controls-sort--required-first",
    "story": {
      "id": "addons-controls-sort--required-first",
      "kind": "Addons/Controls-Sort",
      "name": "Required First",
      "story": "Required First",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/controls-sort.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "addons-controls-sort--required-first",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "cd9d63a43e0111cc2f0dd66796e3584598616bd3": {
    "id": "cd9d63a43e0111cc2f0dd66796e3584598616bd3",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Args",
      "Passed To Story"
    ],
    "storyId": "core-args--passed-to-story",
    "story": {
      "id": "core-args--passed-to-story",
      "kind": "Core/Args",
      "name": "Passed To Story",
      "story": "Passed To Story",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/args.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "core-args--passed-to-story",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "35fbf0d44345d0db4be0d7c496a05d4b03894a73": {
    "id": "35fbf0d44345d0db4be0d7c496a05d4b03894a73",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Args",
      "Other Values"
    ],
    "storyId": "core-args--other-values",
    "story": {
      "id": "core-args--other-values",
      "kind": "Core/Args",
      "name": "Other Values",
      "story": "Other Values",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/args.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "core-args--other-values",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "d44e6b215ecd2ff0298594ad99cc7a91e11acade": {
    "id": "d44e6b215ecd2ff0298594ad99cc7a91e11acade",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Args",
      "Different Set"
    ],
    "storyId": "core-args--different-set",
    "story": {
      "id": "core-args--different-set",
      "kind": "Core/Args",
      "name": "Different Set",
      "story": "Different Set",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/args.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "core-args--different-set",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "edf84896b89da505c77ad546292535488efe3ba6": {
    "id": "edf84896b89da505c77ad546292535488efe3ba6",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Decorators",
      "All"
    ],
    "storyId": "core-decorators--all",
    "story": {
      "id": "core-decorators--all",
      "kind": "Core/Decorators",
      "name": "All",
      "story": "All",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/decorators.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "core-decorators--all",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "21b17a65acf476bd27bad5017d6a1b99983abe59": {
    "id": "21b17a65acf476bd27bad5017d6a1b99983abe59",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Errors",
      "story throws exception"
    ],
    "storyId": "core-errors--exception",
    "story": {
      "id": "core-errors--exception",
      "kind": "Core/Errors",
      "name": "story throws exception",
      "story": "story throws exception",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/errors.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "core-errors--exception",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "6299a38a798c1ce08e4faae410ccaaff5d80df2e": {
    "id": "6299a38a798c1ce08e4faae410ccaaff5d80df2e",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Errors",
      "story errors - invariant error"
    ],
    "storyId": "core-errors--bad-component",
    "story": {
      "id": "core-errors--bad-component",
      "kind": "Core/Errors",
      "name": "story errors - invariant error",
      "story": "story errors - invariant error",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/errors.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "core-errors--bad-component",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "46d04b491aca3d83902e319ad7446dc295131a26": {
    "id": "46d04b491aca3d83902e319ad7446dc295131a26",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Errors",
      "story errors - story un-renderable type"
    ],
    "storyId": "core-errors--bad-story",
    "story": {
      "id": "core-errors--bad-story",
      "kind": "Core/Errors",
      "name": "story errors - story un-renderable type",
      "story": "story errors - story un-renderable type",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/errors.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "core-errors--bad-story",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "657f1e9c98fee2d1bab4c77fa2f59265ba83d6ed": {
    "id": "657f1e9c98fee2d1bab4c77fa2f59265ba83d6ed",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Events",
      "Force re-render"
    ],
    "storyId": "core-events--force",
    "story": {
      "id": "core-events--force",
      "kind": "Core/Events",
      "name": "Force re-render",
      "story": "Force re-render",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/events.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "core-events--force",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "6b5302860b836404ac00c88b25f1a9a66e22c56e": {
    "id": "6b5302860b836404ac00c88b25f1a9a66e22c56e",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Global Args",
      "Passed To Story"
    ],
    "storyId": "core-global-args--passed-to-story",
    "story": {
      "id": "core-global-args--passed-to-story",
      "kind": "Core/Global Args",
      "name": "Passed To Story",
      "story": "Passed To Story",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/globals.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "core-global-args--passed-to-story",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "cd597fe9a3548cdf34d6bd4768f5e4f8622b82e1": {
    "id": "cd597fe9a3548cdf34d6bd4768f5e4f8622b82e1",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Global Args",
      "Second Story"
    ],
    "storyId": "core-global-args--second-story",
    "story": {
      "id": "core-global-args--second-story",
      "kind": "Core/Global Args",
      "name": "Second Story",
      "story": "Second Story",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/globals.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "core-global-args--second-story",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "eb49ce6afbfb1085336ba6e46419cdb96a594eaf": {
    "id": "eb49ce6afbfb1085336ba6e46419cdb96a594eaf",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Interleaved exports",
      "First"
    ],
    "storyId": "core-interleaved-exports--first",
    "story": {
      "id": "core-interleaved-exports--first",
      "kind": "Core/Interleaved exports",
      "name": "First",
      "story": "First",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/interleaved-exports.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "core-interleaved-exports--first",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "c0a0a13e06878fc3bf014434980c847db3b2ab0f": {
    "id": "c0a0a13e06878fc3bf014434980c847db3b2ab0f",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Interleaved exports",
      "Second"
    ],
    "storyId": "core-interleaved-exports--second",
    "story": {
      "id": "core-interleaved-exports--second",
      "kind": "Core/Interleaved exports",
      "name": "Second",
      "story": "Second",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/interleaved-exports.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "core-interleaved-exports--second",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "14e7c98d08ca0f052bb938ca21cf18a68eea1a40": {
    "id": "14e7c98d08ca0f052bb938ca21cf18a68eea1a40",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Layout",
      "Default"
    ],
    "storyId": "core-layout--default",
    "story": {
      "id": "core-layout--default",
      "kind": "Core/Layout",
      "name": "Default",
      "story": "Default",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/layout.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "core-layout--default",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "9e04a8c95327ba8df2d7f4a3a9ce633c63ff6a07": {
    "id": "9e04a8c95327ba8df2d7f4a3a9ce633c63ff6a07",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Layout",
      "Padded Block"
    ],
    "storyId": "core-layout--padded-block",
    "story": {
      "id": "core-layout--padded-block",
      "kind": "Core/Layout",
      "name": "Padded Block",
      "story": "Padded Block",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/layout.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "core-layout--padded-block",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "0046116757149c0f1f22c88749464f2b6c866ef0": {
    "id": "0046116757149c0f1f22c88749464f2b6c866ef0",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Layout",
      "Padded Inline"
    ],
    "storyId": "core-layout--padded-inline",
    "story": {
      "id": "core-layout--padded-inline",
      "kind": "Core/Layout",
      "name": "Padded Inline",
      "story": "Padded Inline",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/layout.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "core-layout--padded-inline",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "8bb1e2dd8682900d5d26dcc8c12b04014289546a": {
    "id": "8bb1e2dd8682900d5d26dcc8c12b04014289546a",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Layout",
      "Fullscreen Block"
    ],
    "storyId": "core-layout--fullscreen-block",
    "story": {
      "id": "core-layout--fullscreen-block",
      "kind": "Core/Layout",
      "name": "Fullscreen Block",
      "story": "Fullscreen Block",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/layout.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "core-layout--fullscreen-block",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "7718362ca618aff118f1ce10323ac9c0c257898b": {
    "id": "7718362ca618aff118f1ce10323ac9c0c257898b",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Layout",
      "Fullscreen Inline"
    ],
    "storyId": "core-layout--fullscreen-inline",
    "story": {
      "id": "core-layout--fullscreen-inline",
      "kind": "Core/Layout",
      "name": "Fullscreen Inline",
      "story": "Fullscreen Inline",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/layout.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "core-layout--fullscreen-inline",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "3727581dd5b6e1824051d7e21735751fc759938a": {
    "id": "3727581dd5b6e1824051d7e21735751fc759938a",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Layout",
      "Centered Block"
    ],
    "storyId": "core-layout--centered-block",
    "story": {
      "id": "core-layout--centered-block",
      "kind": "Core/Layout",
      "name": "Centered Block",
      "story": "Centered Block",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/layout.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "core-layout--centered-block",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "7695ea1771406b751ef642a64725092ce53832d7": {
    "id": "7695ea1771406b751ef642a64725092ce53832d7",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Layout",
      "Centered Inline"
    ],
    "storyId": "core-layout--centered-inline",
    "story": {
      "id": "core-layout--centered-inline",
      "kind": "Core/Layout",
      "name": "Centered Inline",
      "story": "Centered Inline",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/layout.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "core-layout--centered-inline",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "e92b83ccb57a49ea05be17e3556d443fef540c30": {
    "id": "e92b83ccb57a49ea05be17e3556d443fef540c30",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Layout",
      "Centered Tall"
    ],
    "storyId": "core-layout--centered-tall",
    "story": {
      "id": "core-layout--centered-tall",
      "kind": "Core/Layout",
      "name": "Centered Tall",
      "story": "Centered Tall",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/layout.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "core-layout--centered-tall",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "0c7605643d76e15af9e4499c68aa9a7e6e6f3778": {
    "id": "0c7605643d76e15af9e4499c68aa9a7e6e6f3778",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Layout",
      "Centered Wide"
    ],
    "storyId": "core-layout--centered-wide",
    "story": {
      "id": "core-layout--centered-wide",
      "kind": "Core/Layout",
      "name": "Centered Wide",
      "story": "Centered Wide",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/layout.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "core-layout--centered-wide",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "6c8c8cd4ea5c6e6f6993e52b3b26f8cf5f55b610": {
    "id": "6c8c8cd4ea5c6e6f6993e52b3b26f8cf5f55b610",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Layout",
      "None"
    ],
    "storyId": "core-layout--none",
    "story": {
      "id": "core-layout--none",
      "kind": "Core/Layout",
      "name": "None",
      "story": "None",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/layout.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "core-layout--none",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "0b7842b9ffdab89f9b838459fbc5d6e77cd201de": {
    "id": "0b7842b9ffdab89f9b838459fbc5d6e77cd201de",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Layout",
      "Invalid"
    ],
    "storyId": "core-layout--invalid",
    "story": {
      "id": "core-layout--invalid",
      "kind": "Core/Layout",
      "name": "Invalid",
      "story": "Invalid",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/layout.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "core-layout--invalid",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "ce9cc386be02bfefa5098be6ca1bd9c710711df0": {
    "id": "ce9cc386be02bfefa5098be6ca1bd9c710711df0",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Layout MDX",
      "defaultValue"
    ],
    "storyId": "core-layout-mdx--default-value",
    "story": {
      "id": "core-layout-mdx--default-value",
      "kind": "Core/Layout MDX",
      "name": "defaultValue",
      "story": "defaultValue",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/layout.stories.mdx",
        "args": {},
        "argTypes": {},
        "__id": "core-layout-mdx--default-value",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "8341150f6f16d5192f01e71bea32b80b3232b9c6": {
    "id": "8341150f6f16d5192f01e71bea32b80b3232b9c6",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Layout MDX",
      "padded"
    ],
    "storyId": "core-layout-mdx--padded",
    "story": {
      "id": "core-layout-mdx--padded",
      "kind": "Core/Layout MDX",
      "name": "padded",
      "story": "padded",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/layout.stories.mdx",
        "args": {},
        "argTypes": {},
        "__id": "core-layout-mdx--padded",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "3187c8b472dfac063abf1e868c54c337cc33cef8": {
    "id": "3187c8b472dfac063abf1e868c54c337cc33cef8",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Layout MDX",
      "fullscreen"
    ],
    "storyId": "core-layout-mdx--fullscreen",
    "story": {
      "id": "core-layout-mdx--fullscreen",
      "kind": "Core/Layout MDX",
      "name": "fullscreen",
      "story": "fullscreen",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/layout.stories.mdx",
        "args": {},
        "argTypes": {},
        "__id": "core-layout-mdx--fullscreen",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "7b63437f8e03ef2bb4b67f9a0fe7e36851506b75": {
    "id": "7b63437f8e03ef2bb4b67f9a0fe7e36851506b75",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Layout MDX",
      "centered"
    ],
    "storyId": "core-layout-mdx--centered",
    "story": {
      "id": "core-layout-mdx--centered",
      "kind": "Core/Layout MDX",
      "name": "centered",
      "story": "centered",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/layout.stories.mdx",
        "args": {},
        "argTypes": {},
        "__id": "core-layout-mdx--centered",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "d65d4712d4bc04d927dde71c7ed85fce4d2af335": {
    "id": "d65d4712d4bc04d927dde71c7ed85fce4d2af335",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Loaders",
      "Story"
    ],
    "storyId": "core-loaders--story",
    "story": {
      "id": "core-loaders--story",
      "kind": "Core/Loaders",
      "name": "Story",
      "story": "Story",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/loaders.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "core-loaders--story",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "ae18ce172ef59e1883582aa1650d5a6bfe37de63": {
    "id": "ae18ce172ef59e1883582aa1650d5a6bfe37de63",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Named Export Order",
      "Story 1"
    ],
    "storyId": "core-named-export-order--story-1",
    "story": {
      "id": "core-named-export-order--story-1",
      "kind": "Core/Named Export Order",
      "name": "Story 1",
      "story": "Story 1",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/named-export-order.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "core-named-export-order--story-1",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "41854a0e886f138de06ffa3002413e38c67e5270": {
    "id": "41854a0e886f138de06ffa3002413e38c67e5270",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Named Export Order",
      "Story 2"
    ],
    "storyId": "core-named-export-order--story-2",
    "story": {
      "id": "core-named-export-order--story-2",
      "kind": "Core/Named Export Order",
      "name": "Story 2",
      "story": "Story 2",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/named-export-order.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "core-named-export-order--story-2",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "82e90f28bea2ef2e3cd68771753db7240b421874": {
    "id": "82e90f28bea2ef2e3cd68771753db7240b421874",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Parameters",
      "passed to story"
    ],
    "storyId": "core-parameters--passed",
    "story": {
      "id": "core-parameters--passed",
      "kind": "Core/Parameters",
      "name": "passed to story",
      "story": "passed to story",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/parameters.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "core-parameters--passed",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "15aa808af7baeeefc165aeedf991e77bc7c6a2bf": {
    "id": "15aa808af7baeeefc165aeedf991e77bc7c6a2bf",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Prefix",
      "Prefix And Name"
    ],
    "storyId": "core-prefix--prefix-and-name",
    "story": {
      "id": "core-prefix--prefix-and-name",
      "kind": "Core/Prefix",
      "name": "Prefix And Name",
      "story": "Prefix And Name",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/prefix.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "core-prefix--prefix-and-name",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "7642e9e0656e6b232d29cfc0062fadc488bbc6eb": {
    "id": "7642e9e0656e6b232d29cfc0062fadc488bbc6eb",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Prefix",
      "Prefix"
    ],
    "storyId": "core-prefix--prefix",
    "story": {
      "id": "core-prefix--prefix",
      "kind": "Core/Prefix",
      "name": "Prefix",
      "story": "Prefix",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/prefix.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "core-prefix--prefix",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "9f5a23a1aa45edcd98fdd674eb47681e767b0c63": {
    "id": "9f5a23a1aa45edcd98fdd674eb47681e767b0c63",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Re-export source loader",
      "Story 1"
    ],
    "storyId": "core-re-export-source-loader--story-1",
    "story": {
      "id": "core-re-export-source-loader--story-1",
      "kind": "Core/Re-export source loader",
      "name": "Story 1",
      "story": "Story 1",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/reexport-source-loader.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "core-re-export-source-loader--story-1",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "bb7bbc8884cde6a895d5a363049f40204d19023d": {
    "id": "bb7bbc8884cde6a895d5a363049f40204d19023d",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Re-export source loader",
      "Story 2"
    ],
    "storyId": "core-re-export-source-loader--story-2",
    "story": {
      "id": "core-re-export-source-loader--story-2",
      "kind": "Core/Re-export source loader",
      "name": "Story 2",
      "story": "Story 2",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/reexport-source-loader.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "core-re-export-source-loader--story-2",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "a28ac6b86d0b9bcc9d8dacb3fd4c53df59282793": {
    "id": "a28ac6b86d0b9bcc9d8dacb3fd4c53df59282793",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Rendering",
      "Counter"
    ],
    "storyId": "core-rendering--counter",
    "story": {
      "id": "core-rendering--counter",
      "kind": "Core/Rendering",
      "name": "Counter",
      "story": "Counter",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/rendering.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "core-rendering--counter",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "f5e814fca87d9e805026c52d408737baad95d6c7": {
    "id": "f5e814fca87d9e805026c52d408737baad95d6c7",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Scroll",
      "story with 100vh padding 1"
    ],
    "storyId": "core-scroll--story-1",
    "story": {
      "id": "core-scroll--story-1",
      "kind": "Core/Scroll",
      "name": "story with 100vh padding 1",
      "story": "story with 100vh padding 1",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/scroll.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "core-scroll--story-1",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "d8970a3376db634b344329eced2f3f47744be2d8": {
    "id": "d8970a3376db634b344329eced2f3f47744be2d8",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Scroll",
      "story with 100vh padding 2"
    ],
    "storyId": "core-scroll--story-2",
    "story": {
      "id": "core-scroll--story-2",
      "kind": "Core/Scroll",
      "name": "story with 100vh padding 2",
      "story": "story with 100vh padding 2",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/scroll.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "core-scroll--story-2",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "525abac0e2d09f3591256c17b0870a30ada2da79": {
    "id": "525abac0e2d09f3591256c17b0870a30ada2da79",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Scroll",
      "story with 100vw+"
    ],
    "storyId": "core-scroll--story-3",
    "story": {
      "id": "core-scroll--story-3",
      "kind": "Core/Scroll",
      "name": "story with 100vw+",
      "story": "story with 100vw+",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/scroll.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "core-scroll--story-3",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "e707363f69afbe73ce70bbf6f541460ce5cd2870": {
    "id": "e707363f69afbe73ce70bbf6f541460ce5cd2870",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Scroll",
      "story with 100vw+ 2"
    ],
    "storyId": "core-scroll--story-4",
    "story": {
      "id": "core-scroll--story-4",
      "kind": "Core/Scroll",
      "name": "story with 100vw+ 2",
      "story": "story with 100vw+ 2",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/core/scroll.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "core-scroll--story-4",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "5959670699e781cc722e633ae69b712db8f27dbb": {
    "id": "5959670699e781cc722e633ae69b712db8f27dbb",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Other",
      "Demo",
      "Button",
      "with text"
    ],
    "storyId": "demo-button-id--with-text",
    "story": {
      "id": "demo-button-id--with-text",
      "kind": "Other/Demo/Button",
      "name": "with text",
      "story": "with text",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/demo/button.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "demo-button-id--with-text",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "f682268e97dbef62647a143a12164733a52c498e": {
    "id": "f682268e97dbef62647a143a12164733a52c498e",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Other",
      "Demo",
      "Button",
      "with some emoji"
    ],
    "storyId": "demo-button-id--with-some-emoji",
    "story": {
      "id": "demo-button-id--with-some-emoji",
      "kind": "Other/Demo/Button",
      "name": "with some emoji",
      "story": "with some emoji",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/demo/button.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "demo-button-id--with-some-emoji",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "c3598e414e74a89d21789d7a335a2941d0a16151": {
    "id": "c3598e414e74a89d21789d7a335a2941d0a16151",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Other",
      "Demo",
      "Button",
      "with counter"
    ],
    "storyId": "demo-button-id--with-counter",
    "story": {
      "id": "demo-button-id--with-counter",
      "kind": "Other/Demo/Button",
      "name": "with counter",
      "story": "with counter",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/demo/button.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "demo-button-id--with-counter",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "f19dbbb669488e521d4d945dcbaa0797b52da87c": {
    "id": "f19dbbb669488e521d4d945dcbaa0797b52da87c",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Other",
      "Demo",
      "ButtonMdx",
      "with text"
    ],
    "storyId": "other-demo-buttonmdx--with-text",
    "story": {
      "id": "other-demo-buttonmdx--with-text",
      "kind": "Other/Demo/ButtonMdx",
      "name": "with text",
      "story": "with text",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/demo/button.stories.mdx",
        "args": {},
        "argTypes": {},
        "__id": "other-demo-buttonmdx--with-text",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "012639f425aaa151e0e466eaa1f6aeb4e4fa32d1": {
    "id": "012639f425aaa151e0e466eaa1f6aeb4e4fa32d1",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Other",
      "Demo",
      "ButtonMdx",
      "with some emoji"
    ],
    "storyId": "other-demo-buttonmdx--with-some-emoji",
    "story": {
      "id": "other-demo-buttonmdx--with-some-emoji",
      "kind": "Other/Demo/ButtonMdx",
      "name": "with some emoji",
      "story": "with some emoji",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/demo/button.stories.mdx",
        "args": {},
        "argTypes": {},
        "__id": "other-demo-buttonmdx--with-some-emoji",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "2a0b8a59800a3f592ab9421d7431e5caee2cde7a": {
    "id": "2a0b8a59800a3f592ab9421d7431e5caee2cde7a",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Other",
      "Demo",
      "ButtonMdx",
      "with counter"
    ],
    "storyId": "other-demo-buttonmdx--with-counter",
    "story": {
      "id": "other-demo-buttonmdx--with-counter",
      "kind": "Other/Demo/ButtonMdx",
      "name": "with counter",
      "story": "with counter",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/demo/button.stories.mdx",
        "args": {},
        "argTypes": {},
        "__id": "other-demo-buttonmdx--with-counter",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "b248411b0e92e59d28996226876c2f8a682456e5": {
    "id": "b248411b0e92e59d28996226876c2f8a682456e5",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Other",
      "Demo",
      "TsButton",
      "Basic"
    ],
    "storyId": "other-demo-tsbutton--basic",
    "story": {
      "id": "other-demo-tsbutton--basic",
      "kind": "Other/Demo/TsButton",
      "name": "Basic",
      "story": "Basic",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/demo/typed-button.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "other-demo-tsbutton--basic",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "643e9b59693c841a09622a31e6776d50352edd38": {
    "id": "643e9b59693c841a09622a31e6776d50352edd38",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Other",
      "Demo",
      "TsButton",
      "Typed"
    ],
    "storyId": "other-demo-tsbutton--typed",
    "story": {
      "id": "other-demo-tsbutton--typed",
      "kind": "Other/Demo/TsButton",
      "name": "Typed",
      "story": "Typed",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/demo/typed-button.stories.tsx",
        "args": {},
        "argTypes": {},
        "__id": "other-demo-tsbutton--typed",
        "__isArgsStory": true
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "d0cfc33b79f60edae93404c45fa97b8a9dec83b2": {
    "id": "d0cfc33b79f60edae93404c45fa97b8a9dec83b2",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Other",
      "Demo",
      "Welcome",
      "to Storybook"
    ],
    "storyId": "other-demo-welcome--to-storybook",
    "story": {
      "id": "other-demo-welcome--to-storybook",
      "kind": "Other/Demo/Welcome",
      "name": "to Storybook",
      "story": "to Storybook",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/demo/welcome.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "other-demo-welcome--to-storybook",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "e76bb696ac9335284e13e183d406291bb140fd3a": {
    "id": "e76bb696ac9335284e13e183d406291bb140fd3a",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Hooks",
      "Checkbox"
    ],
    "storyId": "core-hooks--checkbox",
    "story": {
      "id": "core-hooks--checkbox",
      "kind": "Core/Hooks",
      "name": "Checkbox",
      "story": "Checkbox",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/hooks.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "core-hooks--checkbox",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "75752f70d8b92de206af029de8d9a25262dcf4ff": {
    "id": "75752f70d8b92de206af029de8d9a25262dcf4ff",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Hooks",
      "Input"
    ],
    "storyId": "core-hooks--input",
    "story": {
      "id": "core-hooks--input",
      "kind": "Core/Hooks",
      "name": "Input",
      "story": "Input",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/hooks.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "core-hooks--input",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "0aae5327bd7eab6a4716609dcb580f3885437dd5": {
    "id": "0aae5327bd7eab6a4716609dcb580f3885437dd5",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Hooks",
      "Effect"
    ],
    "storyId": "core-hooks--effect",
    "story": {
      "id": "core-hooks--effect",
      "kind": "Core/Hooks",
      "name": "Effect",
      "story": "Effect",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/hooks.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "core-hooks--effect",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  },
  "566e55689d25ad18ccdeeebb61fd9cc4b7e44d02": {
    "id": "566e55689d25ad18ccdeeebb61fd9cc4b7e44d02",
    "skip": false,
    "browser": "chrome",
    "storyPath": [
      "Core",
      "Hooks",
      "React Hook Checkbox"
    ],
    "storyId": "core-hooks--react-hook-checkbox",
    "story": {
      "id": "core-hooks--react-hook-checkbox",
      "kind": "Core/Hooks",
      "name": "React Hook Checkbox",
      "story": "React Hook Checkbox",
      "parameters": {
        "globals": {
          "foo": "fooValue"
        },
        "globalTypes": {
          "foo": {
            "defaultValue": "fooDefaultValue"
          },
          "bar": {
            "defaultValue": "barDefaultValue"
          },
          "theme": {
            "name": "Theme",
            "description": "Global theme for components",
            "defaultValue": "light",
            "toolbar": {
              "icon": "circlehollow",
              "items": [
                {
                  "value": "light",
                  "icon": "circlehollow",
                  "title": "light"
                },
                {
                  "value": "dark",
                  "icon": "circle",
                  "title": "dark"
                },
                {
                  "value": "side-by-side",
                  "icon": "sidebar",
                  "title": "side by side"
                },
                {
                  "value": "stacked",
                  "icon": "bottombar",
                  "title": "stacked"
                }
              ]
            }
          },
          "locale": {
            "name": "Locale",
            "description": "Internationalization locale",
            "defaultValue": "en",
            "toolbar": {
              "icon": "globe",
              "items": [
                {
                  "value": "en",
                  "right": "ðŸ‡ºðŸ‡¸",
                  "title": "English"
                },
                {
                  "value": "es",
                  "right": "ðŸ‡ªðŸ‡¸",
                  "title": "EspaÃ±ol"
                },
                {
                  "value": "zh",
                  "right": "ðŸ‡¨ðŸ‡³",
                  "title": "ä¸­æ–‡"
                },
                {
                  "value": "kr",
                  "right": "ðŸ‡°ðŸ‡·",
                  "title": "í•œêµ­ì–´"
                }
              ]
            }
          }
        },
        "framework": "react",
        "fileName": "./examples/official-storybook/stories/hooks.stories.js",
        "args": {},
        "argTypes": {},
        "__id": "core-hooks--react-hook-checkbox",
        "__isArgsStory": false
      },
      "args": {},
      "initialArgs": {}
    },
    "fn": "async function storyTest() {\n    var _testFn$call;\n\n    delay ? await new Promise(resolve => setTimeout(resolve, delay)) : void 0;\n    await ((_testFn$call = testFn === null || testFn === void 0 ? void 0 : testFn.call(this)) !== null && _testFn$call !== void 0 ? _testFn$call : this.expect(await this.takeScreenshot()).to.matchImage());\n  }"
  }
}